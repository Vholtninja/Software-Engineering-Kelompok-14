learning-platform/
├── app/
│   ├── Http/
│   │   ├── Controllers/
│   │   │   ├── Auth/
│   │   │   │   ├── AuthenticatedSessionController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Http\Requests\Auth\LoginRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\View\View;

class AuthenticatedSessionController extends Controller
{
    /**
     * Display the login view.
     */
    public function create(): View
    {
        return view('auth.login');
    }

    /**
     * Handle an incoming authentication request.
     */
    public function store(LoginRequest $request): RedirectResponse
    {
        $request->authenticate();

        $request->session()->regenerate();

        return redirect()->intended(route('dashboard', absolute: false));
    }

    /**
     * Destroy an authenticated session.
     */
    public function destroy(Request $request): RedirectResponse
    {
        Auth::guard('web')->logout();

        $request->session()->invalidate();

        $request->session()->regenerateToken();

        return redirect('/');
    }
}

│   │   │   │   ├── ConfirmablePasswordController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Validation\ValidationException;
use Illuminate\View\View;

class ConfirmablePasswordController extends Controller
{
    /**
     * Show the confirm password view.
     */
    public function show(): View
    {
        return view('auth.confirm-password');
    }

    /**
     * Confirm the user's password.
     */
    public function store(Request $request): RedirectResponse
    {
        if (! Auth::guard('web')->validate([
            'email' => $request->user()->email,
            'password' => $request->password,
        ])) {
            throw ValidationException::withMessages([
                'password' => __('auth.password'),
            ]);
        }

        $request->session()->put('auth.password_confirmed_at', time());

        return redirect()->intended(route('dashboard', absolute: false));
    }
}

│   │   │   │   ├── EmailVerificationNotificationController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;

class EmailVerificationNotificationController extends Controller
{
    /**
     * Send a new email verification notification.
     */
    public function store(Request $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false));
        }

        $request->user()->sendEmailVerificationNotification();

        return back()->with('status', 'verification-link-sent');
    }
}

│   │   │   │   ├── EmailVerificationPromptController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;

class EmailVerificationPromptController extends Controller
{
    /**
     * Display the email verification prompt.
     */
    public function __invoke(Request $request): RedirectResponse|View
    {
        return $request->user()->hasVerifiedEmail()
                    ? redirect()->intended(route('dashboard', absolute: false))
                    : view('auth.verify-email');
    }
}

│   │   │   │   ├── NewPasswordController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Auth\Events\PasswordReset;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Str;
use Illuminate\Validation\Rules;
use Illuminate\View\View;

class NewPasswordController extends Controller
{
    /**
     * Display the password reset view.
     */
    public function create(Request $request): View
    {
        return view('auth.reset-password', ['request' => $request]);
    }

    /**
     * Handle an incoming new password request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'token' => ['required'],
            'email' => ['required', 'email'],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        // Here we will attempt to reset the user's password. If it is successful we
        // will update the password on an actual user model and persist it to the
        // database. Otherwise we will parse the error and return the response.
        $status = Password::reset(
            $request->only('email', 'password', 'password_confirmation', 'token'),
            function (User $user) use ($request) {
                $user->forceFill([
                    'password' => Hash::make($request->password),
                    'remember_token' => Str::random(60),
                ])->save();

                event(new PasswordReset($user));
            }
        );

        // If the password was successfully reset, we will redirect the user back to
        // the application's home authenticated view. If there is an error we can
        // redirect them back to where they came from with their error message.
        return $status == Password::PASSWORD_RESET
                    ? redirect()->route('login')->with('status', __($status))
                    : back()->withInput($request->only('email'))
                        ->withErrors(['email' => __($status)]);
    }
}

│   │   │   │   ├── PasswordController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules\Password;

class PasswordController extends Controller
{
    /**
     * Update the user's password.
     */
    public function update(Request $request): RedirectResponse
    {
        $validated = $request->validateWithBag('updatePassword', [
            'current_password' => ['required', 'current_password'],
            'password' => ['required', Password::defaults(), 'confirmed'],
        ]);

        $request->user()->update([
            'password' => Hash::make($validated['password']),
        ]);

        return back()->with('status', 'password-updated');
    }
}

│   │   │   │   ├── PasswordResetLinkController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Password;
use Illuminate\View\View;

class PasswordResetLinkController extends Controller
{
    /**
     * Display the password reset link request view.
     */
    public function create(): View
    {
        return view('auth.forgot-password');
    }

    /**
     * Handle an incoming password reset link request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'email' => ['required', 'email'],
        ]);

        // We will send the password reset link to this user. Once we have attempted
        // to send the link, we will examine the response then see the message we
        // need to show to the user. Finally, we'll send out a proper response.
        $status = Password::sendResetLink(
            $request->only('email')
        );

        return $status == Password::RESET_LINK_SENT
                    ? back()->with('status', __($status))
                    : back()->withInput($request->only('email'))
                        ->withErrors(['email' => __($status)]);
    }
}

│   │   │   │   ├── RegisteredUserController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Auth\Events\Registered;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules;
use Illuminate\View\View;

class RegisteredUserController extends Controller
{
    /**
     * Display the registration view.
     */
    public function create(): View
    {
        return view('auth.register');
    }

    /**
     * Handle an incoming registration request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'lowercase', 'email', 'max:255', 'unique:'.User::class],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
        ]);

        event(new Registered($user));

        Auth::login($user);

        return redirect(route('dashboard', absolute: false));
    }
}

│   │   │   │   └── VerifyEmailController.php
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Auth\EmailVerificationRequest;
use Illuminate\Http\RedirectResponse;

class VerifyEmailController extends Controller
{
    /**
     * Mark the authenticated user's email address as verified.
     */
    public function __invoke(EmailVerificationRequest $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
        }

        if ($request->user()->markEmailAsVerified()) {
            event(new Verified($request->user()));
        }

        return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
    }
}

│   │   │   ├── Controller.php
<?php
// app/Http/Controllers/Controller.php

namespace App\Http\Controllers;

use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Routing\Controller as BaseController;

class Controller extends BaseController
{
    use AuthorizesRequests, ValidatesRequests; // Tambahkan AuthorizesRequests
}
│   │   │   ├── CourseController.php
<?php

namespace App\Http\Controllers;

use App\Models\Course;
use App\Models\Module;
use App\Models\UserProgress;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;

class CourseController extends Controller
{
    use AuthorizesRequests;

    public function index(Request $request)
    {
        $query = Course::where('is_active', true)->with('instructor');

        if ($request->has('search') && $request->search) {
            $query->where('title', 'like', '%' . $request->search . '%')
                  ->orWhere('description', 'like', '%' . $request->search . '%');
        }

        if ($request->has('category') && $request->category) {
            $query->where('category', $request->category);
        }

        if ($request->has('level') && $request->level) {
            $query->where('level', $request->level);
        }

        $courses = $query->paginate(12);
        
        $categories = Course::distinct()->pluck('category');

        return view('courses.index', compact('courses', 'categories'));
    }

    public function show($slug)
    {
        $course = Course::where('slug', $slug)
                       ->with(['instructor', 'modules' => function($query) {
                           $query->where('is_published', true)->orderBy('order');
                       }])
                       ->firstOrFail();

        $isEnrolled = false;
        $progress = null;

        if (auth()->check()) {
            $progress = UserProgress::where('user_id', auth()->id())
                                   ->where('course_id', $course->id)
                                   ->whereNull('module_id')
                                   ->first();
            $isEnrolled = UserProgress::where('user_id', auth()->id())
                                     ->where('course_id', $course->id)
                                     ->exists();
        }

        return view('courses.show', compact('course', 'isEnrolled', 'progress'));
    }

    public function enroll($id)
    {
        $course = Course::findOrFail($id);
        $user = auth()->user();

        $existingProgress = UserProgress::where('user_id', $user->id)
                                       ->where('course_id', $course->id)
                                       ->exists();

        if ($existingProgress) {
            return redirect()->back()->with('error', 'You are already enrolled in this course.');
        }

        UserProgress::create([
            'user_id' => $user->id,
            'course_id' => $course->id,
            'module_id' => null,
            'progress_percentage' => 0,
            'is_completed' => false,
            'time_spent' => 0,
        ]);

        return redirect()->route('courses.learn', $course->slug)
                        ->with('success', 'Successfully enrolled in the course!');
    }

    public function learn($slug)
    {
        $course = Course::where('slug', $slug)
                       ->with(['modules' => function($query) {
                           $query->where('is_published', true)->orderBy('order');
                       }])
                       ->firstOrFail();

        $progress = UserProgress::where('user_id', auth()->id())
                               ->where('course_id', $course->id)
                               ->whereNull('module_id')
                               ->first();

        if (!$progress) {
            return redirect()->route('courses.show', $slug)
                           ->with('error', 'You need to enroll in this course first.');
        }

        $currentModule = $course->modules->first();
        if (request()->has('module')) {
            $requestedModule = $course->modules->where('id', request('module'))->first();
            if ($requestedModule) {
                $currentModule = $requestedModule;
            }
        }

        return view('courses.learn', compact('course', 'currentModule', 'progress'));
    }

    public function completeModule(Request $request, $courseId, $moduleId)
    {
        $user = auth()->user();
        
        $moduleProgress = UserProgress::where('user_id', $user->id)
                                     ->where('course_id', $courseId)
                                     ->where('module_id', $moduleId)
                                     ->first();

        if (!$moduleProgress) {
            UserProgress::create([
                'user_id' => $user->id,
                'course_id' => $courseId,
                'module_id' => $moduleId,
                'progress_percentage' => 100,
                'is_completed' => true,
                'completed_at' => now(),
                'time_spent' => $request->input('time_spent', 0),
            ]);
        } elseif (!$moduleProgress->is_completed) {
            $moduleProgress->update([
                'progress_percentage' => 100,
                'is_completed' => true,
                'completed_at' => now(),
                'time_spent' => $moduleProgress->time_spent + $request->input('time_spent', 0),
            ]);
        }

        $this->updateCourseProgress($user->id, $courseId);

        return response()->json(['success' => true]);
    }

    private function updateCourseProgress($userId, $courseId)
    {
        $course = Course::with(['modules' => function($query) {
            $query->where('is_published', true);
        }])->find($courseId);
        
        $totalModules = $course->modules->count();
        
        if ($totalModules == 0) {
            $overallProgress = 0;
        } else {
            $completedModules = UserProgress::where('user_id', $userId)
                                           ->where('course_id', $courseId)
                                           ->whereNotNull('module_id')
                                           ->where('is_completed', true)
                                           ->count();
            
            $overallProgress = ($completedModules / $totalModules) * 100;
        }

        UserProgress::updateOrCreate(
            [
                'user_id' => $userId,
                'course_id' => $courseId,
                'module_id' => null,
            ],
            [
                'progress_percentage' => round($overallProgress, 2),
                'is_completed' => $overallProgress >= 100,
                'completed_at' => $overallProgress >= 100 ? now() : null,
            ]
        );
    }

    public function create()
    {
        if (!auth()->user()->isTeacher()) {
            abort(403, 'Only teachers and experts can create courses.');
        }
        
        return view('courses.create');
    }

    public function store(Request $request)
    {
        if (!auth()->user()->isTeacher()) {
            abort(403, 'Only teachers and experts can create courses.');
        }

        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'required|string',
            'category' => 'required|string',
            'level' => 'required|in:beginner,intermediate,advanced',
            'thumbnail' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
            'price' => 'nullable|numeric|min:0',
            'duration_minutes' => 'nullable|integer|min:0',
        ]);

        if ($request->hasFile('thumbnail')) {
            $validated['thumbnail'] = $request->file('thumbnail')->store('course-thumbnails', 'public');
        }

        $validated['instructor_id'] = auth()->id();
        $validated['slug'] = Str::slug($validated['title']);

        $course = Course::create($validated);

        return redirect()->route('courses.show', $course->slug)
                        ->with('success', 'Course created successfully!');
    }

    public function edit($slug)
    {
        $course = Course::where('slug', $slug)->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only edit your own courses.');
        }
        
        return view('courses.edit', compact('course'));
    }

    public function update(Request $request, $slug)
    {
        $course = Course::where('slug', $slug)->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only edit your own courses.');
        }

        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'required|string',
            'category' => 'required|string',
            'level' => 'required|in:beginner,intermediate,advanced',
            'thumbnail' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
            'price' => 'nullable|numeric|min:0',
            'duration_minutes' => 'nullable|integer|min:0',
            'is_active' => 'boolean',
        ]);

        if ($request->hasFile('thumbnail')) {
            if ($course->thumbnail) {
                Storage::disk('public')->delete($course->thumbnail);
            }
            $validated['thumbnail'] = $request->file('thumbnail')->store('course-thumbnails', 'public');
        }

        if ($validated['title'] !== $course->title) {
            $validated['slug'] = Str::slug($validated['title']);
        }

        $course->update($validated);

        $enrolledUsers = UserProgress::where('course_id', $course->id)
                                   ->whereNull('module_id')
                                   ->pluck('user_id');

        foreach ($enrolledUsers as $userId) {
            $this->updateCourseProgress($userId, $course->id);
        }

        return redirect()->route('courses.show', $course->slug)
                        ->with('success', 'Course updated successfully!');
    }

    public function destroy($slug)
    {
        $course = Course::where('slug', $slug)->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only delete your own courses.');
        }

        if ($course->thumbnail) {
            Storage::disk('public')->delete($course->thumbnail);
        }

        $course->delete();

        return redirect()->route('courses.index')
                        ->with('success', 'Course deleted successfully!');
    }
}
│   │   │   ├── ForumController.php
<?php
// app/Http/Controllers/ForumController.php

namespace App\Http\Controllers;

use App\Models\ForumCategory;
use App\Models\ForumThread;
use App\Models\ForumReply;
use Illuminate\Http\Request;
use Illuminate\Support\Str;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests; // Tambahkan ini

class ForumController extends Controller
{
    use AuthorizesRequests; // Tambahkan trait ini

    public function index()
    {
        $categories = ForumCategory::where('is_active', true)
                                  ->withCount('threads')
                                  ->orderBy('order')
                                  ->get();

        $recentThreads = ForumThread::with(['user', 'category'])
                                   ->latest()
                                   ->take(10)
                                   ->get();

        $popularThreads = ForumThread::with(['user', 'category'])
                                    ->orderBy('views', 'desc')
                                    ->take(5)
                                    ->get();

        return view('forum.index', compact('categories', 'recentThreads', 'popularThreads'));
    }

    public function category($slug)
    {
        $category = ForumCategory::where('slug', $slug)->firstOrFail();
        
        $threads = ForumThread::where('category_id', $category->id)
                             ->with(['user', 'replies' => function($query) {
                                 $query->latest()->take(1);
                             }])
                             ->withCount('replies')
                             ->orderBy('is_pinned', 'desc')
                             ->latest()
                             ->paginate(20);

        return view('forum.category', compact('category', 'threads'));
    }

    public function show($categorySlug, $threadSlug)
    {
        $category = ForumCategory::where('slug', $categorySlug)->firstOrFail();
        $thread = ForumThread::where('slug', $threadSlug)
                            ->where('category_id', $category->id)
                            ->with(['user', 'replies.user', 'replies.children.user'])
                            ->firstOrFail();

        // Increment views
        $thread->increment('views');

        $replies = $thread->replies()
                         ->whereNull('parent_id')
                         ->with(['user', 'children.user'])
                         ->orderBy('is_best_answer', 'desc')
                         ->orderBy('upvotes', 'desc')
                         ->orderBy('created_at', 'asc')
                         ->paginate(10);

        return view('forum.thread', compact('category', 'thread', 'replies'));
    }

    public function create(Request $request)
    {
        $categories = ForumCategory::where('is_active', true)
                                  ->orderBy('order')
                                  ->get();

        $selectedCategory = null;
        if ($request->has('category')) {
            $selectedCategory = ForumCategory::where('slug', $request->category)->first();
        }

        return view('forum.create-thread', compact('categories', 'selectedCategory'));
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'content' => 'required|string|min:10',
            'category_id' => 'required|exists:forum_categories,id',
        ]);

        $validated['user_id'] = auth()->id();
        $validated['slug'] = Str::slug($validated['title']) . '-' . time();

        $thread = ForumThread::create($validated);

        return redirect()->route('forum.thread', [
            $thread->category->slug, 
            $thread->slug
        ])->with('success', 'Thread created successfully!');
    }

    public function reply(Request $request, $categorySlug, $threadSlug)
    {
        $category = ForumCategory::where('slug', $categorySlug)->firstOrFail();
        $thread = ForumThread::where('slug', $threadSlug)
                            ->where('category_id', $category->id)
                            ->firstOrFail();

        if ($thread->is_locked && !auth()->user()->isModerator()) {
            return redirect()->back()->with('error', 'This thread is locked.');
        }

        $validated = $request->validate([
            'content' => 'required|string|min:5',
            'parent_id' => 'nullable|exists:forum_replies,id',
        ]);

        $validated['user_id'] = auth()->id();
        $validated['thread_id'] = $thread->id;

        ForumReply::create($validated);

        // Update thread replies count
        $thread->increment('replies_count');

        return redirect()->back()->with('success', 'Reply posted successfully!');
    }

    public function upvote(Request $request, $replyId)
    {
        $reply = ForumReply::findOrFail($replyId);
        
        // Simple upvote implementation
        $reply->increment('upvotes');

        return response()->json(['upvotes' => $reply->upvotes]);
    }

    public function markBestAnswer(Request $request, $replyId)
    {
        $reply = ForumReply::findOrFail($replyId);
        $thread = $reply->thread;

        // Only thread creator or moderators can mark best answer
        if ($thread->user_id !== auth()->id() && !auth()->user()->isModerator()) {
            abort(403);
        }

        // Remove previous best answer
        ForumReply::where('thread_id', $thread->id)
                  ->update(['is_best_answer' => false]);

        // Mark new best answer
        $reply->update(['is_best_answer' => true]);

        return response()->json(['success' => true]);
    }

    public function edit($categorySlug, $threadSlug)
    {
        $category = ForumCategory::where('slug', $categorySlug)->firstOrFail();
        $thread = ForumThread::where('slug', $threadSlug)
                            ->where('category_id', $category->id)
                            ->firstOrFail();

        if ($thread->user_id !== auth()->id() && !auth()->user()->isModerator()) {
            abort(403);
        }

        $categories = ForumCategory::where('is_active', true)
                                  ->orderBy('order')
                                  ->get();

        return view('forum.edit-thread', compact('category', 'thread', 'categories'));
    }

    public function update(Request $request, $categorySlug, $threadSlug)
    {
        $category = ForumCategory::where('slug', $categorySlug)->firstOrFail();
        $thread = ForumThread::where('slug', $threadSlug)
                            ->where('category_id', $category->id)
                            ->firstOrFail();

        if ($thread->user_id !== auth()->id() && !auth()->user()->isModerator()) {
            abort(403);
        }

        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'content' => 'required|string|min:10',
            'category_id' => 'required|exists:forum_categories,id',
        ]);

        if ($validated['title'] !== $thread->title) {
            $validated['slug'] = Str::slug($validated['title']) . '-' . time();
        }

        $thread->update($validated);

        return redirect()->route('forum.thread', [
            $thread->category->slug, 
            $thread->slug
        ])->with('success', 'Thread updated successfully!');
    }

    public function destroy($categorySlug, $threadSlug)
    {
        $category = ForumCategory::where('slug', $categorySlug)->firstOrFail();
        $thread = ForumThread::where('slug', $threadSlug)
                            ->where('category_id', $category->id)
                            ->firstOrFail();

        if ($thread->user_id !== auth()->id() && !auth()->user()->isModerator()) {
            abort(403);
        }

        $thread->delete();

        return redirect()->route('forum.category', $category->slug)
                        ->with('success', 'Thread deleted successfully!');
    }

    public function search(Request $request)
    {
        $query = $request->input('q');
        
        if (!$query) {
            return redirect()->route('forum.index');
        }

        $threads = ForumThread::where('title', 'like', "%{$query}%")
                             ->orWhere('content', 'like', "%{$query}%")
                             ->with(['user', 'category'])
                             ->paginate(20);

        return view('forum.search', compact('threads', 'query'));
    }
}
│   │   │   ├── HomeController.php
<?php

namespace App\Http\Controllers;

use App\Models\Course;
use App\Models\ForumThread;
use App\Models\User;
use Illuminate\Http\Request;

class HomeController extends Controller
{
    public function index()
    {
        $featuredCourses = Course::where('is_active', true)
                                ->with('instructor')
                                ->latest()
                                ->take(6)
                                ->get();

        $recentThreads = ForumThread::with(['user', 'category'])
                                   ->latest()
                                   ->take(5)
                                   ->get();

        $stats = [
            'total_courses' => Course::where('is_active', true)->count(),
            'total_students' => User::where('role', 'student')->count(),
            'total_teachers' => User::whereIn('role', ['teacher', 'expert'])->count(),
            'total_discussions' => ForumThread::count(),
        ];

        return view('home', compact('featuredCourses', 'recentThreads', 'stats'));
    }

    public function dashboard()
    {
        $user = auth()->user();
        
        if ($user->role === 'student') {
            return $this->studentDashboard();
        } elseif (in_array($user->role, ['teacher', 'expert'])) {
            return $this->teacherDashboard();
        } else {
            return $this->adminDashboard();
        }
    }

    private function studentDashboard()
    {
        $user = auth()->user();
        
        $enrolledCourses = $user->enrollments()
                               ->with('instructor')
                               ->where('is_active', true)
                               ->get();

        $recentHomework = $user->homework()
                              ->with('course')
                              ->latest()
                              ->take(5)
                              ->get();

        return view('dashboard.student', compact('enrolledCourses', 'recentHomework'));
    }

    private function teacherDashboard()
    {
        $user = auth()->user();
        
        $myCourses = $user->courses()
                         ->withCount('students')
                         ->latest()
                         ->get();

        $pendingHomework = \App\Models\Homework::whereHas('course', function($query) use ($user) {
            $query->where('instructor_id', $user->id);
        })->where('status', 'pending')->count();

        return view('dashboard.teacher', compact('myCourses', 'pendingHomework'));
    }

    private function adminDashboard()
    {
        $totalUsers = User::count();
        $totalCourses = Course::count();
        $totalThreads = ForumThread::count();
        $pendingReports = 0; // Implement later

        return view('dashboard.admin', compact('totalUsers', 'totalCourses', 'totalThreads', 'pendingReports'));
    }
}
│   │   │   ├── HomeworkController.php
<?php
// app/Http/Controllers/HomeworkController.php

namespace App\Http\Controllers;

use App\Models\Homework;
use App\Models\HomeworkAnswer;
use App\Models\Course;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests; // Tambahkan ini

class HomeworkController extends Controller
{
    use AuthorizesRequests; // Tambahkan trait ini

    public function index(Request $request)
    {
        $query = Homework::with(['student', 'course']);

        // Filter based on user role
        if (auth()->user()->role === 'student') {
            $query->where('student_id', auth()->id());
        } elseif (auth()->user()->isTeacher()) {
            $query->whereHas('course', function($q) {
                $q->where('instructor_id', auth()->id());
            });
        }

        // Apply filters
        if ($request->has('status') && $request->status) {
            $query->where('status', $request->status);
        }

        if ($request->has('subject') && $request->subject) {
            $query->where('subject', $request->subject);
        }

        if ($request->has('difficulty') && $request->difficulty) {
            $query->where('difficulty', $request->difficulty);
        }

        $homework = $query->latest()->paginate(15);

        return view('homework.index', compact('homework'));
    }

    public function show($id)
    {
        $homework = Homework::with(['student', 'course', 'answers.teacher'])
                           ->findOrFail($id);

        // Check access permissions
        if (!$this->canViewHomework($homework)) {
            abort(403);
        }

        $answers = $homework->answers()
                           ->with('teacher')
                           ->orderBy('is_best_answer', 'desc')
                           ->orderBy('upvotes', 'desc')
                           ->orderBy('created_at', 'asc')
                           ->get();

        return view('homework.show', compact('homework', 'answers'));
    }

    public function create()
    {
        $courses = Course::where('is_active', true)->get();
        
        // If student, only show enrolled courses
        if (auth()->user()->role === 'student') {
            $courses = auth()->user()->enrollments;
        }

        return view('homework.create', compact('courses'));
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'required|string',
            'question' => 'required|string|min:10',
            'course_id' => 'required|exists:courses,id',
            'subject' => 'required|in:math,science,english,history,other',
            'difficulty' => 'required|in:easy,medium,hard',
            'attachments' => 'nullable|array',
            'attachments.*' => 'file|max:5120', // 5MB max per file
            'due_date' => 'nullable|date|after:now',
        ]);

        // Handle file attachments
        $attachmentPaths = [];
        if ($request->hasFile('attachments')) {
            foreach ($request->file('attachments') as $file) {
                $path = $file->store('homework-attachments', 'public');
                $attachmentPaths[] = [
                    'name' => $file->getClientOriginalName(),
                    'path' => $path,
                    'size' => $file->getSize(),
                    'type' => $file->getClientMimeType(),
                ];
            }
        }

        $validated['student_id'] = auth()->id();
        $validated['attachments'] = $attachmentPaths;

        $homework = Homework::create($validated);

        return redirect()->route('homework.show', $homework->id)
                        ->with('success', 'Homework question submitted successfully!');
    }

    public function answer(Request $request, $id)
    {
        $homework = Homework::findOrFail($id);

        if (!auth()->user()->isTeacher()) {
            abort(403, 'Only teachers and experts can answer homework questions.');
        }

        $validated = $request->validate([
            'answer' => 'required|string|min:10',
            'explanation' => 'nullable|string',
            'attachments' => 'nullable|array',
            'attachments.*' => 'file|max:5120',
        ]);

        // Handle file attachments
        $attachmentPaths = [];
        if ($request->hasFile('attachments')) {
            foreach ($request->file('attachments') as $file) {
                $path = $file->store('homework-answer-attachments', 'public');
                $attachmentPaths[] = [
                    'name' => $file->getClientOriginalName(),
                    'path' => $path,
                    'size' => $file->getSize(),
                    'type' => $file->getClientMimeType(),
                ];
            }
        }

        $validated['homework_id'] = $homework->id;
        $validated['teacher_id'] = auth()->id();
        $validated['attachments'] = $attachmentPaths;

        HomeworkAnswer::create($validated);

        // Update homework status
        if ($homework->status === 'pending') {
            $homework->update(['status' => 'answered']);
        }

        return redirect()->back()->with('success', 'Answer submitted successfully!');
    }

    public function upvoteAnswer(Request $request, $answerId)
    {
        $answer = HomeworkAnswer::findOrFail($answerId);
        $answer->increment('upvotes');

        return response()->json(['upvotes' => $answer->upvotes]);
    }

    public function markBestAnswer(Request $request, $answerId)
    {
        $answer = HomeworkAnswer::findOrFail($answerId);
        $homework = $answer->homework;

        // Only homework creator can mark best answer
        if ($homework->student_id !== auth()->id()) {
            abort(403);
        }

        // Remove previous best answer
        HomeworkAnswer::where('homework_id', $homework->id)
                      ->update(['is_best_answer' => false]);

        // Mark new best answer
        $answer->update(['is_best_answer' => true]);

        return response()->json(['success' => true]);
    }

    public function edit($id)
    {
        $homework = Homework::findOrFail($id);

        if ($homework->student_id !== auth()->id()) {
            abort(403);
        }

        $courses = auth()->user()->enrollments;

        return view('homework.edit', compact('homework', 'courses'));
    }

    public function update(Request $request, $id)
    {
        $homework = Homework::findOrFail($id);

        if ($homework->student_id !== auth()->id()) {
            abort(403);
        }

        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'required|string',
            'question' => 'required|string|min:10',
            'course_id' => 'required|exists:courses,id',
            'subject' => 'required|in:math,science,english,history,other',
            'difficulty' => 'required|in:easy,medium,hard',
            'attachments' => 'nullable|array',
            'attachments.*' => 'file|max:5120',
            'due_date' => 'nullable|date|after:now',
        ]);

        // Handle new attachments
        $existingAttachments = $homework->attachments ?? [];
        if ($request->hasFile('attachments')) {
            foreach ($request->file('attachments') as $file) {
                $path = $file->store('homework-attachments', 'public');
                $existingAttachments[] = [
                    'name' => $file->getClientOriginalName(),
                    'path' => $path,
                    'size' => $file->getSize(),
                    'type' => $file->getClientMimeType(),
                ];
            }
        }

        $validated['attachments'] = $existingAttachments;
        $homework->update($validated);

        return redirect()->route('homework.show', $homework->id)
                        ->with('success', 'Homework updated successfully!');
    }

    public function destroy($id)
    {
        $homework = Homework::findOrFail($id);

        if ($homework->student_id !== auth()->id() && !auth()->user()->isModerator()) {
            abort(403);
        }

        // Delete attachment files
        if ($homework->attachments) {
            foreach ($homework->attachments as $attachment) {
                Storage::disk('public')->delete($attachment['path']);
            }
        }

        // Delete answer attachment files
        foreach ($homework->answers as $answer) {
            if ($answer->attachments) {
                foreach ($answer->attachments as $attachment) {
                    Storage::disk('public')->delete($attachment['path']);
                }
            }
        }

        $homework->delete();

        return redirect()->route('homework.index')
                        ->with('success', 'Homework deleted successfully!');
    }

    private function canViewHomework($homework)
    {
        $user = auth()->user();

        // Student can view their own homework
        if ($homework->student_id === $user->id) {
            return true;
        }

        // Teachers can view homework from their courses
        if ($user->isTeacher() && $homework->course->instructor_id === $user->id) {
            return true;
        }

        // Experts and moderators can view all homework
        if (in_array($user->role, ['expert', 'moderator', 'admin'])) {
            return true;
        }

        return false;
    }
}
│   │   │   ├── ModuleController.php
<?php

namespace App\Http\Controllers;

use App\Models\Course;
use App\Models\Module;
use App\Models\UserProgress;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;

class ModuleController extends Controller
{
    use AuthorizesRequests;

    public function create($courseSlug)
    {
        $course = Course::where('slug', $courseSlug)->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only add modules to your own courses.');
        }
        
        return view('modules.create', compact('course'));
    }

    public function store(Request $request, $courseSlug)
    {
        $course = Course::where('slug', $courseSlug)->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only add modules to your own courses.');
        }

        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
            'content' => 'required|string',
            'video_url' => 'nullable|url',
            'attachments' => 'nullable|array',
            'attachments.*' => 'file|max:10240',
            'order' => 'nullable|integer|min:0',
            'is_published' => 'boolean',
            'duration_minutes' => 'nullable|integer|min:0',
        ]);

        $attachmentPaths = [];
        if ($request->hasFile('attachments')) {
            foreach ($request->file('attachments') as $file) {
                $path = $file->store('module-attachments', 'public');
                $attachmentPaths[] = [
                    'name' => $file->getClientOriginalName(),
                    'path' => $path,
                    'size' => $file->getSize(),
                ];
            }
        }

        $validated['course_id'] = $course->id;
        $validated['attachments'] = $attachmentPaths;
        
        if (!isset($validated['order'])) {
            $validated['order'] = Module::where('course_id', $course->id)->max('order') + 1;
        }

        $validated['is_published'] = $request->has('is_published') ? true : false;

        Module::create($validated);

        $enrolledUsers = UserProgress::where('course_id', $course->id)
                                   ->whereNull('module_id')
                                   ->pluck('user_id');

        foreach ($enrolledUsers as $userId) {
            $this->updateCourseProgress($userId, $course->id);
        }

        return redirect()->route('courses.show', $course->slug)
                        ->with('success', 'Module created successfully!');
    }

    public function show($courseSlug, $moduleId)
    {
        $course = Course::where('slug', $courseSlug)->firstOrFail();
        $module = Module::where('course_id', $course->id)
                        ->where('id', $moduleId)
                        ->with(['quizzes.questions'])
                        ->firstOrFail();

        if (!$module->is_published && $course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(404);
        }

        return view('modules.show', compact('course', 'module'));
    }

    public function edit($courseSlug, $moduleId)
    {
        $course = Course::where('slug', $courseSlug)->firstOrFail();
        $module = Module::where('course_id', $course->id)
                        ->where('id', $moduleId)
                        ->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only edit modules in your own courses.');
        }
        
        return view('modules.edit', compact('course', 'module'));
    }

    public function update(Request $request, $courseSlug, $moduleId)
    {
        $course = Course::where('slug', $courseSlug)->firstOrFail();
        $module = Module::where('course_id', $course->id)
                        ->where('id', $moduleId)
                        ->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only edit modules in your own courses.');
        }

        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
            'content' => 'required|string',
            'video_url' => 'nullable|url',
            'attachments' => 'nullable|array',
            'attachments.*' => 'file|max:10240',
            'order' => 'nullable|integer|min:0',
            'is_published' => 'boolean',
            'duration_minutes' => 'nullable|integer|min:0',
        ]);

        $existingAttachments = $module->attachments ?? [];
        if ($request->hasFile('attachments')) {
            foreach ($request->file('attachments') as $file) {
                $path = $file->store('module-attachments', 'public');
                $existingAttachments[] = [
                    'name' => $file->getClientOriginalName(),
                    'path' => $path,
                    'size' => $file->getSize(),
                ];
            }
        }

        $validated['attachments'] = $existingAttachments;
        $validated['is_published'] = $request->has('is_published') ? true : false;
        
        $module->update($validated);

        $enrolledUsers = UserProgress::where('course_id', $course->id)
                                   ->whereNull('module_id')
                                   ->pluck('user_id');

        foreach ($enrolledUsers as $userId) {
            $this->updateCourseProgress($userId, $course->id);
        }

        return redirect()->route('modules.show', [$course->slug, $module->id])
                        ->with('success', 'Module updated successfully!');
    }

    public function destroy($courseSlug, $moduleId)
    {
        $course = Course::where('slug', $courseSlug)->firstOrFail();
        $module = Module::where('course_id', $course->id)
                        ->where('id', $moduleId)
                        ->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only delete modules in your own courses.');
        }

        if ($module->attachments) {
            foreach ($module->attachments as $attachment) {
                Storage::disk('public')->delete($attachment['path']);
            }
        }

        UserProgress::where('module_id', $moduleId)->delete();

        $module->delete();

        $enrolledUsers = UserProgress::where('course_id', $course->id)
                                   ->whereNull('module_id')
                                   ->pluck('user_id');

        foreach ($enrolledUsers as $userId) {
            $this->updateCourseProgress($userId, $course->id);
        }

        return redirect()->route('courses.show', $course->slug)
                        ->with('success', 'Module deleted successfully!');
    }

    public function removeAttachment(Request $request, $courseSlug, $moduleId)
    {
        $course = Course::where('slug', $courseSlug)->firstOrFail();
        $module = Module::where('course_id', $course->id)
                        ->where('id', $moduleId)
                        ->firstOrFail();
        
        if ($course->instructor_id !== auth()->id() && !auth()->user()->isAdmin()) {
            abort(403, 'You can only modify modules in your own courses.');
        }

        $attachmentIndex = $request->input('attachment_index');
        $attachments = $module->attachments ?? [];
        
        if (isset($attachments[$attachmentIndex])) {
            Storage::disk('public')->delete($attachments[$attachmentIndex]['path']);
            unset($attachments[$attachmentIndex]);
            $module->update(['attachments' => array_values($attachments)]);
        }

        return response()->json(['success' => true]);
    }

    private function updateCourseProgress($userId, $courseId)
    {
        $course = Course::with(['modules' => function($query) {
            $query->where('is_published', true);
        }])->find($courseId);
        
        $totalModules = $course->modules->count();
        
        if ($totalModules == 0) {
            $overallProgress = 0;
        } else {
            $completedModules = UserProgress::where('user_id', $userId)
                                           ->where('course_id', $courseId)
                                           ->whereNotNull('module_id')
                                           ->where('is_completed', true)
                                           ->count();
            
            $overallProgress = ($completedModules / $totalModules) * 100;
        }

        UserProgress::updateOrCreate(
            [
                'user_id' => $userId,
                'course_id' => $courseId,
                'module_id' => null,
            ],
            [
                'progress_percentage' => round($overallProgress, 2),
                'is_completed' => $overallProgress >= 100,
                'completed_at' => $overallProgress >= 100 ? now() : null,
            ]
        );
    }
}
│   │   │   └── ProfileController.php
<?php

namespace App\Http\Controllers;

use App\Http\Requests\ProfileUpdateRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\Storage;
use Illuminate\View\View;

class ProfileController extends Controller
{
    public function show($id = null)
    {
        $user = $id ? \App\Models\User::findOrFail($id) : auth()->user();
        
        $stats = [
            'courses_created' => $user->courses()->count(),
            'courses_enrolled' => $user->enrollments()->count(),
            'forum_threads' => $user->forumThreads()->count(),
            'forum_replies' => $user->forumReplies()->count(),
        ];

        $recentActivity = collect();

        // Get recent courses (enrolled or created)
        if ($user->role === 'student') {
            $recentCourses = $user->enrollments()->latest('pivot_created_at')->take(5)->get();
        } else {
            $recentCourses = $user->courses()->latest()->take(5)->get();
        }

        // Get recent forum activity
        $recentThreads = $user->forumThreads()->with('category')->latest()->take(3)->get();
        
        return view('profile.show', compact('user', 'stats', 'recentCourses', 'recentThreads'));
    }

    public function edit(Request $request): View
    {
        return view('profile.edit', [
            'user' => $request->user(),
        ]);
    }

    public function update(ProfileUpdateRequest $request): RedirectResponse
    {
        $user = $request->user();
        $validated = $request->validated();

        // Handle avatar upload
        if ($request->hasFile('avatar')) {
            // Delete old avatar
            if ($user->avatar) {
                Storage::disk('public')->delete($user->avatar);
            }

            $avatarPath = $request->file('avatar')->store('avatars', 'public');
            $validated['avatar'] = $avatarPath;
        }

        $user->fill($validated);

        if ($user->isDirty('email')) {
            $user->email_verified_at = null;
        }

        $user->save();

        return Redirect::route('profile.edit')->with('status', 'profile-updated');
    }

    public function destroy(Request $request): RedirectResponse
    {
        $request->validateWithBag('userDeletion', [
            'password' => ['required', 'current_password'],
        ]);

        $user = $request->user();

        // Delete avatar
        if ($user->avatar) {
            Storage::disk('public')->delete($user->avatar);
        }

        Auth::logout();

        $user->delete();

        $request->session()->invalidate();
        $request->session()->regenerateToken();

        return Redirect::to('/');
    }
}
│   │   ├── Middleware/
│   │   │   ├── CheckModeratorOrAbove.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class CheckModeratorOrAbove
{
    public function handle(Request $request, Closure $next): Response
    {
        if (!auth()->check()) {
            return redirect()->route('login');
        }

        $allowedRoles = ['moderator', 'admin'];
        
        if (!in_array(auth()->user()->role, $allowedRoles)) {
            abort(403, 'You need moderator or admin privileges to access this page.');
        }

        return $next($request);
    }
}
│   │   │   └── CheckRole.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class CheckRole
{
    public function handle(Request $request, Closure $next, ...$roles): Response
    {
        if (!auth()->check()) {
            return redirect()->route('login');
        }

        $userRole = auth()->user()->role;
        
        if (!in_array($userRole, $roles)) {
            abort(403, 'Unauthorized access.');
        }

        return $next($request);
    }
}
│   │   └── Requests/
│   │       ├── Auth/
│   │       │   ├── LoginRequest.php
<?php

namespace App\Http\Requests\Auth;

use Illuminate\Auth\Events\Lockout;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Str;
use Illuminate\Validation\ValidationException;

class LoginRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'email' => ['required', 'string', 'email'],
            'password' => ['required', 'string'],
        ];
    }

    /**
     * Attempt to authenticate the request's credentials.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function authenticate(): void
    {
        $this->ensureIsNotRateLimited();

        if (! Auth::attempt($this->only('email', 'password'), $this->boolean('remember'))) {
            RateLimiter::hit($this->throttleKey());

            throw ValidationException::withMessages([
                'email' => trans('auth.failed'),
            ]);
        }

        RateLimiter::clear($this->throttleKey());
    }

    /**
     * Ensure the login request is not rate limited.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function ensureIsNotRateLimited(): void
    {
        if (! RateLimiter::tooManyAttempts($this->throttleKey(), 5)) {
            return;
        }

        event(new Lockout($this));

        $seconds = RateLimiter::availableIn($this->throttleKey());

        throw ValidationException::withMessages([
            'email' => trans('auth.throttle', [
                'seconds' => $seconds,
                'minutes' => ceil($seconds / 60),
            ]),
        ]);
    }

    /**
     * Get the rate limiting throttle key for the request.
     */
    public function throttleKey(): string
    {
        return Str::transliterate(Str::lower($this->string('email')).'|'.$this->ip());
    }
}

│   │       └── ProfileUpdateRequest.php
<?php

namespace App\Http\Requests;

use App\Models\User;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class ProfileUpdateRequest extends FormRequest
{
    public function rules(): array
    {
        return [
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'lowercase', 'email', 'max:255', Rule::unique(User::class)->ignore($this->user()->id)],
            'bio' => ['nullable', 'string', 'max:1000'],
            'institution' => ['nullable', 'string', 'max:255'],
            'level' => ['required', 'in:beginner,intermediate,advanced'],
            'avatar' => ['nullable', 'image', 'mimes:jpeg,png,jpg,gif', 'max:2048'],
        ];
    }
}
│   ├── Models/
│   │   ├── Course.php
<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class Course extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'description',
        'slug',
        'category',
        'level',
        'thumbnail',
        'instructor_id',
        'is_active',
        'price',
        'duration_minutes',
    ];

    protected function casts(): array
    {
        return [
            'is_active' => 'boolean',
            'price' => 'decimal:2',
        ];
    }

    protected static function boot()
    {
        parent::boot();
        
        static::creating(function ($course) {
            if (empty($course->slug)) {
                $course->slug = Str::slug($course->title);
            }
        });
    }

    // Relationships
    public function instructor()
    {
        return $this->belongsTo(User::class);
    }

    public function modules()
    {
        return $this->hasMany(Module::class)->orderBy('order');
    }

    public function students()
    {
        return $this->belongsToMany(User::class, 'user_progress')
                    ->withPivot(['progress_percentage', 'is_completed', 'completed_at', 'time_spent'])
                    ->withTimestamps();
    }

    public function homework()
    {
        return $this->hasMany(Homework::class);
    }

    // Helper methods
    public function getThumbnailUrlAttribute()
    {
        return $this->thumbnail ? asset('storage/' . $this->thumbnail) : asset('images/default-course.png');
    }

    public function getFormattedPriceAttribute()
    {
        return $this->price > 0 ? 'Rp ' . number_format($this->price, 0, ',', '.') : 'Gratis';
    }
}
│   │   ├── CourseCategory.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class ForumCategory extends Model
{
    use HasFactory;

    protected $fillable = [
        'name',
        'description',
        'slug',
        'color',
        'order',
        'is_active',
    ];

    protected function casts(): array
    {
        return [
            'is_active' => 'boolean',
        ];
    }

    protected static function boot()
    {
        parent::boot();
        
        static::creating(function ($category) {
            if (empty($category->slug)) {
                $category->slug = Str::slug($category->name);
            }
        });
    }

    // Relationships
    public function threads()
    {
        return $this->hasMany(ForumThread::class, 'category_id');
    }
}
│   │   ├── ForumReply.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class ForumReply extends Model
{
    use HasFactory;

    protected $fillable = [
        'content',
        'user_id',
        'thread_id',
        'parent_id',
        'is_best_answer',
        'upvotes',
        'downvotes',
    ];

    protected function casts(): array
    {
        return [
            'is_best_answer' => 'boolean',
        ];
    }

    // Relationships
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function thread()
    {
        return $this->belongsTo(ForumThread::class);
    }

    public function parent()
    {
        return $this->belongsTo(ForumReply::class, 'parent_id');
    }

    public function children()
    {
        return $this->hasMany(ForumReply::class, 'parent_id');
    }
}
│   │   ├── ForumThread.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class ForumThread extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'content',
        'slug',
        'user_id',
        'category_id',
        'is_pinned',
        'is_locked',
        'views',
        'replies_count',
    ];

    protected function casts(): array
    {
        return [
            'is_pinned' => 'boolean',
            'is_locked' => 'boolean',
        ];
    }

    protected static function boot()
    {
        parent::boot();
        
        static::creating(function ($thread) {
            if (empty($thread->slug)) {
                $thread->slug = Str::slug($thread->title) . '-' . time();
            }
        });
    }

    // Relationships
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function category()
    {
        return $this->belongsTo(ForumCategory::class);
    }

    public function replies()
    {
        return $this->hasMany(ForumReply::class, 'thread_id');
    }

    public function bestAnswer()
    {
        return $this->hasOne(ForumReply::class, 'thread_id')->where('is_best_answer', true);
    }
}
│   │   ├── Homework.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Homework extends Model
{
    use HasFactory;

    protected $table = 'homework';

    protected $fillable = [
        'title',
        'description',
        'question',
        'student_id',
        'course_id',
        'subject',
        'difficulty',
        'attachments',
        'status',
        'due_date',
    ];

    protected function casts(): array
    {
        return [
            'attachments' => 'array',
            'due_date' => 'datetime',
        ];
    }

    // Relationships
    public function student()
    {
        return $this->belongsTo(User::class);
    }

    public function course()
    {
        return $this->belongsTo(Course::class);
    }

    public function answers()
    {
        return $this->hasMany(HomeworkAnswer::class);
    }

    public function bestAnswer()
    {
        return $this->hasOne(HomeworkAnswer::class)->where('is_best_answer', true);
    }
}
│   │   ├── HomeworkAnswer.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class HomeworkAnswer extends Model
{
    use HasFactory;

    protected $fillable = [
        'answer',
        'explanation',
        'homework_id',
        'teacher_id',
        'attachments',
        'is_best_answer',
        'upvotes',
    ];

    protected function casts(): array
    {
        return [
            'attachments' => 'array',
            'is_best_answer' => 'boolean',
        ];
    }

    // Relationships
    public function homework()
    {
        return $this->belongsTo(Homework::class);
    }

    public function teacher()
    {
        return $this->belongsTo(User::class);
    }
}
│   │   ├── Module.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Module extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'description',
        'content',
        'video_url',
        'attachments',
        'course_id',
        'order',
        'is_published',
        'duration_minutes',
    ];

    protected function casts(): array
    {
        return [
            'attachments' => 'array',
            'is_published' => 'boolean',
        ];
    }

    public function course()
    {
        return $this->belongsTo(Course::class);
    }

    public function quizzes()
    {
        return $this->hasMany(Quiz::class);
    }

    public function userProgress()
    {
        return $this->hasMany(UserProgress::class);
    }

    public function isCompletedByUser($userId)
    {
        return $this->userProgress()
                    ->where('user_id', $userId)
                    ->where('is_completed', true)
                    ->exists();
    }
}
│   │   ├── Question.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Question extends Model
{
    use HasFactory;

    protected $fillable = [
        'question',
        'type',
        'options',
        'correct_answer',
        'explanation',
        'quiz_id',
        'points',
    ];

    protected function casts(): array
    {
        return [
            'options' => 'array',
        ];
    }

    // Relationships
    public function quiz()
    {
        return $this->belongsTo(Quiz::class);
    }
}
│   │   ├── Quiz.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Quiz extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'description',
        'module_id',
        'time_limit',
        'passing_score',
        'max_attempts',
        'is_active',
    ];

    protected function casts(): array
    {
        return [
            'is_active' => 'boolean',
        ];
    }

    // Relationships
    public function module()
    {
        return $this->belongsTo(Module::class);
    }

    public function questions()
    {
        return $this->hasMany(Question::class);
    }
}
│   │   ├── User.php
<?php

namespace App\Models;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable implements MustVerifyEmail
{
    use HasFactory, Notifiable;

    protected $fillable = [
        'name',
        'email',
        'password',
        'role',
        'avatar',
        'bio',
        'institution',
        'level',
        'is_verified',
        'points',
    ];

    protected $hidden = [
        'password',
        'remember_token',
    ];

    protected function casts(): array
    {
        return [
            'email_verified_at' => 'datetime',
            'password' => 'hashed',
            'is_verified' => 'boolean',
        ];
    }

    // Relationships
    public function courses()
    {
        return $this->hasMany(Course::class, 'instructor_id');
    }

    public function enrollments()
    {
        return $this->belongsToMany(Course::class, 'user_progress')
                    ->withPivot(['progress_percentage', 'is_completed', 'completed_at', 'time_spent'])
                    ->withTimestamps();
    }

    public function forumThreads()
    {
        return $this->hasMany(ForumThread::class);
    }

    public function forumReplies()
    {
        return $this->hasMany(ForumReply::class);
    }

    public function homework()
    {
        return $this->hasMany(Homework::class, 'student_id');
    }

    public function homeworkAnswers()
    {
        return $this->hasMany(HomeworkAnswer::class, 'teacher_id');
    }

    // Helper methods
public function isTeacher()
{
    return in_array($this->role, ['teacher', 'expert', 'moderator', 'admin']);
}

public function isModerator()
{
    return in_array($this->role, ['moderator', 'admin']);
}

public function isAdmin()
{
    return $this->role === 'admin';
}

    public function getAvatarUrlAttribute()
    {
        return $this->avatar ? asset('storage/' . $this->avatar) : asset('images/default-avatar.png');
    }
}


│   │   └── UserProgress.php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class UserProgress extends Model
{
    use HasFactory;

    protected $table = 'user_progress';

    protected $fillable = [
        'user_id',
        'course_id',
        'module_id',
        'progress_percentage',
        'is_completed',
        'completed_at',
        'time_spent',
    ];

    protected function casts(): array
    {
        return [
            'is_completed' => 'boolean',
            'completed_at' => 'datetime',
        ];
    }

    // Relationships
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function course()
    {
        return $this->belongsTo(Course::class);
    }

    public function module()
    {
        return $this->belongsTo(Module::class);
    }
}
│   ├── Policies/
│   │   └── CoursePolicy.php
<?php

namespace App\Policies;

use App\Models\Course;
use App\Models\User;

class CoursePolicy
{
    public function viewAny(User $user): bool
    {
        return true;
    }

    public function view(User $user, Course $course): bool
    {
        return $course->is_active || $user->id === $course->instructor_id || $user->isAdmin();
    }

    public function create(User $user): bool
    {
        return $user->isTeacher();
    }

    public function update(User $user, Course $course): bool
    {
        return $user->id === $course->instructor_id || $user->isAdmin();
    }

    public function delete(User $user, Course $course): bool
    {
        return $user->id === $course->instructor_id || $user->isAdmin();
    }
}
│   └── Providers/
│       ├── AppServiceProvider.php
<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        //
    }
}

│       └── AuthServiceProvider.php
<?php

namespace App\Providers;

use App\Models\Course;
use App\Policies\CoursePolicy;
use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;

class AuthServiceProvider extends ServiceProvider
{
    protected $policies = [
        Course::class => CoursePolicy::class,
    ];

    public function boot(): void
    {
        //
    }
}
├── bootstrap/
│   ├── cache/
│   │   ├── app.php
<?php

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;
use App\Http\Middleware\CheckRole;
use App\Http\Middleware\CheckModeratorOrAbove;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        api: __DIR__.'/../routes/api.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware) {
        $middleware->alias([
            'role' => CheckRole::class,
            'moderator' => CheckModeratorOrAbove::class,
        ]);
    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();
│   │   └── providers.php
<?php

return [
    App\Providers\AppServiceProvider::class,
];

│   └── app.php
├── config/ (isi folder tidak terlihat, tapi diasumsikan ada file konfigurasi)
├── database/
│   ├── factories/
│   │   └── UserFactory.php
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

class UserFactory extends Factory
{
    protected static ?string $password;

    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'role' => fake()->randomElement(['student', 'teacher', 'expert']),
            'bio' => fake()->optional()->paragraph(),
            'institution' => fake()->optional()->company(),
            'level' => fake()->randomElement(['beginner', 'intermediate', 'advanced']),
            'points' => fake()->numberBetween(0, 5000),
            'is_verified' => fake()->boolean(70),
            'remember_token' => Str::random(10),
        ];
    }

    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}
│   ├── migrations/
│   │   ├── 0001_01_01_000000_create_users_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};

│   │   ├── 0001_01_01_000001_create_cache_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};

│   │   ├── 0001_01_01_000002_create_jobs_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};

│   │   ├── 2025_06_04_085313_add_role_to_users_table.php
// database/migrations/xxxx_add_role_to_users_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->enum('role', ['student', 'teacher', 'expert', 'moderator', 'admin'])
                  ->default('student')->after('email');
            $table->string('avatar')->nullable()->after('role');
            $table->text('bio')->nullable()->after('avatar');
            $table->string('institution')->nullable()->after('bio');
            $table->enum('level', ['beginner', 'intermediate', 'advanced'])
                  ->default('beginner')->after('institution');
            $table->boolean('is_verified')->default(false)->after('level');
            $table->integer('points')->default(0)->after('is_verified');
        });
    }

    public function down(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropColumn(['role', 'avatar', 'bio', 'institution', 'level', 'is_verified', 'points']);
        });
    }
};
│   │   ├── 2025_06_04_085325_create_courses_table.php
// database/migrations/xxxx_create_courses_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('courses', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->text('description');
            $table->string('slug')->unique();
            $table->string('category');
            $table->enum('level', ['beginner', 'intermediate', 'advanced']);
            $table->string('thumbnail')->nullable();
            $table->foreignId('instructor_id')->constrained('users')->onDelete('cascade');
            $table->boolean('is_active')->default(true);
            $table->decimal('price', 10, 2)->default(0);
            $table->integer('duration_minutes')->default(0);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('courses');
    }
};
│   │   ├── 2025_06_04_085334_create_modules_table.php
// database/migrations/xxxx_create_modules_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('modules', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->text('description')->nullable();
            $table->longText('content');
            $table->string('video_url')->nullable();
            $table->json('attachments')->nullable();
            $table->foreignId('course_id')->constrained()->onDelete('cascade');
            $table->integer('order')->default(0);
            $table->boolean('is_published')->default(false);
            $table->integer('duration_minutes')->default(0);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('modules');
    }
};
│   │   ├── 2025_06_04_085342_create_quizzes_table.php
// database/migrations/xxxx_create_quizzes_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('quizzes', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->text('description')->nullable();
            $table->foreignId('module_id')->constrained()->onDelete('cascade');
            $table->integer('time_limit')->default(30); // minutes
            $table->integer('passing_score')->default(70);
            $table->integer('max_attempts')->default(3);
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('quizzes');
    }
};
│   │   ├── 2025_06_04_085351_create_questions_table.php
// database/migrations/xxxx_create_questions_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('questions', function (Blueprint $table) {
            $table->id();
            $table->text('question');
            $table->enum('type', ['multiple_choice', 'essay', 'true_false']);
            $table->json('options')->nullable(); // for multiple choice
            $table->text('correct_answer');
            $table->text('explanation')->nullable();
            $table->foreignId('quiz_id')->constrained()->onDelete('cascade');
            $table->integer('points')->default(1);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('questions');
    }
};
│   │   ├── 2025_06_04_085359_create_user_progress_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        \Illuminate\Support\Facades\DB::statement('DELETE FROM user_progress WHERE user_id IN (SELECT user_id FROM (SELECT user_id, course_id, COUNT(*) as cnt FROM user_progress WHERE module_id IS NULL GROUP BY user_id, course_id HAVING cnt > 1) as duplicates)');
        
        Schema::table('user_progress', function (Blueprint $table) {
            $table->unique(['user_id', 'course_id', 'module_id'], 'user_course_module_unique');
        });
    }

    public function down(): void
    {
        Schema::table('user_progress', function (Blueprint $table) {
            $table->dropUnique('user_course_module_unique');
        });
    }
};
│   │   ├── 2025_06_04_085426_create_forum_categories_table.php
// database/migrations/xxxx_create_forum_categories_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('forum_categories', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->text('description')->nullable();
            $table->string('slug')->unique();
            $table->string('color')->default('#007bff');
            $table->integer('order')->default(0);
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('forum_categories');
    }
};
│   │   ├── 2025_06_04_085451_create_forum_threads_table.php
// database/migrations/xxxx_create_forum_threads_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('forum_threads', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->text('content');
            $table->string('slug')->unique();
            $table->foreignId('user_id')->constrained()->onDelete('cascade');
            $table->foreignId('category_id')->constrained('forum_categories')->onDelete('cascade');
            $table->boolean('is_pinned')->default(false);
            $table->boolean('is_locked')->default(false);
            $table->integer('views')->default(0);
            $table->integer('replies_count')->default(0);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('forum_threads');
    }
};
│   │   ├── 2025_06_04_085500_create_forum_replies_table.php
// database/migrations/xxxx_create_forum_replies_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('forum_replies', function (Blueprint $table) {
            $table->id();
            $table->text('content');
            $table->foreignId('user_id')->constrained()->onDelete('cascade');
            $table->foreignId('thread_id')->constrained('forum_threads')->onDelete('cascade');
            $table->foreignId('parent_id')->nullable()->constrained('forum_replies')->onDelete('cascade');
            $table->boolean('is_best_answer')->default(false);
            $table->integer('upvotes')->default(0);
            $table->integer('downvotes')->default(0);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('forum_replies');
    }
};
│   │   ├── 2025_06_04_085510_create_homework_table.php
// database/migrations/xxxx_create_homework_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('homework', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->text('description');
            $table->text('question');
            $table->foreignId('student_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('course_id')->constrained()->onDelete('cascade');
            $table->enum('subject', ['math', 'science', 'english', 'history', 'other']);
            $table->enum('difficulty', ['easy', 'medium', 'hard']);
            $table->json('attachments')->nullable();
            $table->enum('status', ['pending', 'answered', 'closed'])->default('pending');
            $table->timestamp('due_date')->nullable();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('homework');
    }
};
│   │   ├── 2025_06_04_085518_create_homework_answers_table.php
// database/migrations/xxxx_create_homework_answers_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('homework_answers', function (Blueprint $table) {
            $table->id();
            $table->text('answer');
            $table->text('explanation')->nullable();
            $table->foreignId('homework_id')->constrained()->onDelete('cascade');
            $table->foreignId('teacher_id')->constrained('users')->onDelete('cascade');
            $table->json('attachments')->nullable();
            $table->boolean('is_best_answer')->default(false);
            $table->integer('upvotes')->default(0);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('homework_answers');
    }
};
│   │   └── 2025_06_04_105149_fix_user_progress_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        //
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        //
    }
};

│   └── seeders/
│       ├── CourseSeeder.php
<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class CourseSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //
    }
}

│       ├── DatabaseSeeder.php
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    public function run(): void
    {
        $this->call([
            UserSeeder::class,
            ForumCategorySeeder::class,
            // CourseSeeder::class, // Uncomment when ready
        ]);
    }
}
│       ├── ForumCategorySeeder.php
<?php

namespace Database\Seeders;

use App\Models\ForumCategory;
use Illuminate\Database\Seeder;

class ForumCategorySeeder extends Seeder
{
    public function run(): void
    {
        $categories = [
            [
                'name' => 'General Discussion',
                'description' => 'General topics and discussions about learning',
                'color' => '#6366f1',
                'order' => 1,
            ],
            [
                'name' => 'Course Help',
                'description' => 'Get help with specific courses and assignments',
                'color' => '#059669',
                'order' => 2,
            ],
            [
                'name' => 'Technical Support',
                'description' => 'Technical issues and platform support',
                'color' => '#dc2626',
                'order' => 3,
            ],
            [
                'name' => 'Study Groups',
                'description' => 'Form study groups and collaborate',
                'color' => '#7c3aed',
                'order' => 4,
            ],
            [
                'name' => 'Job & Career',
                'description' => 'Career advice and job opportunities',
                'color' => '#ea580c',
                'order' => 5,
            ],
        ];

        foreach ($categories as $category) {
            ForumCategory::create($category);
        }
    }
}
│       └── UserSeeder.php
<?php

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\Hash;

class UserSeeder extends Seeder
{
    public function run(): void
    {
        // Admin
        User::create([
            'name' => 'Admin User',
            'email' => 'admin@gmail.com',
            'password' => Hash::make('password'),
            'role' => 'admin',
            'is_verified' => true,
            'email_verified_at' => now(),
        ]);

        // Teacher
        User::create([
            'name' => 'John Teacher',
            'email' => 'teacher@gmail.com',
            'password' => Hash::make('password'),
            'role' => 'teacher',
            'bio' => 'Experienced mathematics teacher with 10+ years of teaching experience.',
            'institution' => 'Tech University',
            'is_verified' => true,
            'points' => 1500,
            'email_verified_at' => now(),
        ]);

        // Expert
        User::create([
            'name' => 'Jane Expert',
            'email' => 'expert@gmail.com',
            'password' => Hash::make('password'),
            'role' => 'expert',
            'bio' => 'Software engineering expert specializing in web development.',
            'institution' => 'Tech Corp',
            'level' => 'advanced',
            'is_verified' => true,
            'points' => 2500,
            'email_verified_at' => now(),
        ]);

        // Student
        User::create([
            'name' => 'Alice Student',
            'email' => 'student@gmail.com',
            'password' => Hash::make('password'),
            'role' => 'student',
            'bio' => 'Computer Science student passionate about learning new technologies.',
            'institution' => 'State University',
            'level' => 'intermediate',
            'points' => 750,
            'email_verified_at' => now(),
        ]);

        // Create more sample users
        User::factory(20)->create();
    }
}
├── node_modules/ (isi folder tidak terlihat, tapi diasumsikan ada banyak file)
├── public/ (isi folder tidak terlihat, tapi diasumsikan ada file statis)
├── resources/
│   ├── css/ (isi folder tidak terlihat, tapi diasumsikan ada file CSS)
│   ├── js/ (isi folder tidak terlihat, tapi diasumsikan ada file JavaScript)
│   └── views/
│       ├── admin/
│       │   └── index.blade.php
<!-- resources/views/admin/index.blade.php -->
<x-app-layout>
    <x-slot name="title">Admin Panel - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <h2>Admin Panel</h2>
        <p>Welcome to the admin panel. More features coming soon!</p>
        
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5>User Management</h5>
                        <p>Manage user accounts and roles</p>
                        <a href="#" class="btn btn-primary">Manage Users</a>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5>Course Management</h5>
                        <p>Review and moderate courses</p>
                        <a href="{{ route('courses.index') }}" class="btn btn-primary">View Courses</a>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5>Forum Moderation</h5>
                        <p>Moderate forum discussions</p>
                        <a href="{{ route('forum.index') }}" class="btn btn-primary">Forum</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       ├── auth/
│       │   ├── login.blade.php
<!-- resources/views/auth/login.blade.php -->
<x-guest-layout>
    <div class="container-fluid">
        <div class="row min-vh-100">
            <!-- Left side - Image -->
            <div class="col-lg-6 d-none d-lg-block bg-primary">
                <div class="d-flex align-items-center justify-content-center h-100">
                    <div class="text-center text-white">
                        <i class="bi bi-mortarboard-fill display-1 mb-4"></i>
                        <h2 class="mb-3">Welcome Back!</h2>
                        <p class="lead">Continue your learning journey with our amazing community</p>
                    </div>
                </div>
            </div>

            <!-- Right side - Form -->
            <div class="col-lg-6">
                <div class="d-flex align-items-center justify-content-center h-100 py-5">
                    <div class="w-100" style="max-width: 400px;">
                        <div class="text-center mb-4">
                            <h3 class="fw-bold">Sign In</h3>
                            <p class="text-muted">Enter your credentials to access your account</p>
                        </div>

                        <!-- Session Status -->
                        @if (session('status'))
                            <div class="alert alert-success" role="alert">
                                {{ session('status') }}
                            </div>
                        @endif

                        <form method="POST" action="{{ route('login') }}">
                            @csrf

                            <!-- Email Address -->
                            <div class="mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control @error('email') is-invalid @enderror" 
                                       id="email" name="email" value="{{ old('email') }}" required autofocus>
                                @error('email')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <!-- Password -->
                            <div class="mb-3">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" class="form-control @error('password') is-invalid @enderror" 
                                       id="password" name="password" required>
                                @error('password')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <!-- Remember Me -->
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="remember_me" name="remember">
                                    <label class="form-check-label" for="remember_me">
                                        Remember me
                                    </label>
                                </div>
                            </div>

                            <div class="d-grid mb-3">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-box-arrow-in-right me-2"></i>Sign In
                                </button>
                            </div>

                            <div class="text-center">
                                @if (Route::has('password.request'))
                                    <a href="{{ route('password.request') }}" class="text-decoration-none">
                                        Forgot your password?
                                    </a>
                                @endif
                            </div>
                        </form>

                        <hr class="my-4">

                        <div class="text-center">
                            <p class="text-muted">Don't have an account?</p>
                            <a href="{{ route('register') }}" class="btn btn-outline-primary">
                                <i class="bi bi-person-plus me-2"></i>Create Account
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-guest-layout>
│       │   └── register.blade.php
<!-- resources/views/auth/register.blade.php -->
<x-guest-layout>
    <div class="container-fluid">
        <div class="row min-vh-100">
            <!-- Left side - Image -->
            <div class="col-lg-6 d-none d-lg-block bg-primary">
                <div class="d-flex align-items-center justify-content-center h-100">
                    <div class="text-center text-white">
                        <i class="bi bi-mortarboard-fill display-1 mb-4"></i>
                        <h2 class="mb-3">Join Our Community!</h2>
                        <p class="lead">Start your learning journey with thousands of courses and expert instructors</p>
                    </div>
                </div>
            </div>

            <!-- Right side - Form -->
            <div class="col-lg-6">
                <div class="d-flex align-items-center justify-content-center h-100 py-5">
                    <div class="w-100" style="max-width: 400px;">
                        <div class="text-center mb-4">
                            <h3 class="fw-bold">Create Account</h3>
                            <p class="text-muted">Fill in your information to get started</p>
                        </div>

                        <form method="POST" action="{{ route('register') }}">
                            @csrf

                            <!-- Name -->
                            <div class="mb-3">
                                <label for="name" class="form-label">Full Name</label>
                                <input type="text" class="form-control @error('name') is-invalid @enderror" 
                                       id="name" name="name" value="{{ old('name') }}" required autofocus>
                                @error('name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <!-- Email Address -->
                            <div class="mb-3">
                                <label for="email" class="form-label">Email Address</label>
                                <input type="email" class="form-control @error('email') is-invalid @enderror" 
                                       id="email" name="email" value="{{ old('email') }}" required>
                                @error('email')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <!-- Role -->
                            <div class="mb-3">
                                <label for="role" class="form-label">I am a...</label>
                                <select class="form-select @error('role') is-invalid @enderror" id="role" name="role" required>
                                    <option value="">Select your role</option>
                                    <option value="student" {{ old('role') === 'student' ? 'selected' : '' }}>Student</option>
                                    <option value="teacher" {{ old('role') === 'teacher' ? 'selected' : '' }}>Teacher</option>
                                    <option value="expert" {{ old('role') === 'expert' ? 'selected' : '' }}>Expert/Tutor</option>
                                </select>
                                @error('role')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <!-- Password -->
                            <div class="mb-3">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" class="form-control @error('password') is-invalid @enderror" 
                                       id="password" name="password" required>
                                @error('password')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <!-- Confirm Password -->
                            <div class="mb-3">
                                <label for="password_confirmation" class="form-label">Confirm Password</label>
                                <input type="password" class="form-control" 
                                       id="password_confirmation" name="password_confirmation" required>
                            </div>

                            <div class="d-grid mb-3">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-person-plus me-2"></i>Create Account
                                </button>
                            </div>
                        </form>

                        <hr class="my-4">

                        <div class="text-center">
                            <p class="text-muted">Already have an account?</p>
                            <a href="{{ route('login') }}" class="btn btn-outline-primary">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Sign In
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-guest-layout>
│       ├── components/
│       │   ├── course-card.blade.php
<!-- resources/views/components/course-card.blade.php -->
@props(['course'])

<div class="col">
    <div class="card h-100 course-card">
        <img src="{{ $course->thumbnail_url }}" class="card-img-top" alt="{{ $course->title }}" style="height: 200px; object-fit: cover;">
        <div class="card-body d-flex flex-column">
            <div class="d-flex justify-content-between align-items-start mb-2">
                <span class="badge bg-primary">{{ ucfirst($course->level) }}</span>
                <span class="badge bg-secondary">{{ ucfirst($course->category) }}</span>
            </div>
            
            <h5 class="card-title">{{ $course->title }}</h5>
            <p class="card-text text-muted flex-grow-1">{{ Str::limit($course->description, 100) }}</p>
            
            <div class="d-flex align-items-center mb-3">
                <img src="{{ $course->instructor->avatar_url }}" alt="{{ $course->instructor->name }}" class="avatar avatar-sm me-2">
                <small class="text-muted">{{ $course->instructor->name }}</small>
            </div>
            
            <div class="d-flex justify-content-between align-items-center">
                <span class="h6 text-primary mb-0">{{ $course->formatted_price }}</span>
                <a href="{{ route('courses.show', $course->slug) }}" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-eye me-1"></i>View Details
                </a>
            </div>
        </div>
    </div>
</div>
│       │   └── thread-card.blade.php
<!-- resources/views/components/thread-card.blade.php -->
@props(['thread'])

<div class="card forum-card mb-3">
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-start">
            <div class="flex-grow-1">
                <h6 class="card-title mb-2">
                    <a href="{{ route('forum.thread', [$thread->category->slug, $thread->slug]) }}" class="text-decoration-none">
                        @if($thread->is_pinned)
                            <i class="bi bi-pin-angle-fill text-warning me-1"></i>
                        @endif
                        {{ $thread->title }}
                    </a>
                </h6>
                
                <p class="card-text text-muted small">{{ Str::limit(strip_tags($thread->content), 120) }}</p>
                
                <div class="d-flex align-items-center">
                    <img src="{{ $thread->user->avatar_url }}" alt="{{ $thread->user->name }}" class="avatar avatar-sm me-2">
                    <small class="text-muted">
                        by {{ $thread->user->name }} 
                        <span class="mx-1">•</span>
                        {{ $thread->created_at->diffForHumans() }}
                        <span class="mx-1">•</span>
                        <a href="{{ route('forum.category', $thread->category->slug) }}" class="text-decoration-none">
                            <span class="badge" style="background-color: {{ $thread->category->color }};">
                                {{ $thread->category->name }}
                            </span>
                        </a>
                    </small>
                </div>
            </div>
            
            <div class="text-end">
                <div class="d-flex align-items-center text-muted small">
                    <i class="bi bi-eye me-1"></i>{{ $thread->views }}
                    <span class="mx-2">•</span>
                    <i class="bi bi-chat me-1"></i>{{ $thread->replies_count }}
                </div>
                @if($thread->bestAnswer)
                    <i class="bi bi-check-circle-fill text-success" title="Has best answer"></i>
                @endif
            </div>
        </div>
    </div>
</div>
│       ├── courses/
│       │   ├── create.blade.php
<!-- resources/views/courses/create.blade.php -->
<x-app-layout>
    <x-slot name="title">Create Course - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">Create New Course</h4>
                    </div>
                    <div class="card-body">
                        <form action="{{ route('courses.store') }}" method="POST" enctype="multipart/form-data">
                            @csrf
                            
                            <div class="mb-3">
                                <label for="title" class="form-label">Course Title</label>
                                <input type="text" class="form-control @error('title') is-invalid @enderror" 
                                       id="title" name="title" value="{{ old('title') }}" required>
                                @error('title')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control @error('description') is-invalid @enderror" 
                                          id="description" name="description" rows="4" required>{{ old('description') }}</textarea>
                                @error('description')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="category" class="form-label">Category</label>
                                    <input type="text" class="form-control @error('category') is-invalid @enderror" 
                                           id="category" name="category" value="{{ old('category') }}" required>
                                    @error('category')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                                <div class="col-md-6">
                                    <label for="level" class="form-label">Level</label>
                                    <select class="form-select @error('level') is-invalid @enderror" id="level" name="level" required>
                                        <option value="">Select Level</option>
                                        <option value="beginner" {{ old('level') === 'beginner' ? 'selected' : '' }}>Beginner</option>
                                        <option value="intermediate" {{ old('level') === 'intermediate' ? 'selected' : '' }}>Intermediate</option>
                                        <option value="advanced" {{ old('level') === 'advanced' ? 'selected' : '' }}>Advanced</option>
                                    </select>
                                    @error('level')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="thumbnail" class="form-label">Course Thumbnail</label>
                                <input type="file" class="form-control @error('thumbnail') is-invalid @enderror" 
                                       id="thumbnail" name="thumbnail" accept="image/*">
                                @error('thumbnail')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Recommended size: 800x450px (16:9 ratio)</div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="price" class="form-label">Price (IDR)</label>
                                    <input type="number" class="form-control @error('price') is-invalid @enderror" 
                                           id="price" name="price" value="{{ old('price', 0) }}" min="0" step="1000">
                                    @error('price')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                    <div class="form-text">Set to 0 for free course</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="duration_minutes" class="form-label">Duration (minutes)</label>
                                    <input type="number" class="form-control @error('duration_minutes') is-invalid @enderror" 
                                           id="duration_minutes" name="duration_minutes" value="{{ old('duration_minutes', 0) }}" min="0">
                                    @error('duration_minutes')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <a href="{{ route('courses.index') }}" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check me-2"></i>Create Course
                                    <span class="loading">
                                        <i class="bi bi-hourglass-split me-2"></i>Creating...
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       │   ├── edit.blade.php
<!-- resources/views/courses/edit.blade.php -->
<x-app-layout>
    <x-slot name="title">Edit {{ $course->title }} - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">Edit Course: {{ $course->title }}</h4>
                    </div>
                    <div class="card-body">
                        <form action="{{ route('courses.update', $course->slug) }}" method="POST" enctype="multipart/form-data">
                            @csrf
                            @method('PUT')
                            
                            <div class="mb-3">
                                <label for="title" class="form-label">Course Title</label>
                                <input type="text" class="form-control @error('title') is-invalid @enderror" 
                                       id="title" name="title" value="{{ old('title', $course->title) }}" required>
                                @error('title')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control @error('description') is-invalid @enderror" 
                                          id="description" name="description" rows="4" required>{{ old('description', $course->description) }}</textarea>
                                @error('description')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="category" class="form-label">Category</label>
                                    <input type="text" class="form-control @error('category') is-invalid @enderror" 
                                           id="category" name="category" value="{{ old('category', $course->category) }}" required>
                                    @error('category')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                                <div class="col-md-6">
                                    <label for="level" class="form-label">Level</label>
                                    <select class="form-select @error('level') is-invalid @enderror" id="level" name="level" required>
                                        <option value="">Select Level</option>
                                        <option value="beginner" {{ old('level', $course->level) === 'beginner' ? 'selected' : '' }}>Beginner</option>
                                        <option value="intermediate" {{ old('level', $course->level) === 'intermediate' ? 'selected' : '' }}>Intermediate</option>
                                        <option value="advanced" {{ old('level', $course->level) === 'advanced' ? 'selected' : '' }}>Advanced</option>
                                    </select>
                                    @error('level')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="thumbnail" class="form-label">Course Thumbnail</label>
                                @if($course->thumbnail)
                                    <div class="mb-2">
                                        <img src="{{ $course->thumbnail_url }}" alt="Current thumbnail" class="img-thumbnail" style="max-width: 200px;">
                                        <div class="form-text">Current thumbnail</div>
                                    </div>
                                @endif
                                <input type="file" class="form-control @error('thumbnail') is-invalid @enderror" 
                                       id="thumbnail" name="thumbnail" accept="image/*">
                                @error('thumbnail')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Leave empty to keep current thumbnail</div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="price" class="form-label">Price (IDR)</label>
                                    <input type="number" class="form-control @error('price') is-invalid @enderror" 
                                           id="price" name="price" value="{{ old('price', $course->price) }}" min="0" step="1000">
                                    @error('price')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                                <div class="col-md-6">
                                    <label for="duration_minutes" class="form-label">Duration (minutes)</label>
                                    <input type="number" class="form-control @error('duration_minutes') is-invalid @enderror" 
                                           id="duration_minutes" name="duration_minutes" value="{{ old('duration_minutes', $course->duration_minutes) }}" min="0">
                                    @error('duration_minutes')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="is_active" name="is_active" value="1" 
                                           {{ old('is_active', $course->is_active) ? 'checked' : '' }}>
                                    <label class="form-check-label" for="is_active">
                                        Course is active and visible to students
                                    </label>
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <a href="{{ route('courses.show', $course->slug) }}" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check me-2"></i>Update Course
                                    <span class="loading">
                                        <i class="bi bi-hourglass-split me-2"></i>Updating...
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Course Modules -->
                <div class="card mt-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Course Modules</h5>
                        <a href="{{ route('modules.create', $course->slug) }}" class="btn btn-sm btn-primary">
                            <i class="bi bi-plus me-1"></i>Add Module
                        </a>
                    </div>
                    <div class="card-body">
                        @if($course->modules->count() > 0)
                            @foreach($course->modules as $index => $module)
                                <div class="d-flex align-items-center justify-content-between p-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                    <div class="d-flex align-items-center">
                                        <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 30px; height: 30px; font-size: 14px;">
                                            {{ $index + 1 }}
                                        </div>
                                        <div>
                                            <h6 class="mb-0">{{ $module->title }}</h6>
                                            <small class="text-muted">
                                                {{ $module->duration_minutes }}m
                                                @if(!$module->is_published)
                                                    <span class="badge bg-warning ms-2">Draft</span>
                                                @endif
                                            </small>
                                        </div>
                                    </div>
                                    <div class="btn-group btn-group-sm">
                                        <a href="{{ route('modules.show', [$course->slug, $module->id]) }}" class="btn btn-outline-primary">View</a>
                                        <a href="{{ route('modules.edit', [$course->slug, $module->id]) }}" class="btn btn-outline-secondary">Edit</a>
                                        <button class="btn btn-outline-danger" onclick="deleteModule({{ $module->id }})">Delete</button>
                                    </div>
                                </div>
                            @endforeach
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-book display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No modules yet</h6>
                                <a href="{{ route('modules.create', $course->slug) }}" class="btn btn-primary">Add First Module</a>
                            </div>
                        @endif
                    </div>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        function deleteModule(moduleId) {
            if (confirm('Are you sure you want to delete this module? This action cannot be undone.')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/courses/{{ $course->slug }}/modules/${moduleId}`;
                form.innerHTML = `
                    @csrf
                    @method('DELETE')
                `;
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
    @endpush
</x-app-layout>
│       │   ├── index.blade.php
<!-- resources/views/courses/index.blade.php -->
<x-app-layout>
    <x-slot name="title">Courses - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-md-8">
                <h2>Explore Courses</h2>
                <p class="text-muted">Discover amazing courses from expert instructors</p>
            </div>
            <div class="col-md-4 text-md-end">
                @auth
                    @if(auth()->user()->isTeacher())
                        <a href="{{ route('courses.create') }}" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-2"></i>Create Course
                        </a>
                    @endif
                @endauth
            </div>
        </div>

        <!-- Filters -->
        <div class="card mb-4">
            <div class="card-body">
                <form method="GET" action="{{ route('courses.index') }}">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <input type="text" name="search" class="form-control" placeholder="Search courses..." value="{{ request('search') }}">
                        </div>
                        <div class="col-md-3">
                            <select name="category" class="form-select">
                                <option value="">All Categories</option>
                                @foreach($categories as $category)
                                    <option value="{{ $category }}" {{ request('category') === $category ? 'selected' : '' }}>
                                        {{ ucfirst($category) }}
                                    </option>
                                @endforeach
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select name="level" class="form-select">
                                <option value="">All Levels</option>
                                <option value="beginner" {{ request('level') === 'beginner' ? 'selected' : '' }}>Beginner</option>
                                <option value="intermediate" {{ request('level') === 'intermediate' ? 'selected' : '' }}>Intermediate</option>
                                <option value="advanced" {{ request('level') === 'advanced' ? 'selected' : '' }}>Advanced</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-search me-1"></i>Filter
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Courses Grid -->
        @if($courses->count() > 0)
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach($courses as $course)
                    <x-course-card :course="$course" />
                @endforeach
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-center mt-4">
                {{ $courses->withQueryString()->links() }}
            </div>
        @else
            <div class="text-center py-5">
                <i class="bi bi-search display-1 text-muted"></i>
                <h4 class="text-muted mt-3">No courses found</h4>
                <p class="text-muted">Try adjusting your search criteria or check back later for new courses.</p>
                @if(request()->hasAny(['search', 'category', 'level']))
                    <a href="{{ route('courses.index') }}" class="btn btn-primary">Clear Filters</a>
                @endif
            </div>
        @endif
    </div>
</x-app-layout>
│       │   ├── learn.blade.php
<!-- resources/views/courses/learn.blade.php -->
<x-app-layout>
    <x-slot name="title">Learning: {{ $course->title }} - {{ config('app.name') }}</x-slot>

    @push('styles')
    <style>
        .learning-container {
            height: calc(100vh - 76px);
            overflow: hidden;
        }
        .module-sidebar {
            height: 100%;
            overflow-y: auto;
            border-right: 1px solid #dee2e6;
        }
        .content-area {
            height: 100%;
            overflow-y: auto;
        }
        .module-item {
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .module-item:hover {
            background-color: #f8f9fa;
        }
        .module-item.active {
            background-color: #e3f2fd;
            border-left: 4px solid #2196f3;
        }
        .video-container {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 56.25%;
        }
        .video-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        @media (max-width: 768px) {
            .learning-container {
                height: auto;
            }
            .module-sidebar {
                height: auto;
                border-right: none;
                border-bottom: 1px solid #dee2e6;
            }
        }
    </style>
    @endpush

    <div class="learning-container">
        <div class="row g-0 h-100">
            <!-- Module Sidebar -->
            <div class="col-lg-3 module-sidebar bg-light">
                <div class="p-3">
                    <h6 class="fw-bold mb-3">{{ $course->title }}</h6>
                    <div class="progress mb-3" style="height: 8px;">
                        <div class="progress-bar" style="width: {{ $progress->progress_percentage ?? 0 }}%"></div>
                    </div>
                    <small class="text-muted">{{ $progress->progress_percentage ?? 0 }}% Complete</small>
                </div>

                <div class="list-group list-group-flush">
                    @foreach($course->modules as $index => $module)
                        <div class="list-group-item module-item {{ $currentModule->id === $module->id ? 'active' : '' }}" 
                             onclick="loadModule({{ $module->id }})">
                            <div class="d-flex align-items-center">
                                <div class="bg-{{ $currentModule->id === $module->id ? 'primary' : 'secondary' }} text-white rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 30px; height: 30px; font-size: 14px;">
                                    {{ $index + 1 }}
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-1 small">{{ $module->title }}</h6>
                                    <small class="text-muted">
                                        <i class="bi bi-clock me-1"></i>{{ $module->duration_minutes }}m
                                        @if($module->isCompletedByUser(auth()->id()))
                                            <i class="bi bi-check-circle text-success ms-2"></i>
                                        @endif
                                    </small>
                                </div>
                            </div>
                        </div>
                    @endforeach
                </div>
            </div>

            <!-- Content Area -->
            <div class="col-lg-9 content-area">
                <div class="p-4">
                    <!-- Module Header -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <h4>{{ $currentModule->title }}</h4>
                            @if($currentModule->description)
                                <p class="text-muted">{{ $currentModule->description }}</p>
                            @endif
                        </div>
                        <div>
                            @if(!$currentModule->isCompletedByUser(auth()->id()))
                                <button class="btn btn-success" onclick="markAsComplete()">
                                    <i class="bi bi-check-circle me-2"></i>Mark as Complete
                                </button>
                            @else
                                <span class="badge bg-success fs-6">
                                    <i class="bi bi-check-circle me-1"></i>Completed
                                </span>
                            @endif
                        </div>
                    </div>

                    <!-- Video Content -->
                    @if($currentModule->video_url)
                        <div class="video-container mb-4">
                            @if(strpos($currentModule->video_url, 'youtube.com') !== false || strpos($currentModule->video_url, 'youtu.be') !== false)
                                @php
                                    $videoId = '';
                                    if (strpos($currentModule->video_url, 'youtube.com') !== false) {
                                        parse_str(parse_url($currentModule->video_url, PHP_URL_QUERY), $params);
                                        $videoId = $params['v'] ?? '';
                                    } else {
                                        $videoId = basename(parse_url($currentModule->video_url, PHP_URL_PATH));
                                    }
                                @endphp
                                <iframe src="https://www.youtube.com/embed/{{ $videoId }}" frameborder="0" allowfullscreen></iframe>
                            @else
                                <video controls class="w-100" style="max-height: 400px;">
                                    <source src="{{ $currentModule->video_url }}" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>
                            @endif
                        </div>
                    @endif

                    <!-- Module Content -->
                    <div class="card">
                        <div class="card-body">
                            <div class="content-area">
                                {!! nl2br(e($currentModule->content)) !!}
                            </div>
                        </div>
                    </div>

                    <!-- Attachments -->
                    @if($currentModule->attachments && count($currentModule->attachments) > 0)
                        <div class="card mt-4">
                            <div class="card-header">
                                <h6 class="mb-0">
                                    <i class="bi bi-paperclip me-2"></i>Attachments
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="list-group list-group-flush">
                                    @foreach($currentModule->attachments as $attachment)
                                        <div class="list-group-item">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <i class="bi bi-file-earmark me-2"></i>
                                                    {{ $attachment['name'] }}
                                                    <small class="text-muted">({{ number_format($attachment['size'] / 1024, 2) }} KB)</small>
                                                </div>
                                                <a href="{{ asset('storage/' . $attachment['path']) }}" target="_blank" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-download me-1"></i>Download
                                                </a>
                                            </div>
                                        </div>
                                    @endforeach
                                </div>
                            </div>
                        </div>
                    @endif

                    <!-- Quizzes -->
                    @if($currentModule->quizzes->count() > 0)
                        <div class="card mt-4">
                            <div class="card-header">
                                <h6 class="mb-0">
                                    <i class="bi bi-question-circle me-2"></i>Quizzes
                                </h6>
                            </div>
                            <div class="card-body">
                                @foreach($currentModule->quizzes as $quiz)
                                    <div class="mb-3">
                                        <h6>{{ $quiz->title }}</h6>
                                        @if($quiz->description)
                                            <p class="text-muted small">{{ $quiz->description }}</p>
                                        @endif
                                        <div class="d-flex align-items-center">
                                            <small class="text-muted me-3">
                                                <i class="bi bi-clock me-1"></i>{{ $quiz->time_limit }} minutes
                                            </small>
                                            <small class="text-muted me-3">
                                                <i class="bi bi-star me-1"></i>{{ $quiz->passing_score }}% to pass
                                            </small>
                                            <button class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-play me-1"></i>Take Quiz
                                            </button>
                                        </div>
                                    </div>
                                @endforeach
                            </div>
                        </div>
                    @endif

                    <!-- Navigation -->
                    <div class="d-flex justify-content-between mt-4">
                        @php
                            $moduleIndex = $course->modules->search(function($module) use ($currentModule) {
                                return $module->id === $currentModule->id;
                            });
                            $prevModule = $moduleIndex > 0 ? $course->modules[$moduleIndex - 1] : null;
                            $nextModule = $moduleIndex < $course->modules->count() - 1 ? $course->modules[$moduleIndex + 1] : null;
                        @endphp

                        @if($prevModule)
                            <a href="{{ route('courses.learn', [$course->slug, 'module' => $prevModule->id]) }}" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-2"></i>Previous Module
                            </a>
                        @else
                            <div></div>
                        @endif

                        @if($nextModule)
                            <a href="{{ route('courses.learn', [$course->slug, 'module' => $nextModule->id]) }}" class="btn btn-primary">
                                Next Module<i class="bi bi-arrow-right ms-2"></i>
                            </a>
                        @else
                            <div class="text-end">
                                <span class="badge bg-success fs-6">
                                    <i class="bi bi-trophy me-1"></i>Course Complete!
                                </span>
                            </div>
                        @endif
                    </div>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        let startTime = Date.now();

        function loadModule(moduleId) {
            window.location.href = `{{ route('courses.learn', $course->slug) }}?module=${moduleId}`;
        }

        function markAsComplete() {
            const timeSpent = Math.floor((Date.now() - startTime) / 60000); // in minutes
            
            fetch(`{{ route('courses.complete-module', [$course->id, $currentModule->id]) }}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                },
                body: JSON.stringify({
                    time_spent: timeSpent
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to mark as complete. Please try again.');
            });
        }

        // Track time spent on page
        window.addEventListener('beforeunload', function() {
            const timeSpent = Math.floor((Date.now() - startTime) / 60000);
            navigator.sendBeacon(`{{ route('courses.complete-module', [$course->id, $currentModule->id]) }}`, 
                JSON.stringify({ time_spent: timeSpent }));
        });
    </script>
    @endpush
</x-app-layout>
│       │   └── show.blade.php
<!-- resources/views/courses/show.blade.php -->
<x-app-layout>
    <x-slot name="title">{{ $course->title }} - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row">
            <!-- Course Info -->
            <div class="col-lg-8">
                <!-- Course Header -->
                <div class="card mb-4">
                    <img src="{{ $course->thumbnail_url }}" class="card-img-top" alt="{{ $course->title }}" style="height: 300px; object-fit: cover;">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <span class="badge bg-primary me-2">{{ ucfirst($course->level) }}</span>
                                <span class="badge bg-secondary">{{ ucfirst($course->category) }}</span>
                            </div>
                            @if(auth()->check() && (auth()->id() === $course->instructor_id || auth()->user()->isAdmin()))
                                <div class="dropdown">
                                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown">
                                        <i class="bi bi-three-dots"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="{{ route('courses.edit', $course->slug) }}">
                                            <i class="bi bi-pencil me-2"></i>Edit Course
                                        </a></li>
                                        <li><a class="dropdown-item" href="{{ route('modules.create', $course->slug) }}">
                                            <i class="bi bi-plus me-2"></i>Add Module
                                        </a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item text-danger" href="#" onclick="if(confirm('Are you sure?')) document.getElementById('delete-form').submit();">
                                            <i class="bi bi-trash me-2"></i>Delete Course
                                        </a></li>
                                    </ul>
                                </div>
                                <form id="delete-form" action="{{ route('courses.destroy', $course->slug) }}" method="POST" class="d-none">
                                    @csrf
                                    @method('DELETE')
                                </form>
                            @endif
                        </div>
                        
                        <h1 class="mb-3">{{ $course->title }}</h1>
                        <p class="lead text-muted">{{ $course->description }}</p>

                        <!-- Instructor -->
                        <div class="d-flex align-items-center mb-3">
                            <img src="{{ $course->instructor->avatar_url }}" alt="{{ $course->instructor->name }}" class="avatar me-3">
                            <div>
                                <h6 class="mb-0">{{ $course->instructor->name }}</h6>
                                <small class="text-muted">{{ ucfirst($course->instructor->role) }}</small>
                            </div>
                        </div>

                        <!-- Course Stats -->
                        <div class="row text-center">
                            <div class="col-4">
                                <div class="border-end">
                                    <i class="bi bi-book text-primary"></i>
                                    <div class="fw-bold">{{ $course->modules->count() }}</div>
                                    <small class="text-muted">Modules</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="border-end">
                                    <i class="bi bi-clock text-info"></i>
                                    <div class="fw-bold">{{ $course->duration_minutes }}m</div>
                                    <small class="text-muted">Duration</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <i class="bi bi-people text-success"></i>
                                <div class="fw-bold">{{ $course->students->count() }}</div>
                                <small class="text-muted">Students</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Course Modules -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Course Modules</h5>
                    </div>
                    <div class="card-body">
                        @if($course->modules->count() > 0)
                            @foreach($course->modules as $index => $module)
                                <div class="d-flex align-items-center p-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                    <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px;">
                                        {{ $index + 1 }}
                                    </div>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">{{ $module->title }}</h6>
                                        @if($module->description)
                                            <p class="text-muted small mb-1">{{ Str::limit($module->description, 100) }}</p>
                                        @endif
                                        <small class="text-muted">
                                            <i class="bi bi-clock me-1"></i>{{ $module->duration_minutes }}m
                                            @if($module->video_url)
                                                <i class="bi bi-play-circle ms-2 me-1"></i>Video
                                            @endif
                                            @if($module->attachments)
                                                <i class="bi bi-paperclip ms-2 me-1"></i>{{ count($module->attachments) }} files
                                            @endif
                                        </small>
                                    </div>
                                    @if($isEnrolled)
                                        @if(auth()->check() && $module->isCompletedByUser(auth()->id()))
                                            <i class="bi bi-check-circle text-success"></i>
                                        @else
                                            <i class="bi bi-circle text-muted"></i>
                                        @endif
                                    @endif
                                </div>
                            @endforeach
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-book display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No modules yet</h6>
                                <p class="text-muted">Modules will be added soon!</p>
                            </div>
                        @endif
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Enrollment Card -->
                <div class="card mb-4">
                    <div class="card-body text-center">
                        <h3 class="text-primary mb-3">{{ $course->formatted_price }}</h3>
                        
                        @auth
                            @if($isEnrolled)
                                <button class="btn btn-success btn-lg w-100 mb-3" disabled>
                                    <i class="bi bi-check-circle me-2"></i>Enrolled
                                </button>
                                <a href="{{ route('courses.learn', $course->slug) }}" class="btn btn-primary w-100">
                                    <i class="bi bi-play-circle me-2"></i>
                                    {{ $progress && $progress->progress_percentage > 0 ? 'Continue Learning' : 'Start Learning' }}
                                </a>
                                @if($progress)
                                    <div class="mt-3">
                                        <div class="progress">
                                            <div class="progress-bar" style="width: {{ $progress->progress_percentage }}%"></div>
                                        </div>
                                        <small class="text-muted">{{ $progress->progress_percentage }}% completed</small>
                                    </div>
                                @endif
                            @else
                                <form action="{{ route('courses.enroll', $course->id) }}" method="POST">
                                    @csrf
                                    @if($course->price > 0)
                                        <button type="submit" class="btn btn-primary btn-lg w-100">
                                            <i class="bi bi-cart-plus me-2"></i>Enroll Now
                                        </button>
                                    @else
                                        <button type="submit" class="btn btn-success btn-lg w-100">
                                            <i class="bi bi-download me-2"></i>Enroll Free
                                        </button>
                                    @endif
                                </form>
                            @endif
                        @else
                            <p class="text-muted mb-3">Sign in to enroll in this course</p>
                            <a href="{{ route('login') }}" class="btn btn-primary w-100">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Sign In to Enroll
                            </a>
                        @endauth
                    </div>
                </div>

                <!-- Course Features -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">This course includes:</h6>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <i class="bi bi-book text-primary me-2"></i>
                                {{ $course->modules->count() }} modules
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-clock text-info me-2"></i>
                                {{ $course->duration_minutes }} minutes of content
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-phone text-success me-2"></i>
                                Mobile and desktop access
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-trophy text-warning me-2"></i>
                                Certificate of completion
                            </li>
                            <li class="mb-0">
                                <i class="bi bi-infinity text-danger me-2"></i>
                                Lifetime access
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       ├── dashboard/
│       │   ├── admin.blade.php
<!-- resources/views/dashboard/admin.blade.php -->
<x-app-layout>
    <x-slot name="title">Admin Dashboard - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <!-- Welcome Section -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h2 class="mb-2">Admin Dashboard</h2>
                        <p class="text-muted mb-0">System overview and management tools.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- System Stats -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-people display-6 mb-2"></i>
                        <h3>{{ $totalUsers }}</h3>
                        <small>Total Users</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-book display-6 mb-2"></i>
                        <h3>{{ $totalCourses }}</h3>
                        <small>Total Courses</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-chat-dots display-6 mb-2"></i>
                        <h3>{{ $totalThreads }}</h3>
                        <small>Forum Threads</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-flag display-6 mb-2"></i>
                        <h3>{{ $pendingReports }}</h3>
                        <small>Pending Reports</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Management Tools -->
        <div class="row">
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">User Management</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a href="#" class="btn btn-outline-primary">
                                <i class="bi bi-people me-2"></i>Manage Users
                            </a>
                            <a href="#" class="btn btn-outline-success">
                                <i class="bi bi-person-badge me-2"></i>Role Management
                            </a>
                            <a href="#" class="btn btn-outline-info">
                                <i class="bi bi-shield-check me-2"></i>Verify Accounts
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Content Management</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a href="{{ route('courses.index') }}" class="btn btn-outline-primary">
                                <i class="bi bi-book me-2"></i>Manage Courses
                            </a>
                            <a href="{{ route('forum.index') }}" class="btn btn-outline-success">
                                <i class="bi bi-chat-dots me-2"></i>Moderate Forum
                            </a>
                            <a href="#" class="btn btn-outline-warning">
                                <i class="bi bi-flag me-2"></i>Review Reports
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       │   ├── student.blade.php
<x-app-layout>
    <x-slot name="title">Dashboard - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <h2 class="mb-2">Welcome back, {{ auth()->user()->name }}!</h2>
                                <p class="text-muted mb-0">Continue your learning journey and achieve your goals.</p>
                            </div>
                            <div class="col-md-4 text-md-end">
                                <img src="{{ auth()->user()->avatar_url }}" alt="Avatar" class="avatar avatar-lg">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-book display-6 mb-2"></i>
                        <h3>{{ $enrolledCourses->count() }}</h3>
                        <small>Enrolled Courses</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-check-circle display-6 mb-2"></i>
                        <h3>{{ $enrolledCourses->where('pivot.is_completed', true)->count() }}</h3>
                        <small>Completed</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-question-circle display-6 mb-2"></i>
                        <h3>{{ $recentHomework->count() }}</h3>
                        <small>Homework Questions</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-trophy display-6 mb-2"></i>
                        <h3>{{ auth()->user()->points }}</h3>
                        <small>Points Earned</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">My Courses</h5>
                        <a href="{{ route('courses.index') }}" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-plus me-1"></i>Browse More
                        </a>
                    </div>
                    <div class="card-body">
                        @if($enrolledCourses->count() > 0)
                            @foreach($enrolledCourses as $course)
                                @php
                                    $courseProgress = \App\Models\UserProgress::where('user_id', auth()->id())
                                                                             ->where('course_id', $course->id)
                                                                             ->whereNull('module_id')
                                                                             ->first();
                                    $progressPercentage = $courseProgress ? $courseProgress->progress_percentage : 0;
                                @endphp
                                <div class="d-flex align-items-center mb-3 pb-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                    <img src="{{ $course->thumbnail_url }}" alt="{{ $course->title }}" class="rounded me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">{{ $course->title }}</h6>
                                        <small class="text-muted">by {{ $course->instructor->name }}</small>
                                        <div class="progress mt-2" style="height: 6px;">
                                            <div class="progress-bar" style="width: {{ $progressPercentage }}%"></div>
                                        </div>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge bg-light text-dark">{{ round($progressPercentage) }}%</span>
                                        <div class="mt-1">
                                            <a href="{{ route('courses.learn', $course->slug) }}" class="btn btn-sm btn-primary">
                                                {{ $progressPercentage > 0 ? 'Continue' : 'Start' }}
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            @endforeach
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-book display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No enrolled courses yet</h6>
                                <p class="text-muted">Explore our course catalog to start learning!</p>
                                <a href="{{ route('courses.index') }}" class="btn btn-primary">Browse Courses</a>
                            </div>
                        @endif
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Recent Homework</h5>
                        <a href="{{ route('homework.index') }}" class="btn btn-sm btn-outline-primary">View All</a>
                    </div>
                    <div class="card-body">
                        @if($recentHomework->count() > 0)
                            @foreach($recentHomework as $homework)
                                <div class="d-flex align-items-start mb-3 pb-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">{{ Str::limit($homework->title, 30) }}</h6>
                                        <small class="text-muted">{{ $homework->course->title }}</small>
                                        <div class="mt-1">
                                            <span class="badge bg-{{ $homework->status === 'pending' ? 'warning' : ($homework->status === 'answered' ? 'success' : 'secondary') }}">
                                                {{ ucfirst($homework->status) }}
                                            </span>
                                            <span class="badge bg-info">{{ ucfirst($homework->difficulty) }}</span>
                                        </div>
                                    </div>
                                    <small class="text-muted">{{ $homework->created_at->diffForHumans() }}</small>
                                </div>
                            @endforeach
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-question-circle display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No homework yet</h6>
                                <a href="{{ route('homework.create') }}" class="btn btn-sm btn-primary">Ask Question</a>
                            </div>
                        @endif
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5 class="mb-0">Quick Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a href="{{ route('homework.create') }}" class="btn btn-outline-primary">
                                <i class="bi bi-plus-circle me-2"></i>Ask Homework Question
                            </a>
                            <a href="{{ route('forum.create') }}" class="btn btn-outline-success">
                                <i class="bi bi-chat-left-text me-2"></i>Start Discussion
                            </a>
                            <a href="{{ route('profile.edit') }}" class="btn btn-outline-info">
                                <i class="bi bi-gear me-2"></i>Update Profile
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       │   └── teacher.blade.php
<!-- resources/views/dashboard/teacher.blade.php -->
<x-app-layout>
    <x-slot name="title">Teacher Dashboard - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <!-- Welcome Section -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <h2 class="mb-2">Welcome, {{ auth()->user()->name }}!</h2>
                                <p class="text-muted mb-0">Manage your courses and help students succeed.</p>
                            </div>
                            <div class="col-md-4 text-md-end">
                                <img src="{{ auth()->user()->avatar_url }}" alt="Avatar" class="avatar avatar-lg">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-book display-6 mb-2"></i>
                        <h3>{{ $myCourses->count() }}</h3>
                        <small>My Courses</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-people display-6 mb-2"></i>
                        <h3>{{ $myCourses->sum('students_count') }}</h3>
                        <small>Total Students</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-question-circle display-6 mb-2"></i>
                        <h3>{{ $pendingHomework }}</h3>
                        <small>Pending Homework</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body text-center">
                        <i class="bi bi-star display-6 mb-2"></i>
                        <h3>{{ auth()->user()->points }}</h3>
                        <small>Reputation</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- My Courses -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">My Courses</h5>
                        <a href="{{ route('courses.create') }}" class="btn btn-sm btn-primary">
                            <i class="bi bi-plus me-1"></i>Create Course
                        </a>
                    </div>
                    <div class="card-body">
                        @if($myCourses->count() > 0)
                            @foreach($myCourses as $course)
                                <div class="d-flex align-items-center mb-3 pb-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                    <img src="{{ $course->thumbnail_url }}" alt="{{ $course->title }}" class="rounded me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">{{ $course->title }}</h6>
                                        <small class="text-muted">{{ $course->category }} • {{ ucfirst($course->level) }}</small>
                                        <div class="mt-1">
                                            <span class="badge bg-{{ $course->is_active ? 'success' : 'secondary' }}">
                                                {{ $course->is_active ? 'Active' : 'Inactive' }}
                                            </span>
                                            <span class="badge bg-info">{{ $course->students_count }} students</span>
                                        </div>
                                    </div>
                                    <div class="text-end">
                                        <div class="btn-group btn-group-sm">
                                            <a href="{{ route('courses.show', $course->slug) }}" class="btn btn-outline-primary">View</a>
                                            <a href="{{ route('courses.edit', $course->slug) }}" class="btn btn-outline-secondary">Edit</a>
                                            <a href="{{ route('modules.create', $course->slug) }}" class="btn btn-outline-success">Add Module</a>
                                        </div>
                                    </div>
                                </div>
                            @endforeach
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-book display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No courses created yet</h6>
                                <p class="text-muted">Create your first course to start teaching!</p>
                                <a href="{{ route('courses.create') }}" class="btn btn-primary">Create Course</a>
                            </div>
                        @endif
                    </div>
                </div>
            </div>

            <!-- Quick Actions & Homework -->
            <div class="col-lg-4">
                <!-- Quick Actions -->
                <div class="card mb-3">
                    <div class="card-header">
                        <h5 class="mb-0">Quick Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a href="{{ route('courses.create') }}" class="btn btn-outline-primary">
                                <i class="bi bi-plus-circle me-2"></i>Create Course
                            </a>
                            <a href="{{ route('homework.index') }}" class="btn btn-outline-warning">
                                <i class="bi bi-question-circle me-2"></i>Answer Homework
                            </a>
                            <a href="{{ route('forum.index') }}" class="btn btn-outline-success">
                                <i class="bi bi-chat-left-text me-2"></i>Forum Discussions
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Pending Homework -->
                @if($pendingHomework > 0)
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Pending Homework</h5>
                        </div>
                        <div class="card-body">
                            <div class="alert alert-warning">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                You have <strong>{{ $pendingHomework }}</strong> homework questions waiting for your answer.
                            </div>
                            <a href="{{ route('homework.index', ['status' => 'pending']) }}" class="btn btn-warning">
                                <i class="bi bi-arrow-right me-2"></i>Answer Questions
                            </a>
                        </div>
                    </div>
                @endif
            </div>
        </div>
    </div>
</x-app-layout>
│       ├── forum/
│       │   ├── category.blade.php
<!-- resources/views/forum/category.blade.php -->
<x-app-layout>
    <x-slot name="title">{{ $category->name }} - Forum - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ route('forum.index') }}">Forum</a></li>
                <li class="breadcrumb-item active">{{ $category->name }}</li>
            </ol>
        </nav>

        <!-- Category Header -->
        <div class="row mb-4">
            <div class="col-md-8">
                <div class="d-flex align-items-center mb-3">
                    <div class="rounded-circle me-3" style="width: 50px; height: 50px; background-color: {{ $category->color }};">
                        <i class="bi bi-chat-dots text-white d-flex align-items-center justify-content-center h-100 fs-4"></i>
                    </div>
                    <div>
                        <h2 class="mb-1">{{ $category->name }}</h2>
                        @if($category->description)
                            <p class="text-muted mb-0">{{ $category->description }}</p>
                        @endif
                    </div>
                </div>
            </div>
            <div class="col-md-4 text-md-end">
                @auth
                    <a href="{{ route('forum.create', ['category' => $category->slug]) }}" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>New Thread
                    </a>
                @endauth
            </div>
        </div>

        <!-- Threads -->
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Discussions ({{ $threads->total() }})</h5>
                    <div class="btn-group btn-group-sm">
                        <button class="btn btn-outline-secondary active">Recent</button>
                        <button class="btn btn-outline-secondary">Popular</button>
                        <button class="btn btn-outline-secondary">Unanswered</button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                @if($threads->count() > 0)
                    @foreach($threads as $thread)
                        <div class="d-flex align-items-start p-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                            <img src="{{ $thread->user->avatar_url }}" alt="{{ $thread->user->name }}" class="avatar me-3">
                            <div class="flex-grow-1">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">
                                            @if($thread->is_pinned)
                                                <i class="bi bi-pin-angle-fill text-warning me-1"></i>
                                            @endif
                                            <a href="{{ route('forum.thread', [$category->slug, $thread->slug]) }}" class="text-decoration-none">
                                                {{ $thread->title }}
                                            </a>
                                            @if($thread->is_locked)
                                                <i class="bi bi-lock text-muted ms-2"></i>
                                            @endif
                                        </h6>
                                        <p class="text-muted small mb-2">{{ Str::limit(strip_tags($thread->content), 100) }}</p>
                                        <div class="d-flex align-items-center text-muted small">
                                            <span>by {{ $thread->user->name }}</span>
                                            <span class="mx-2">•</span>
                                            <span>{{ $thread->created_at->diffForHumans() }}</span>
                                            <span class="mx-2">•</span>
                                            <i class="bi bi-eye me-1"></i>{{ $thread->views }}
                                            <span class="mx-2">•</span>
                                            <i class="bi bi-chat me-1"></i>{{ $thread->replies_count }}
                                            @if($thread->replies->isNotEmpty())
                                                <span class="mx-2">•</span>
                                                <span>Last reply {{ $thread->replies->first()->created_at->diffForHumans() }}</span>
                                            @endif
                                        </div>
                                    </div>
                                    <div class="text-end ms-3">
                                        @if($thread->replies->where('is_best_answer', true)->isNotEmpty())
                                            <i class="bi bi-check-circle-fill text-success" title="Has best answer"></i>
                                        @endif
                                    </div>
                                </div>
                            </div>
                        </div>
                    @endforeach

                    <!-- Pagination -->
                    <div class="d-flex justify-content-center mt-4">
                        {{ $threads->links() }}
                    </div>
                @else
                    <div class="text-center py-5">
                        <i class="bi bi-chat-dots display-4 text-muted"></i>
                        <h6 class="text-muted mt-3">No discussions yet</h6>
                        <p class="text-muted">Be the first to start a discussion in this category!</p>
                        @auth
                            <a href="{{ route('forum.create', ['category' => $category->slug]) }}" class="btn btn-primary">
                                <i class="bi bi-plus-circle me-2"></i>Start Discussion
                            </a>
                        @endauth
                    </div>
                @endif
            </div>
        </div>
    </div>
</x-app-layout>
│       │   ├── create-thread.blade.php
<!-- resources/views/forum/create-thread.blade.php -->
<x-app-layout>
    <x-slot name="title">Start New Discussion - Forum - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">Start New Discussion</h4>
                    </div>
                    <div class="card-body">
                        <form action="{{ route('forum.store') }}" method="POST">
                            @csrf
                            
                            <div class="mb-3">
                                <label for="category_id" class="form-label">Category</label>
                                <select class="form-select @error('category_id') is-invalid @enderror" id="category_id" name="category_id" required>
                                    <option value="">Select a category</option>
                                    @foreach($categories as $category)
                                        <option value="{{ $category->id }}" 
                                                {{ old('category_id', $selectedCategory?->id) == $category->id ? 'selected' : '' }}>
                                            {{ $category->name }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('category_id')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="title" class="form-label">Discussion Title</label>
                                <input type="text" class="form-control @error('title') is-invalid @enderror" 
                                       id="title" name="title" value="{{ old('title') }}" required>
                                @error('title')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Be specific and descriptive</div>
                            </div>

                            <div class="mb-3">
                                <label for="content" class="form-label">Content</label>
                                <textarea class="form-control @error('content') is-invalid @enderror" 
                                          id="content" name="content" rows="8" required>{{ old('content') }}</textarea>
                                @error('content')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Provide details, context, and any relevant information</div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <a href="{{ route('forum.index') }}" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-send me-2"></i>Start Discussion
                                    <span class="loading">
                                        <i class="bi bi-hourglass-split me-2"></i>Posting...
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Forum Guidelines -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="bi bi-info-circle me-2"></i>Discussion Guidelines
                        </h6>
                    </div>
                    <div class="card-body">
                        <ul class="mb-0">
                            <li>Be respectful and constructive in your discussions</li>
                            <li>Search for existing discussions before creating a new one</li>
                            <li>Use clear and descriptive titles</li>
                            <li>Stay on topic and provide relevant details</li>
                            <li>Help others by sharing your knowledge and experience</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       │   ├── index.blade.php
<!-- resources/views/forum/index.blade.php -->
<x-app-layout>
    <x-slot name="title">Forum - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-md-8">
                <h2>Community Forum</h2>
                <p class="text-muted">Connect, discuss, and learn together with our community</p>
            </div>
            <div class="col-md-4 text-md-end">
                @auth
                    <a href="{{ route('forum.create') }}" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Start Discussion
                    </a>
                @endauth
            </div>
        </div>

        <!-- Search -->
        <div class="card mb-4">
            <div class="card-body">
                <form action="{{ route('forum.search') }}" method="GET">
                    <div class="input-group">
                        <input type="text" name="q" class="form-control" placeholder="Search discussions..." value="{{ request('q') }}">
                        <button class="btn btn-outline-primary" type="submit">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <div class="row">
            <!-- Categories -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Discussion Categories</h5>
                    </div>
                    <div class="card-body">
                        @if($categories->count() > 0)
                            @foreach($categories as $category)
                                <div class="d-flex align-items-center p-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                    <div class="rounded-circle me-3" style="width: 40px; height: 40px; background-color: {{ $category->color }};">
                                        <i class="bi bi-chat-dots text-white d-flex align-items-center justify-content-center h-100"></i>
                                    </div>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">
                                            <a href="{{ route('forum.category', $category->slug) }}" class="text-decoration-none">
                                                {{ $category->name }}
                                            </a>
                                        </h6>
                                        @if($category->description)
                                            <p class="text-muted small mb-0">{{ $category->description }}</p>
                                        @endif
                                    </div>
                                    <div class="text-end">
                                        <span class="badge bg-light text-dark">{{ $category->threads_count }} threads</span>
                                    </div>
                                </div>
                            @endforeach
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-chat-dots display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No categories yet</h6>
                            </div>
                        @endif
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Recent Threads -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Recent Discussions</h6>
                    </div>
                    <div class="card-body">
                        @if($recentThreads->count() > 0)
                            @foreach($recentThreads as $thread)
                                <div class="mb-3 {{ !$loop->last ? 'pb-3 border-bottom' : '' }}">
                                    <h6 class="mb-1">
                                        <a href="{{ route('forum.thread', [$thread->category->slug, $thread->slug]) }}" class="text-decoration-none">
                                            {{ Str::limit($thread->title, 50) }}
                                        </a>
                                    </h6>
                                    <small class="text-muted">
                                        by {{ $thread->user->name }} • {{ $thread->created_at->diffForHumans() }}
                                    </small>
                                </div>
                            @endforeach
                        @else
                            <p class="text-muted text-center">No recent discussions</p>
                        @endif
                    </div>
                </div>

                <!-- Popular Threads -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Popular This Week</h6>
                    </div>
                    <div class="card-body">
                        @if($popularThreads->count() > 0)
                            @foreach($popularThreads as $thread)
                                <div class="mb-3 {{ !$loop->last ? 'pb-3 border-bottom' : '' }}">
                                    <h6 class="mb-1">
                                        <a href="{{ route('forum.thread', [$thread->category->slug, $thread->slug]) }}" class="text-decoration-none">
                                            {{ Str::limit($thread->title, 50) }}
                                        </a>
                                    </h6>
                                    <small class="text-muted">
                                        <i class="bi bi-eye me-1"></i>{{ $thread->views }} views
                                        <span class="mx-1">•</span>
                                        <i class="bi bi-chat me-1"></i>{{ $thread->replies_count }} replies
                                    </small>
                                </div>
                            @endforeach
                        @else
                            <p class="text-muted text-center">No popular discussions yet</p>
                        @endif
                    </div>
                </div>

                @guest
                    <!-- Sign Up CTA -->
                    <div class="card mt-4">
                        <div class="card-body text-center">
                            <h6>Join the Discussion!</h6>
                            <p class="text-muted small">Sign up to participate in discussions and get help from the community.</p>
                            <a href="{{ route('register') }}" class="btn btn-primary btn-sm">Sign Up Free</a>
                        </div>
                    </div>
                @endguest
            </div>
        </div>
    </div>
</x-app-layout>
│       │   └── thread.blade.php
<!-- resources/views/forum/thread.blade.php -->
<x-app-layout>
    <x-slot name="title">{{ $thread->title }} - Forum - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ route('forum.index') }}">Forum</a></li>
                <li class="breadcrumb-item">
                    <a href="{{ route('forum.category', $category->slug) }}">{{ $category->name }}</a>
                </li>
                <li class="breadcrumb-item active">{{ Str::limit($thread->title, 50) }}</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-lg-8">
                <!-- Thread -->
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h4 class="mb-2">
                                    @if($thread->is_pinned)
                                        <i class="bi bi-pin-angle-fill text-warning me-2"></i>
                                    @endif
                                    {{ $thread->title }}
                                </h4>
                                <div class="d-flex align-items-center">
                                    <span class="badge" style="background-color: {{ $category->color }};">
                                        {{ $category->name }}
                                    </span>
                                    @if($thread->is_locked)
                                        <span class="badge bg-secondary ms-2">Locked</span>
                                    @endif
                                </div>
                            </div>
                            @if(auth()->check() && (auth()->id() === $thread->user_id || auth()->user()->isModerator()))
                                <div class="dropdown">
                                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown">
                                        <i class="bi bi-three-dots"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="{{ route('forum.edit', [$category->slug, $thread->slug]) }}">
                                            <i class="bi bi-pencil me-2"></i>Edit Thread
                                        </a></li>
                                        @if(auth()->user()->isModerator())
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" href="#">
                                                <i class="bi bi-pin me-2"></i>{{ $thread->is_pinned ? 'Unpin' : 'Pin' }} Thread
                                            </a></li>
                                            <li><a class="dropdown-item" href="#">
                                                <i class="bi bi-lock me-2"></i>{{ $thread->is_locked ? 'Unlock' : 'Lock' }} Thread
                                            </a></li>
                                        @endif
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item text-danger" href="#" onclick="if(confirm('Are you sure?')) document.getElementById('delete-form').submit();">
                                            <i class="bi bi-trash me-2"></i>Delete Thread
                                        </a></li>
                                    </ul>
                                </div>
                                <form id="delete-form" action="{{ route('forum.destroy', [$category->slug, $thread->slug]) }}" method="POST" class="d-none">
                                    @csrf
                                    @method('DELETE')
                                </form>
                            @endif
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="d-flex mb-3">
                            <img src="{{ $thread->user->avatar_url }}" alt="{{ $thread->user->name }}" class="avatar me-3">
                            <div class="flex-grow-1">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="mb-0">{{ $thread->user->name }}</h6>
                                        <small class="text-muted">{{ ucfirst($thread->user->role) }}</small>
                                    </div>
                                    <small class="text-muted">{{ $thread->created_at->format('M d, Y \a\t H:i') }}</small>
                                </div>
                            </div>
                        </div>
                        <div class="content">
                            {!! nl2br(e($thread->content)) !!}
                        </div>
                    </div>
                </div>

                <!-- Replies -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">{{ $replies->total() }} Replies</h5>
                    </div>
                    <div class="card-body">
                        @if($replies->count() > 0)
                            @foreach($replies as $reply)
                                <div class="reply-item mb-4 {{ !$loop->last ? 'pb-4 border-bottom' : '' }}" id="reply-{{ $reply->id }}">
                                    <div class="d-flex">
                                        <img src="{{ $reply->user->avatar_url }}" alt="{{ $reply->user->name }}" class="avatar me-3">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-start mb-2">
                                                <div>
                                                    <h6 class="mb-0">{{ $reply->user->name }}</h6>
                                                    <small class="text-muted">{{ ucfirst($reply->user->role) }}</small>
                                                </div>
                                                <div class="text-end">
                                                    <small class="text-muted">{{ $reply->created_at->diffForHumans() }}</small>
                                                    @if($reply->is_best_answer)
                                                        <span class="badge bg-success ms-2">
                                                            <i class="bi bi-check-circle me-1"></i>Best Answer
                                                        </span>
                                                    @endif
                                                </div>
                                            </div>
                                            
                                            <div class="content mb-3">
                                                {!! nl2br(e($reply->content)) !!}
                                            </div>
                                            
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div class="btn-group btn-group-sm">
                                                    @auth
                                                        <button class="btn btn-outline-primary" onclick="upvoteReply({{ $reply->id }})">
                                                            <i class="bi bi-arrow-up"></i> {{ $reply->upvotes }}
                                                        </button>
                                                        @if(auth()->id() === $thread->user_id || auth()->user()->isModerator())
                                                            @if(!$reply->is_best_answer)
                                                                <button class="btn btn-outline-success" onclick="markBestAnswer({{ $reply->id }})">
                                                                    <i class="bi bi-check"></i> Mark as Best
                                                                </button>
                                                            @endif
                                                        @endif
                                                        <button class="btn btn-outline-secondary" onclick="toggleReplyForm({{ $reply->id }})">
                                                            <i class="bi bi-reply"></i> Reply
                                                        </button>
                                                    @endauth
                                                </div>
                                            </div>

                                            <!-- Reply Form -->
                                            @auth
                                                <div id="reply-form-{{ $reply->id }}" class="mt-3" style="display: none;">
                                                    <form action="{{ route('forum.reply', [$category->slug, $thread->slug]) }}" method="POST">
                                                        @csrf
                                                        <input type="hidden" name="parent_id" value="{{ $reply->id }}">
                                                        <div class="mb-3">
                                                            <textarea name="content" class="form-control" rows="3" placeholder="Write your reply..." required></textarea>
                                                        </div>
                                                        <div class="d-flex justify-content-end">
                                                            <button type="button" class="btn btn-secondary btn-sm me-2" onclick="toggleReplyForm({{ $reply->id }})">Cancel</button>
                                                            <button type="submit" class="btn btn-primary btn-sm">Post Reply</button>
                                                        </div>
                                                    </form>
                                                </div>
                                            @endauth

                                            <!-- Child Replies -->
                                            @if($reply->children->count() > 0)
                                                <div class="mt-3 ms-4">
                                                    @foreach($reply->children as $childReply)
                                                        <div class="d-flex mb-3 pb-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                                            <img src="{{ $childReply->user->avatar_url }}" alt="{{ $childReply->user->name }}" class="avatar avatar-sm me-2">
                                                            <div class="flex-grow-1">
                                                                <div class="d-flex justify-content-between align-items-start mb-1">
                                                                    <h6 class="mb-0 small">{{ $childReply->user->name }}</h6>
                                                                    <small class="text-muted">{{ $childReply->created_at->diffForHumans() }}</small>
                                                                </div>
                                                                <div class="small">
                                                                    {!! nl2br(e($childReply->content)) !!}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    @endforeach
                                                </div>
                                            @endif
                                        </div>
                                    </div>
                                </div>
                            @endforeach

                            <!-- Pagination -->
                            <div class="d-flex justify-content-center mt-4">
                                {{ $replies->links() }}
                            </div>
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-chat display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No replies yet</h6>
                                <p class="text-muted">Be the first to reply to this discussion!</p>
                            </div>
                        @endif
                    </div>
                </div>

                <!-- Reply Form -->
                @auth
                    @if(!$thread->is_locked)
                        <div class="card mt-4">
                            <div class="card-header">
                                <h6 class="mb-0">Post Your Reply</h6>
                            </div>
                            <div class="card-body">
                                <form action="{{ route('forum.reply', [$category->slug, $thread->slug]) }}" method="POST">
                                    @csrf
                                    <div class="mb-3">
                                        <textarea name="content" class="form-control @error('content') is-invalid @enderror" 
                                                  rows="5" placeholder="Write your reply..." required>{{ old('content') }}</textarea>
                                        @error('content')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="d-flex justify-content-end">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="bi bi-send me-2"></i>Post Reply
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    @else
                        <div class="alert alert-warning mt-4">
                            <i class="bi bi-lock me-2"></i>This thread is locked. No new replies can be posted.
                        </div>
                    @endif
                @else
                    <div class="card mt-4">
                        <div class="card-body text-center">
                            <h6>Join the discussion!</h6>
                            <p class="text-muted">Sign in to post your reply.</p>
                            <a href="{{ route('login') }}" class="btn btn-primary">Sign In</a>
                        </div>
                    </div>
                @endauth
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Thread Stats -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Thread Stats</h6>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-4">
                                <div class="border-end">
                                    <i class="bi bi-eye text-primary"></i>
                                    <div class="fw-bold">{{ $thread->views }}</div>
                                    <small class="text-muted">Views</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="border-end">
                                    <i class="bi bi-chat text-success"></i>
                                    <div class="fw-bold">{{ $thread->replies_count }}</div>
                                    <small class="text-muted">Replies</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <i class="bi bi-clock text-info"></i>
                                <div class="fw-bold">{{ $thread->created_at->diffForHumans() }}</div>
                                <small class="text-muted">Started</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Category Info -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Category: {{ $category->name }}</h6>
                    </div>
                    <div class="card-body">
                        @if($category->description)
                            <p class="text-muted mb-3">{{ $category->description }}</p>
                        @endif
                        <a href="{{ route('forum.category', $category->slug) }}" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-arrow-left me-1"></i>Back to {{ $category->name }}
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        function upvoteReply(replyId) {
            fetch(`/forum/reply/${replyId}/upvote`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.upvotes !== undefined) {
                    location.reload();
                }
            })
            .catch(error => console.error('Error:', error));
        }

        function markBestAnswer(replyId) {
            if (confirm('Mark this as the best answer?')) {
                fetch(`/forum/reply/${replyId}/best-answer`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        }

        function toggleReplyForm(replyId) {
            const form = document.getElementById(`reply-form-${replyId}`);
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }
    </script>
    @endpush
</x-app-layout>
│       ├── homework/
│       │   ├── create.blade.php
<!-- resources/views/homework/create.blade.php -->
<x-app-layout>
    <x-slot name="title">Ask Homework Question - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">Ask Homework Question</h4>
                    </div>
                    <div class="card-body">
                        <form action="{{ route('homework.store') }}" method="POST" enctype="multipart/form-data">
                            @csrf
                            
                            <div class="mb-3">
                                <label for="title" class="form-label">Question Title</label>
                                <input type="text" class="form-control @error('title') is-invalid @enderror" 
                                       id="title" name="title" value="{{ old('title') }}" required>
                                @error('title')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Be specific and clear about what you need help with</div>
                            </div>

                            <div class="mb-3">
                                <label for="course_id" class="form-label">Course</label>
                                <select class="form-select @error('course_id') is-invalid @enderror" id="course_id" name="course_id" required>
                                    <option value="">Select a course</option>
                                    @foreach($courses as $course)
                                        <option value="{{ $course->id }}" {{ old('course_id') == $course->id ? 'selected' : '' }}>
                                            {{ $course->title }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('course_id')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="subject" class="form-label">Subject</label>
                                    <select class="form-select @error('subject') is-invalid @enderror" id="subject" name="subject" required>
                                        <option value="">Select subject</option>
                                        <option value="math" {{ old('subject') === 'math' ? 'selected' : '' }}>Math</option>
                                        <option value="science" {{ old('subject') === 'science' ? 'selected' : '' }}>Science</option>
                                        <option value="english" {{ old('subject') === 'english' ? 'selected' : '' }}>English</option>
                                        <option value="history" {{ old('subject') === 'history' ? 'selected' : '' }}>History</option>
                                        <option value="other" {{ old('subject') === 'other' ? 'selected' : '' }}>Other</option>
                                    </select>
                                    @error('subject')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                                <div class="col-md-6">
                                    <label for="difficulty" class="form-label">Difficulty</label>
                                    <select class="form-select @error('difficulty') is-invalid @enderror" id="difficulty" name="difficulty" required>
                                        <option value="">Select difficulty</option>
                                        <option value="easy" {{ old('difficulty') === 'easy' ? 'selected' : '' }}>Easy</option>
                                        <option value="medium" {{ old('difficulty') === 'medium' ? 'selected' : '' }}>Medium</option>
                                        <option value="hard" {{ old('difficulty') === 'hard' ? 'selected' : '' }}>Hard</option>
                                    </select>
                                    @error('difficulty')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control @error('description') is-invalid @enderror" 
                                          id="description" name="description" rows="3" required>{{ old('description') }}</textarea>
                                @error('description')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Provide context about your assignment or homework</div>
                            </div>

                            <div class="mb-3">
                                <label for="question" class="form-label">Your Question</label>
                                <textarea class="form-control @error('question') is-invalid @enderror" 
                                          id="question" name="question" rows="6" required>{{ old('question') }}</textarea>
                                @error('question')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Be specific about what you're struggling with and what kind of help you need</div>
                            </div>

                            <div class="mb-3">
                                <label for="attachments" class="form-label">Attachments (Optional)</label>
                                <input type="file" class="form-control @error('attachments.*') is-invalid @enderror" 
                                       id="attachments" name="attachments[]" multiple>
                                @error('attachments.*')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">You can attach images, documents, or other files related to your question. Max 5MB per file.</div>
                            </div>

                            <div class="mb-3">
                                <label for="due_date" class="form-label">Due Date (Optional)</label>
                                <input type="datetime-local" class="form-control @error('due_date') is-invalid @enderror" 
                                       id="due_date" name="due_date" value="{{ old('due_date') }}">
                                @error('due_date')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">When do you need the answer by?</div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <a href="{{ route('homework.index') }}" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-send me-2"></i>Ask Question
                                    <span class="loading">
                                        <i class="bi bi-hourglass-split me-2"></i>Submitting...
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Tips -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="bi bi-lightbulb me-2"></i>Tips for Getting Better Help
                        </h6>
                    </div>
                    <div class="card-body">
                        <ul class="mb-0">
                            <li>Be specific about what you're struggling with</li>
                            <li>Show what you've already tried</li>
                            <li>Include relevant context about your assignment</li>
                            <li>Attach images or documents if they help explain your question</li>
                            <li>Use proper grammar and formatting to make your question clear</li>
                            <li>Set a realistic due date if you have one</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       │   ├── index.blade.php
<!-- resources/views/homework/index.blade.php -->
<x-app-layout>
    <x-slot name="title">Homework Help - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-md-8">
                <h2>Homework Help</h2>
                <p class="text-muted">Get help with your homework from teachers and experts</p>
            </div>
            <div class="col-md-4 text-md-end">
                @if(auth()->user()->role === 'student')
                    <a href="{{ route('homework.create') }}" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Ask Question
                    </a>
                @endif
            </div>
        </div>

        <!-- Filters -->
        <div class="card mb-4">
            <div class="card-body">
                <form method="GET" action="{{ route('homework.index') }}">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <select name="status" class="form-select">
                                <option value="">All Status</option>
                                <option value="pending" {{ request('status') === 'pending' ? 'selected' : '' }}>Pending</option>
                                <option value="answered" {{ request('status') === 'answered' ? 'selected' : '' }}>Answered</option>
                                <option value="closed" {{ request('status') === 'closed' ? 'selected' : '' }}>Closed</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select name="subject" class="form-select">
                                <option value="">All Subjects</option>
                                <option value="math" {{ request('subject') === 'math' ? 'selected' : '' }}>Math</option>
                                <option value="science" {{ request('subject') === 'science' ? 'selected' : '' }}>Science</option>
                                <option value="english" {{ request('subject') === 'english' ? 'selected' : '' }}>English</option>
                                <option value="history" {{ request('subject') === 'history' ? 'selected' : '' }}>History</option>
                                <option value="other" {{ request('subject') === 'other' ? 'selected' : '' }}>Other</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select name="difficulty" class="form-select">
                                <option value="">All Difficulties</option>
                                <option value="easy" {{ request('difficulty') === 'easy' ? 'selected' : '' }}>Easy</option>
                                <option value="medium" {{ request('difficulty') === 'medium' ? 'selected' : '' }}>Medium</option>
                                <option value="hard" {{ request('difficulty') === 'hard' ? 'selected' : '' }}>Hard</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-search me-1"></i>Filter
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Homework List -->
        @if($homework->count() > 0)
            <div class="row">
                @foreach($homework as $hw)
                    <div class="col-md-6 mb-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <div class="flex-grow-1">
                                        <h6 class="card-title mb-2">
                                            <a href="{{ route('homework.show', $hw->id) }}" class="text-decoration-none">
                                                {{ $hw->title }}
                                            </a>
                                        </h6>
                                        <p class="card-text text-muted small">{{ Str::limit($hw->description, 100) }}</p>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge bg-{{ $hw->status === 'pending' ? 'warning' : ($hw->status === 'answered' ? 'success' : 'secondary') }}">
                                            {{ ucfirst($hw->status) }}
                                        </span>
                                    </div>
                                </div>

                                <div class="d-flex align-items-center mb-3">
                                    <img src="{{ $hw->student->avatar_url }}" alt="{{ $hw->student->name }}" class="avatar avatar-sm me-2">
                                    <div class="flex-grow-1">
                                        <small class="text-muted">
                                            by {{ $hw->student->name }} in {{ $hw->course->title }}
                                        </small>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <span class="badge bg-primary">{{ ucfirst($hw->subject) }}</span>
                                        <span class="badge bg-info">{{ ucfirst($hw->difficulty) }}</span>
                                        @if($hw->attachments && count($hw->attachments) > 0)
                                            <span class="badge bg-secondary">
                                                <i class="bi bi-paperclip"></i> {{ count($hw->attachments) }}
                                            </span>
                                        @endif
                                    </div>
                                    <small class="text-muted">{{ $hw->created_at->diffForHumans() }}</small>
                                </div>
                            </div>
                            <div class="card-footer bg-transparent">
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <i class="bi bi-chat me-1"></i>{{ $hw->answers->count() }} answers
                                        @if($hw->bestAnswer)
                                            <i class="bi bi-check-circle text-success ms-2"></i>
                                        @endif
                                    </small>
                                    <a href="{{ route('homework.show', $hw->id) }}" class="btn btn-sm btn-outline-primary">
                                        View Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                @endforeach
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-center">
                {{ $homework->withQueryString()->links() }}
            </div>
        @else
            <div class="text-center py-5">
                <i class="bi bi-question-circle display-1 text-muted"></i>
                <h4 class="text-muted mt-3">No homework questions found</h4>
                <p class="text-muted">
                    @if(auth()->user()->role === 'student')
                        Ask your first homework question to get help from teachers!
                    @else
                        No questions need your help right now.
                    @endif
                </p>
                @if(auth()->user()->role === 'student')
                    <a href="{{ route('homework.create') }}" class="btn btn-primary">Ask Question</a>
                @endif
            </div>
        @endif
    </div>
</x-app-layout>
│       │   └── show.blade.php
<!-- resources/views/homework/show.blade.php -->
<x-app-layout>
    <x-slot name="title">{{ $homework->title }} - Homework - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row">
            <div class="col-lg-8">
                <!-- Question -->
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h4 class="mb-2">{{ $homework->title }}</h4>
                                <div class="d-flex gap-2">
                                    <span class="badge bg-{{ $homework->status === 'pending' ? 'warning' : ($homework->status === 'answered' ? 'success' : 'secondary') }}">
                                        {{ ucfirst($homework->status) }}
                                    </span>
                                    <span class="badge bg-primary">{{ ucfirst($homework->subject) }}</span>
                                    <span class="badge bg-info">{{ ucfirst($homework->difficulty) }}</span>
                                </div>
                            </div>
                            @if(auth()->id() === $homework->student_id)
                                <div class="dropdown">
                                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown">
                                        <i class="bi bi-three-dots"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="{{ route('homework.edit', $homework->id) }}">
                                            <i class="bi bi-pencil me-2"></i>Edit Question
                                        </a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item text-danger" href="#" onclick="if(confirm('Are you sure?')) document.getElementById('delete-form').submit();">
                                            <i class="bi bi-trash me-2"></i>Delete Question
                                        </a></li>
                                    </ul>
                                </div>
                                <form id="delete-form" action="{{ route('homework.destroy', $homework->id) }}" method="POST" class="d-none">
                                    @csrf
                                    @method('DELETE')
                                </form>
                            @endif
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="d-flex mb-3">
                            <img src="{{ $homework->student->avatar_url }}" alt="{{ $homework->student->name }}" class="avatar me-3">
                            <div class="flex-grow-1">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="mb-0">{{ $homework->student->name }}</h6>
                                        <small class="text-muted">{{ ucfirst($homework->student->role) }} • {{ $homework->course->title }}</small>
                                    </div>
                                    <small class="text-muted">{{ $homework->created_at->format('M d, Y \a\t H:i') }}</small>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <h6>Description:</h6>
                            <p>{{ $homework->description }}</p>
                        </div>

                        <div class="mb-3">
                            <h6>Question:</h6>
                            <div class="p-3 bg-light rounded">
                                {!! nl2br(e($homework->question)) !!}
                            </div>
                        </div>

                        @if($homework->attachments && count($homework->attachments) > 0)
                            <div class="mb-3">
                                <h6>Attachments:</h6>
                                <div class="list-group">
                                    @foreach($homework->attachments as $attachment)
                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <i class="bi bi-file-earmark me-2"></i>
                                                {{ $attachment['name'] }}
                                                <small class="text-muted">({{ number_format($attachment['size'] / 1024, 2) }} KB)</small>
                                            </div>
                                            <a href="{{ asset('storage/' . $attachment['path']) }}" target="_blank" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-download me-1"></i>Download
                                            </a>
                                        </div>
                                    @endforeach
                                </div>
                            </div>
                        @endif

                        @if($homework->due_date)
                            <div class="alert alert-info">
                                <i class="bi bi-clock me-2"></i>
                                <strong>Due Date:</strong> {{ $homework->due_date->format('M d, Y \a\t H:i') }}
                                @if($homework->due_date->isPast())
                                    <span class="text-danger">(Overdue)</span>
                                @endif
                            </div>
                        @endif
                    </div>
                </div>

                <!-- Answers -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">{{ $answers->count() }} Answer{{ $answers->count() !== 1 ? 's' : '' }}</h5>
                    </div>
                    <div class="card-body">
                        @if($answers->count() > 0)
                            @foreach($answers as $answer)
                                <div class="answer-item mb-4 {{ !$loop->last ? 'pb-4 border-bottom' : '' }}" id="answer-{{ $answer->id }}">
                                    <div class="d-flex">
                                        <img src="{{ $answer->teacher->avatar_url }}" alt="{{ $answer->teacher->name }}" class="avatar me-3">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-start mb-2">
                                                <div>
                                                    <h6 class="mb-0">{{ $answer->teacher->name }}</h6>
                                                    <small class="text-muted">{{ ucfirst($answer->teacher->role) }}</small>
                                                </div>
                                                <div class="text-end">
                                                    <small class="text-muted">{{ $answer->created_at->diffForHumans() }}</small>
                                                    @if($answer->is_best_answer)
                                                        <span class="badge bg-success ms-2">
                                                            <i class="bi bi-check-circle me-1"></i>Best Answer
                                                        </span>
                                                    @endif
                                                </div>
                                            </div>
                                            
                                            <div class="content mb-3">
                                                <div class="p-3 bg-light rounded">
                                                    {!! nl2br(e($answer->answer)) !!}
                                                </div>
                                                @if($answer->explanation)
                                                    <div class="mt-2">
                                                        <h6 class="small">Explanation:</h6>
                                                        <p class="small text-muted">{!! nl2br(e($answer->explanation)) !!}</p>
                                                    </div>
                                                @endif
                                            </div>

                                            @if($answer->attachments && count($answer->attachments) > 0)
                                                <div class="mb-3">
                                                    <h6 class="small">Attachments:</h6>
                                                    <div class="list-group list-group-flush">
                                                        @foreach($answer->attachments as $attachment)
                                                            <div class="list-group-item px-0 py-2">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <div>
                                                                        <i class="bi bi-file-earmark me-2"></i>
                                                                        {{ $attachment['name'] }}
                                                                        <small class="text-muted">({{ number_format($attachment['size'] / 1024, 2) }} KB)</small>
                                                                    </div>
                                                                    <a href="{{ asset('storage/' . $attachment['path']) }}" target="_blank" class="btn btn-sm btn-outline-primary">
                                                                        <i class="bi bi-download me-1"></i>Download
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        @endforeach
                                                    </div>
                                                </div>
                                            @endif
                                            
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div class="btn-group btn-group-sm">
                                                    @auth
                                                        <button class="btn btn-outline-primary" onclick="upvoteAnswer({{ $answer->id }})">
                                                            <i class="bi bi-arrow-up"></i> {{ $answer->upvotes }}
                                                        </button>
                                                        @if(auth()->id() === $homework->student_id && !$answer->is_best_answer)
                                                            <button class="btn btn-outline-success" onclick="markBestAnswer({{ $answer->id }})">
                                                                <i class="bi bi-check"></i> Mark as Best
                                                            </button>
                                                        @endif
                                                    @endauth
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            @endforeach
                        @else
                            <div class="text-center py-4">
                                <i class="bi bi-chat display-4 text-muted"></i>
                                <h6 class="text-muted mt-3">No answers yet</h6>
                                <p class="text-muted">Be the first to help this student!</p>
                            </div>
                        @endif
                    </div>
                </div>

                <!-- Answer Form -->
                @auth
                    @if(auth()->user()->isTeacher() && $homework->status !== 'closed')
                        <div class="card mt-4">
                            <div class="card-header">
                                <h6 class="mb-0">Your Answer</h6>
                            </div>
                            <div class="card-body">
                                <form action="{{ route('homework.answer', $homework->id) }}" method="POST" enctype="multipart/form-data">
                                    @csrf
                                    <div class="mb-3">
                                        <label for="answer" class="form-label">Answer</label>
                                        <textarea name="answer" class="form-control @error('answer') is-invalid @enderror" 
                                                  rows="5" placeholder="Provide your answer..." required>{{ old('answer') }}</textarea>
                                        @error('answer')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="mb-3">
                                        <label for="explanation" class="form-label">Explanation (Optional)</label>
                                        <textarea name="explanation" class="form-control @error('explanation') is-invalid @enderror" 
                                                  rows="3" placeholder="Explain your solution...">{{ old('explanation') }}</textarea>
                                        @error('explanation')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="mb-3">
                                        <label for="attachments" class="form-label">Attachments (Optional)</label>
                                        <input type="file" class="form-control @error('attachments.*') is-invalid @enderror" 
                                               name="attachments[]" multiple>
                                        @error('attachments.*')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="d-flex justify-content-end">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="bi bi-send me-2"></i>Submit Answer
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    @elseif(auth()->user()->role === 'student' && auth()->id() !== $homework->student_id)
                        <div class="alert alert-info mt-4">
                            <i class="bi bi-info-circle me-2"></i>Only teachers and experts can answer homework questions.
                        </div>
                    @elseif($homework->status === 'closed')
                        <div class="alert alert-warning mt-4">
                            <i class="bi bi-lock me-2"></i>This homework question is closed and no longer accepting answers.
                        </div>
                    @endif
                @else
                    <div class="card mt-4">
                        <div class="card-body text-center">
                            <h6>Help this student!</h6>
                            <p class="text-muted">Sign in to provide an answer.</p>
                            <a href="{{ route('login') }}" class="btn btn-primary">Sign In</a>
                        </div>
                    </div>
                @endauth
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Question Info -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Question Details</h6>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-4">
                                <div class="border-end">
                                    <i class="bi bi-chat text-primary"></i>
                                    <div class="fw-bold">{{ $answers->count() }}</div>
                                    <small class="text-muted">Answers</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="border-end">
                                    <i class="bi bi-arrow-up text-success"></i>
                                    <div class="fw-bold">{{ $answers->sum('upvotes') }}</div>
                                    <small class="text-muted">Upvotes</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <i class="bi bi-clock text-info"></i>
                                <div class="fw-bold">{{ $homework->created_at->diffForHumans() }}</div>
                                <small class="text-muted">Asked</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Course Info -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Course</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <img src="{{ $homework->course->thumbnail_url }}" alt="{{ $homework->course->title }}" class="rounded me-3" style="width: 50px; height: 50px; object-fit: cover;">
                            <div>
                                <h6 class="mb-1">{{ $homework->course->title }}</h6>
                                <small class="text-muted">by {{ $homework->course->instructor->name }}</small>
                            </div>
                        </div>
                        <div class="mt-3">
                            <a href="{{ route('courses.show', $homework->course->slug) }}" class="btn btn-outline-primary btn-sm w-100">
                                <i class="bi bi-eye me-1"></i>View Course
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        function upvoteAnswer(answerId) {
            fetch(`/homework/answer/${answerId}/upvote`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.upvotes !== undefined) {
                    location.reload();
                }
            })
            .catch(error => console.error('Error:', error));
        }

        function markBestAnswer(answerId) {
            if (confirm('Mark this as the best answer?')) {
                fetch(`/homework/answer/${answerId}/best-answer`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        }
    </script>
    @endpush
</x-app-layout>
│       ├── layouts/
│       │   ├── app.blade.php
<!-- resources/views/layouts/app.blade.php -->
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <title>{{ $title ?? config('app.name', 'Learning Platform') }}</title>

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.bunny.net">
    <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    
    <!-- Custom CSS -->
    <style>
        :root {
            --primary-color: #4f46e5;
            --primary-dark: #3730a3;
            --secondary-color: #64748b;
            --success-color: #059669;
            --warning-color: #d97706;
            --danger-color: #dc2626;
        }

        body {
            font-family: 'Figtree', sans-serif;
            background-color: #f8fafc;
        }

        .navbar-brand {
            font-weight: 600;
            font-size: 1.5rem;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
        }

        .card {
            border: none;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            border-radius: 0.75rem;
        }

        .card:hover {
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .badge {
            font-weight: 500;
        }

        .navbar {
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
        }

        .hero-section {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
        }

        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .course-card {
            transition: transform 0.3s ease;
        }

        .course-card:hover {
            transform: translateY(-5px);
        }

        .forum-card {
            border-left: 4px solid var(--primary-color);
        }

        .avatar {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 50%;
        }

        .avatar-sm {
            width: 24px;
            height: 24px;
        }

        .avatar-lg {
            width: 80px;
            height: 80px;
        }

        .loading {
            display: none;
        }

        .loading.show {
            display: block;
        }

        @media (max-width: 768px) {
            .navbar-nav {
                text-align: center;
            }
            
            .hero-section h1 {
                font-size: 2rem;
            }
            
            .card-columns {
                column-count: 1;
            }
        }

        @media (min-width: 768px) and (max-width: 1024px) {
            .card-columns {
                column-count: 2;
            }
        }
    </style>

    @stack('styles')
</head>
<body>
    <div id="app">
        <!-- Navigation -->
        <nav class="navbar navbar-expand-lg navbar-light bg-white sticky-top">
            <div class="container">
                <a class="navbar-brand text-primary" href="{{ route('home') }}">
                    <i class="bi bi-mortarboard-fill me-2"></i>
                    {{ config('app.name', 'Learning Platform') }}
                </a>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link {{ request()->routeIs('home') ? 'active' : '' }}" href="{{ route('home') }}">
                                <i class="bi bi-house me-1"></i>Home
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link {{ request()->routeIs('courses.*') ? 'active' : '' }}" href="{{ route('courses.index') }}">
                                <i class="bi bi-book me-1"></i>Courses
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link {{ request()->routeIs('forum.*') ? 'active' : '' }}" href="{{ route('forum.index') }}">
                                <i class="bi bi-chat-dots me-1"></i>Forum
                            </a>
                        </li>
                        @auth
                            <li class="nav-item">
                                <a class="nav-link {{ request()->routeIs('homework.*') ? 'active' : '' }}" href="{{ route('homework.index') }}">
                                    <i class="bi bi-question-circle me-1"></i>Homework
                                </a>
                            </li>
                        @endauth
                    </ul>

                    <ul class="navbar-nav">
                        @guest
                            <li class="nav-item">
                                <a class="nav-link" href="{{ route('login') }}">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="{{ route('register') }}">Register</a>
                            </li>
                        @else
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" role="button" data-bs-toggle="dropdown">
                                    <img src="{{ auth()->user()->avatar_url }}" alt="Avatar" class="avatar avatar-sm me-2">
                                    {{ auth()->user()->name }}
                                    <span class="badge bg-primary ms-2">{{ ucfirst(auth()->user()->role) }}</span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="{{ route('dashboard') }}">
                                        <i class="bi bi-speedometer2 me-2"></i>Dashboard
                                    </a></li>
                                    <li><a class="dropdown-item" href="{{ route('profile.show', auth()->id()) }}">
                                        <i class="bi bi-person me-2"></i>Profile
                                    </a></li>
                                    <li><a class="dropdown-item" href="{{ route('profile.edit') }}">
                                        <i class="bi bi-gear me-2"></i>Settings
                                    </a></li>
                                    @if(auth()->user()->isTeacher())
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="{{ route('courses.create') }}">
                                            <i class="bi bi-plus-circle me-2"></i>Create Course
                                        </a></li>
                                    @endif
                                    @if(auth()->user()->isModerator())
                                        <li><a class="dropdown-item" href="{{ route('admin.index') }}">
                                            <i class="bi bi-shield-check me-2"></i>Admin Panel
                                        </a></li>
                                    @endif
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form method="POST" action="{{ route('logout') }}">
                                            @csrf
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="bi bi-box-arrow-right me-2"></i>Logout
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        @endguest
                    </ul>
                </div>
            </div>
        </nav>

        <!-- Flash Messages -->
        @if(session('success'))
            <div class="alert alert-success alert-dismissible fade show m-0" role="alert">
                <div class="container">
                    <i class="bi bi-check-circle me-2"></i>{{ session('success') }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            </div>
        @endif

        @if(session('error'))
            <div class="alert alert-danger alert-dismissible fade show m-0" role="alert">
                <div class="container">
                    <i class="bi bi-exclamation-triangle me-2"></i>{{ session('error') }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            </div>
        @endif

        @if($errors->any())
            <div class="alert alert-danger alert-dismissible fade show m-0" role="alert">
                <div class="container">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <ul class="mb-0">
                        @foreach($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            </div>
        @endif

        <!-- Main Content -->
        <main>
            {{ $slot }}
        </main>

        <!-- Footer -->
        <footer class="bg-dark text-light py-5 mt-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-4">
                        <h5 class="text-primary">{{ config('app.name') }}</h5>
                        <p class="text-muted">Platform pembelajaran online terbaik untuk mengembangkan skill dan pengetahuan Anda.</p>
                    </div>
                    <div class="col-md-2">
                        <h6>Platform</h6>
                        <ul class="list-unstyled">
                            <li><a href="{{ route('courses.index') }}" class="text-muted text-decoration-none">Courses</a></li>
                            <li><a href="{{ route('forum.index') }}" class="text-muted text-decoration-none">Forum</a></li>
                            <li><a href="{{ route('homework.index') }}" class="text-muted text-decoration-none">Homework</a></li>
                        </ul>
                    </div>
                    <div class="col-md-2">
                        <h6>Support</h6>
                        <ul class="list-unstyled">
                            <li><a href="#" class="text-muted text-decoration-none">Help Center</a></li>
                            <li><a href="#" class="text-muted text-decoration-none">Contact Us</a></li>
                            <li><a href="#" class="text-muted text-decoration-none">FAQ</a></li>
                        </ul>
                    </div>
                    <div class="col-md-4">
                        <h6>Newsletter</h6>
                        <p class="text-muted">Subscribe untuk mendapatkan update terbaru.</p>
                        <div class="input-group">
                            <input type="email" class="form-control" placeholder="Email address">
                            <button class="btn btn-primary">Subscribe</button>
                        </div>
                    </div>
                </div>
                <hr class="my-4">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <p class="text-muted mb-0">&copy; {{ date('Y') }} {{ config('app.name') }}. All rights reserved.</p>
                    </div>
                    <div class="col-md-6 text-md-end">
                        <a href="#" class="text-muted me-3"><i class="bi bi-facebook"></i></a>
                        <a href="#" class="text-muted me-3"><i class="bi bi-twitter"></i></a>
                        <a href="#" class="text-muted me-3"><i class="bi bi-instagram"></i></a>
                        <a href="#" class="text-muted"><i class="bi bi-linkedin"></i></a>
                    </div>
                </div>
            </div>
        </footer>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Custom JS -->
    <script>
        // Auto-hide alerts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                var alerts = document.querySelectorAll('.alert');
                alerts.forEach(function(alert) {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });

        // Loading state for forms
        document.addEventListener('DOMContentLoaded', function() {
            var forms = document.querySelectorAll('form');
            forms.forEach(function(form) {
                form.addEventListener('submit', function() {
                    var loadingElements = form.querySelectorAll('.loading');
                    var submitButtons = form.querySelectorAll('button[type="submit"]');
                    
                    loadingElements.forEach(function(el) {
                        el.classList.add('show');
                    });
                    
                    submitButtons.forEach(function(btn) {
                        btn.disabled = true;
                        btn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Processing...';
                    });
                });
            });
        });
    </script>

    @stack('scripts')
</body>
</html>
│       │   └── guest.blade.php
<!-- resources/views/layouts/guest.blade.php -->
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <title>{{ config('app.name', 'Learning Platform') }}</title>

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.bunny.net">
    <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    
    <style>
        body {
            font-family: 'Figtree', sans-serif;
        }
        .min-vh-100 {
            min-height: 100vh;
        }
    </style>
</head>
<body>
    <div class="font-sans text-gray-900 antialiased">
        {{ $slot }}
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
│       ├── modules/
│       │   └── create.blade.php
<!-- resources/views/modules/create.blade.php -->
<x-app-layout>
    <x-slot name="title">Add Module to {{ $course->title }} - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">Add Module to: {{ $course->title }}</h4>
                    </div>
                    <div class="card-body">
                        <form action="{{ route('modules.store', $course->slug) }}" method="POST" enctype="multipart/form-data">
                            @csrf
                            
                            <div class="mb-3">
                                <label for="title" class="form-label">Module Title</label>
                                <input type="text" class="form-control @error('title') is-invalid @enderror" 
                                       id="title" name="title" value="{{ old('title') }}" required>
                                @error('title')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">Description (Optional)</label>
                                <textarea class="form-control @error('description') is-invalid @enderror" 
                                          id="description" name="description" rows="2">{{ old('description') }}</textarea>
                                @error('description')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="content" class="form-label">Module Content</label>
                                <textarea class="form-control @error('content') is-invalid @enderror" 
                                          id="content" name="content" rows="10" required>{{ old('content') }}</textarea>
                                @error('content')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">You can use basic HTML tags for formatting.</div>
                            </div>

                            <div class="mb-3">
                                <label for="video_url" class="form-label">Video URL (Optional)</label>
                                <input type="url" class="form-control @error('video_url') is-invalid @enderror" 
                                       id="video_url" name="video_url" value="{{ old('video_url') }}">
                                @error('video_url')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">YouTube, Vimeo, or direct video file URL</div>
                            </div>

                            <div class="mb-3">
                                <label for="attachments" class="form-label">Attachments (Optional)</label>
                                <input type="file" class="form-control @error('attachments.*') is-invalid @enderror" 
                                       id="attachments" name="attachments[]" multiple>
                                @error('attachments.*')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">You can select multiple files. Max 10MB per file.</div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="order" class="form-label">Order</label>
                                    <input type="number" class="form-control @error('order') is-invalid @enderror" 
                                           id="order" name="order" value="{{ old('order') }}" min="0">
                                    @error('order')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                    <div class="form-text">Leave empty to add at the end</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="duration_minutes" class="form-label">Duration (minutes)</label>
                                    <input type="number" class="form-control @error('duration_minutes') is-invalid @enderror" 
                                           id="duration_minutes" name="duration_minutes" value="{{ old('duration_minutes', 0) }}" min="0">
                                    @error('duration_minutes')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="is_published" name="is_published" value="1" 
                                           {{ old('is_published', true) ? 'checked' : '' }}>
                                    <label class="form-check-label" for="is_published">
                                        Publish module (make it visible to students)
                                    </label>
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <a href="{{ route('courses.show', $course->slug) }}" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check me-2"></i>Create Module
                                    <span class="loading">
                                        <i class="bi bi-hourglass-split me-2"></i>Creating...
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│       └── profile/
│           ├── edit.blade.php
<!-- resources/views/profile/edit.blade.php -->
<x-app-layout>
    <x-slot name="title">Edit Profile - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row">
            <!-- Profile Information -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Profile Information</h5>
                    </div>
                    <div class="card-body">
                        <form method="post" action="{{ route('profile.update') }}" enctype="multipart/form-data">
                            @csrf
                            @method('patch')

                            <div class="row mb-3">
                                <div class="col-md-4 text-center">
                                    <img src="{{ $user->avatar_url }}" alt="Avatar" class="avatar avatar-lg mb-3" id="avatar-preview">
                                    <div>
                                        <input type="file" class="form-control @error('avatar') is-invalid @enderror" 
                                               name="avatar" accept="image/*" onchange="previewAvatar(this)">
                                        @error('avatar')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                        <div class="form-text">JPG, PNG, GIF up to 2MB</div>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label for="name" class="form-label">Name</label>
                                        <input type="text" class="form-control @error('name') is-invalid @enderror" 
                                               id="name" name="name" value="{{ old('name', $user->name) }}" required>
                                        @error('name')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>

                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <input type="email" class="form-control @error('email') is-invalid @enderror" 
                                               id="email" name="email" value="{{ old('email', $user->email) }}" required>
                                        @error('email')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                        @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && ! $user->hasVerifiedEmail())
                                            <div class="form-text text-warning">
                                                Your email address is unverified.
                                                <button form="send-verification" class="btn btn-link p-0 text-decoration-underline">
                                                    Click here to re-send the verification email.
                                                </button>
                                            </div>
                                            @if (session('status') === 'verification-link-sent')
                                                <div class="form-text text-success">
                                                    A new verification link has been sent to your email address.
                                                </div>
                                            @endif
                                        @endif
                                    </div>

                                    <div class="mb-3">
                                        <label for="level" class="form-label">Experience Level</label>
                                        <select class="form-select @error('level') is-invalid @enderror" id="level" name="level" required>
                                            <option value="beginner" {{ old('level', $user->level) === 'beginner' ? 'selected' : '' }}>Beginner</option>
                                            <option value="intermediate" {{ old('level', $user->level) === 'intermediate' ? 'selected' : '' }}>Intermediate</option>
                                            <option value="advanced" {{ old('level', $user->level) === 'advanced' ? 'selected' : '' }}>Advanced</option>
                                        </select>
                                        @error('level')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="bio" class="form-label">Bio</label>
                                <textarea class="form-control @error('bio') is-invalid @enderror" 
                                          id="bio" name="bio" rows="4">{{ old('bio', $user->bio) }}</textarea>
                                @error('bio')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <div class="form-text">Tell others about yourself</div>
                            </div>

                            <div class="mb-3">
                                <label for="institution" class="form-label">Institution/School</label>
                                <input type="text" class="form-control @error('institution') is-invalid @enderror" 
                                       id="institution" name="institution" value="{{ old('institution', $user->institution) }}">
                                @error('institution')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="d-flex justify-content-between">
                                <a href="{{ route('profile.show', $user->id) }}" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left me-2"></i>Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check me-2"></i>Save Changes
                                    <span class="loading">
                                        <i class="bi bi-hourglass-split me-2"></i>Saving...
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Change Password -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Update Password</h6>
                    </div>
                    <div class="card-body">
                        <form method="post" action="{{ route('password.update') }}">
                            @csrf
                            @method('put')

                            <div class="mb-3">
                                <label for="update_password_current_password" class="form-label">Current Password</label>
                                <input type="password" class="form-control @error('current_password', 'updatePassword') is-invalid @enderror" 
                                       id="update_password_current_password" name="current_password">
                                @error('current_password', 'updatePassword')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="update_password_password" class="form-label">New Password</label>
                                <input type="password" class="form-control @error('password', 'updatePassword') is-invalid @enderror" 
                                       id="update_password_password" name="password">
                                @error('password', 'updatePassword')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="mb-3">
                                <label for="update_password_password_confirmation" class="form-label">Confirm Password</label>
                                <input type="password" class="form-control @error('password_confirmation', 'updatePassword') is-invalid @enderror" 
                                       id="update_password_password_confirmation" name="password_confirmation">
                                @error('password_confirmation', 'updatePassword')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-shield-check me-2"></i>Update Password
                            </button>
                        </form>
                    </div>
                </div>

                <!-- Delete Account -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h6 class="mb-0 text-danger">Delete Account</h6>
                    </div>
                    <div class="card-body">
                        <p class="text-muted small">Once your account is deleted, all of its resources and data will be permanently deleted.</p>
                        <button type="button" class="btn btn-danger w-100" data-bs-toggle="modal" data-bs-target="#deleteAccountModal">
                            <i class="bi bi-trash me-2"></i>Delete Account
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Account Modal -->
    <div class="modal fade" id="deleteAccountModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger">Delete Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete your account?</p>
                    <p class="text-muted small">Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.</p>
                    
                    <form method="post" action="{{ route('profile.destroy') }}" id="delete-account-form">
                        @csrf
                        @method('delete')

                        <div class="mb-3">
                            <label for="delete_password" class="form-label">Password</label>
                            <input type="password" class="form-control @error('password', 'userDeletion') is-invalid @enderror" 
                                   id="delete_password" name="password" required>
                            @error('password', 'userDeletion')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" form="delete-account-form" class="btn btn-danger">
                        <i class="bi bi-trash me-2"></i>Delete Account
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Email Verification Form -->
    @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && ! $user->hasVerifiedEmail())
        <form id="send-verification" method="post" action="{{ route('verification.send') }}">
            @csrf
        </form>
    @endif

    @push('scripts')
    <script>
        function previewAvatar(input) {
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('avatar-preview').src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        // Show delete account modal if there are errors
        @if($errors->userDeletion->any())
            document.addEventListener('DOMContentLoaded', function() {
                const modal = new bootstrap.Modal(document.getElementById('deleteAccountModal'));
                modal.show();
            });
        @endif
    </script>
    @endpush
</x-app-layout>
│           ├── show.blade.php
<!-- resources/views/profile/show.blade.php -->
<x-app-layout>
    <x-slot name="title">{{ $user->name }} - Profile - {{ config('app.name') }}</x-slot>

    <div class="container py-4">
        <div class="row">
            <!-- Profile Info -->
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-body text-center">
                        <img src="{{ $user->avatar_url }}" alt="{{ $user->name }}" class="avatar avatar-lg mb-3">
                        <h4>{{ $user->name }}</h4>
                        <p class="text-muted">{{ $user->email }}</p>
                        <span class="badge bg-primary fs-6 mb-3">{{ ucfirst($user->role) }}</span>
                        
                        @if($user->bio)
                            <p class="text-muted">{{ $user->bio }}</p>
                        @endif

                        @if($user->institution)
                            <div class="mb-2">
                                <i class="bi bi-building me-2 text-muted"></i>
                                <span class="text-muted">{{ $user->institution }}</span>
                            </div>
                        @endif

                        <div class="mb-3">
                            <i class="bi bi-trophy me-2 text-warning"></i>
                            <span class="fw-bold">{{ number_format($user->points) }}</span> points
                        </div>

                        <div class="mb-3">
                            <span class="badge bg-info">{{ ucfirst($user->level) }} Level</span>
                            @if($user->is_verified)
                                <span class="badge bg-success">
                                    <i class="bi bi-check-circle me-1"></i>Verified
                                </span>
                            @endif
                        </div>

                        @if(auth()->check() && auth()->id() === $user->id)
                            <a href="{{ route('profile.edit') }}" class="btn btn-primary w-100">
                                <i class="bi bi-gear me-2"></i>Edit Profile
                            </a>
                        @endif
                    </div>
                </div>

                <!-- Stats -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h6 class="mb-0">Statistics</h6>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-6">
                                <div class="border-end">
                                    <div class="fw-bold text-primary">{{ $stats['courses_created'] }}</div>
                                    <small class="text-muted">Courses Created</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="fw-bold text-success">{{ $stats['courses_enrolled'] }}</div>
                                <small class="text-muted">Courses Enrolled</small>
                            </div>
                        </div>
                        <hr>
                        <div class="row text-center">
                            <div class="col-6">
                                <div class="border-end">
                                    <div class="fw-bold text-info">{{ $stats['forum_threads'] }}</div>
                                    <small class="text-muted">Forum Threads</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="fw-bold text-warning">{{ $stats['forum_replies'] }}</div>
                                <small class="text-muted">Forum Replies</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Activity -->
            <div class="col-lg-8">
                <div class="row">
                    <!-- Recent Courses -->
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    @if($user->role === 'student')
                                        Recent Courses Enrolled
                                    @else
                                        Recent Courses Created
                                    @endif
                                </h5>
                            </div>
                            <div class="card-body">
                                @if($recentCourses->count() > 0)
                                    @foreach($recentCourses as $course)
                                        <div class="d-flex align-items-center mb-3 pb-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                            <img src="{{ $course->thumbnail_url }}" alt="{{ $course->title }}" class="rounded me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1">
                                                    <a href="{{ route('courses.show', $course->slug) }}" class="text-decoration-none">
                                                        {{ $course->title }}
                                                    </a>
                                                </h6>
                                                <small class="text-muted">
                                                    {{ $course->category }} • {{ ucfirst($course->level) }}
                                                    @if($user->role === 'student' && isset($course->pivot))
                                                        <span class="mx-2">•</span>
                                                        {{ $course->pivot->progress_percentage ?? 0 }}% completed
                                                    @endif
                                                </small>
                                            </div>
                                            <small class="text-muted">
                                                @if($user->role === 'student' && isset($course->pivot))
                                                    Enrolled {{ \Carbon\Carbon::parse($course->pivot->created_at)->diffForHumans() }}
                                                @else
                                                    Created {{ $course->created_at->diffForHumans() }}
                                                @endif
                                            </small>
                                        </div>
                                    @endforeach
                                @else
                                    <div class="text-center py-4">
                                        <i class="bi bi-book display-4 text-muted"></i>
                                        <h6 class="text-muted mt-3">No courses yet</h6>
                                    </div>
                                @endif
                            </div>
                        </div>
                    </div>

                    <!-- Recent Forum Activity -->
                    <div class="col-12 mt-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Recent Forum Activity</h5>
                            </div>
                            <div class="card-body">
                                @if($recentThreads->count() > 0)
                                    @foreach($recentThreads as $thread)
                                        <div class="d-flex align-items-start mb-3 pb-3 {{ !$loop->last ? 'border-bottom' : '' }}">
                                            <div class="rounded-circle me-3" style="width: 40px; height: 40px; background-color: {{ $thread->category->color }};">
                                                <i class="bi bi-chat-dots text-white d-flex align-items-center justify-content-center h-100"></i>
                                            </div>
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1">
                                                    <a href="{{ route('forum.thread', [$thread->category->slug, $thread->slug]) }}" class="text-decoration-none">
                                                        {{ $thread->title }}
                                                    </a>
                                                </h6>
                                                <small class="text-muted">
                                                    in {{ $thread->category->name }} • {{ $thread->created_at->diffForHumans() }}
                                                    <span class="mx-2">•</span>
                                                    <i class="bi bi-eye me-1"></i>{{ $thread->views }}
                                                    <span class="mx-2">•</span>
                                                    <i class="bi bi-chat me-1"></i>{{ $thread->replies_count }}
                                                </small>
                                            </div>
                                        </div>
                                    @endforeach
                                @else
                                    <div class="text-center py-4">
                                        <i class="bi bi-chat-dots display-4 text-muted"></i>
                                        <h6 class="text-muted mt-3">No forum activity yet</h6>
                                    </div>
                                @endif
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
│   ├── home.blade.php
<!-- resources/views/home.blade.php -->
<x-app-layout>
    <x-slot name="title">Home - {{ config('app.name') }}</x-slot>

    <!-- Hero Section -->
    <section class="hero-section py-5">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <h1 class="display-4 fw-bold mb-4">Learn Without Limits</h1>
                    <p class="lead mb-4">Platform pembelajaran online terlengkap dengan ribuan kursus, forum diskusi aktif, dan bantuan PR dari para ahli.</p>
                    <div class="d-flex gap-3 flex-wrap">
                        <a href="{{ route('courses.index') }}" class="btn btn-light btn-lg">
                            <i class="bi bi-book me-2"></i>Explore Courses
                        </a>
                        @guest
                            <a href="{{ route('register') }}" class="btn btn-outline-light btn-lg">
                                <i class="bi bi-person-plus me-2"></i>Join Free
                            </a>
                        @else
                            <a href="{{ route('dashboard') }}" class="btn btn-outline-light btn-lg">
                                <i class="bi bi-speedometer2 me-2"></i>Dashboard
                            </a>
                        @endguest
                    </div>
                </div>
                <div class="col-lg-6 text-center">
                    <img src="https://via.placeholder.com/500x400/4f46e5/ffffff?text=Learning+Platform" alt="Learning" class="img-fluid rounded-3">
                </div>
            </div>
        </div>
    </section>

    <!-- Stats Section -->
    <section class="py-5 bg-light">
        <div class="container">
            <div class="row g-4">
                <div class="col-md-3">
                    <div class="card stats-card text-center">
                        <div class="card-body">
                            <i class="bi bi-book-half display-4 mb-3"></i>
                            <h3 class="fw-bold">{{ $stats['total_courses'] }}</h3>
                            <p class="mb-0">Active Courses</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card stats-card text-center">
                        <div class="card-body">
                            <i class="bi bi-people display-4 mb-3"></i>
                            <h3 class="fw-bold">{{ $stats['total_students'] }}</h3>
                            <p class="mb-0">Students</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card stats-card text-center">
                        <div class="card-body">
                            <i class="bi bi-person-badge display-4 mb-3"></i>
                            <h3 class="fw-bold">{{ $stats['total_teachers'] }}</h3>
                            <p class="mb-0">Expert Teachers</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card stats-card text-center">
                        <div class="card-body">
                            <i class="bi bi-chat-dots display-4 mb-3"></i>
                            <h3 class="fw-bold">{{ $stats['total_discussions'] }}</h3>
                            <p class="mb-0">Discussions</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Featured Courses -->
    <section class="py-5">
        <div class="container">
            <div class="row mb-4">
                <div class="col-12">
                    <h2 class="text-center mb-3">Featured Courses</h2>
                    <p class="text-center text-muted">Kursus pilihan terbaik dari instruktur berpengalaman</p>
                </div>
            </div>
            
            @if($featuredCourses->count() > 0)
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                    @foreach($featuredCourses as $course)
                        <x-course-card :course="$course" />
                    @endforeach
                </div>
                
                <div class="text-center mt-4">
                    <a href="{{ route('courses.index') }}" class="btn btn-primary btn-lg">
                        <i class="bi bi-arrow-right me-2"></i>View All Courses
                    </a>
                </div>
            @else
                <div class="text-center py-5">
                    <i class="bi bi-book display-1 text-muted"></i>
                    <h4 class="text-muted mt-3">No courses available yet</h4>
                    <p class="text-muted">Check back later for amazing courses!</p>
                </div>
            @endif
        </div>
    </section>

    <!-- Recent Forum Discussions -->
    <section class="py-5 bg-light">
        <div class="container">
            <div class="row mb-4">
                <div class="col-12">
                    <h2 class="text-center mb-3">Recent Discussions</h2>
                    <p class="text-center text-muted">Bergabunglah dalam diskusi terbaru di forum komunitas</p>
                </div>
            </div>
            
            @if($recentThreads->count() > 0)
                <div class="row">
                    <div class="col-lg-8 mx-auto">
                        @foreach($recentThreads as $thread)
                            <x-thread-card :thread="$thread" />
                        @endforeach
                    </div>
                </div>
                
                <div class="text-center mt-4">
                    <a href="{{ route('forum.index') }}" class="btn btn-outline-primary btn-lg">
                        <i class="bi bi-arrow-right me-2"></i>Visit Forum
                    </a>
                </div>
            @else
                <div class="text-center py-5">
                    <i class="bi bi-chat-dots display-1 text-muted"></i>
                    <h4 class="text-muted mt-3">No discussions yet</h4>
                    <p class="text-muted">Be the first to start a conversation!</p>
                </div>
            @endif
        </div>
    </section>

    <!-- CTA Section -->
    <section class="py-5 bg-primary text-white">
        <div class="container text-center">
            <h2 class="mb-3">Ready to Start Learning?</h2>
            <p class="lead mb-4">Join ribuan siswa yang sudah memulai perjalanan belajar mereka</p>
            @guest
                <a href="{{ route('register') }}" class="btn btn-light btn-lg me-3">
                    <i class="bi bi-person-plus me-2"></i>Get Started Free
                </a>
                <a href="{{ route('courses.index') }}" class="btn btn-outline-light btn-lg">
                    <i class="bi bi-search me-2"></i>Browse Courses
                </a>
            @else
                <a href="{{ route('courses.index') }}" class="btn btn-light btn-lg">
                    <i class="bi bi-book me-2"></i>Continue Learning
                </a>
            @endguest
        </div>
    </section>
</x-app-layout>
│   └── welcome.blade.php
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=instrument-sans:400,500,600" rel="stylesheet" />

        <!-- Styles / Scripts -->
        @if (file_exists(public_path('build/manifest.json')) || file_exists(public_path('hot')))
            @vite(['resources/css/app.css', 'resources/js/app.js'])
        @else
            <style>
                /*! tailwindcss v4.0.7 | MIT License | https://tailwindcss.com */@layer theme{:root,:host{--font-sans:'Instrument Sans',ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";--font-serif:ui-serif,Georgia,Cambria,"Times New Roman",Times,serif;--font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;--color-red-50:oklch(.971 .013 17.38);--color-red-100:oklch(.936 .032 17.717);--color-red-200:oklch(.885 .062 18.334);--color-red-300:oklch(.808 .114 19.571);--color-red-400:oklch(.704 .191 22.216);--color-red-500:oklch(.637 .237 25.331);--color-red-600:oklch(.577 .245 27.325);--color-red-700:oklch(.505 .213 27.518);--color-red-800:oklch(.444 .177 26.899);--color-red-900:oklch(.396 .141 25.723);--color-red-950:oklch(.258 .092 26.042);--color-orange-50:oklch(.98 .016 73.684);--color-orange-100:oklch(.954 .038 75.164);--color-orange-200:oklch(.901 .076 70.697);--color-orange-300:oklch(.837 .128 66.29);--color-orange-400:oklch(.75 .183 55.934);--color-orange-500:oklch(.705 .213 47.604);--color-orange-600:oklch(.646 .222 41.116);--color-orange-700:oklch(.553 .195 38.402);--color-orange-800:oklch(.47 .157 37.304);--color-orange-900:oklch(.408 .123 38.172);--color-orange-950:oklch(.266 .079 36.259);--color-amber-50:oklch(.987 .022 95.277);--color-amber-100:oklch(.962 .059 95.617);--color-amber-200:oklch(.924 .12 95.746);--color-amber-300:oklch(.879 .169 91.605);--color-amber-400:oklch(.828 .189 84.429);--color-amber-500:oklch(.769 .188 70.08);--color-amber-600:oklch(.666 .179 58.318);--color-amber-700:oklch(.555 .163 48.998);--color-amber-800:oklch(.473 .137 46.201);--color-amber-900:oklch(.414 .112 45.904);--color-amber-950:oklch(.279 .077 45.635);--color-yellow-50:oklch(.987 .026 102.212);--color-yellow-100:oklch(.973 .071 103.193);--color-yellow-200:oklch(.945 .129 101.54);--color-yellow-300:oklch(.905 .182 98.111);--color-yellow-400:oklch(.852 .199 91.936);--color-yellow-500:oklch(.795 .184 86.047);--color-yellow-600:oklch(.681 .162 75.834);--color-yellow-700:oklch(.554 .135 66.442);--color-yellow-800:oklch(.476 .114 61.907);--color-yellow-900:oklch(.421 .095 57.708);--color-yellow-950:oklch(.286 .066 53.813);--color-lime-50:oklch(.986 .031 120.757);--color-lime-100:oklch(.967 .067 122.328);--color-lime-200:oklch(.938 .127 124.321);--color-lime-300:oklch(.897 .196 126.665);--color-lime-400:oklch(.841 .238 128.85);--color-lime-500:oklch(.768 .233 130.85);--color-lime-600:oklch(.648 .2 131.684);--color-lime-700:oklch(.532 .157 131.589);--color-lime-800:oklch(.453 .124 130.933);--color-lime-900:oklch(.405 .101 131.063);--color-lime-950:oklch(.274 .072 132.109);--color-green-50:oklch(.982 .018 155.826);--color-green-100:oklch(.962 .044 156.743);--color-green-200:oklch(.925 .084 155.995);--color-green-300:oklch(.871 .15 154.449);--color-green-400:oklch(.792 .209 151.711);--color-green-500:oklch(.723 .219 149.579);--color-green-600:oklch(.627 .194 149.214);--color-green-700:oklch(.527 .154 150.069);--color-green-800:oklch(.448 .119 151.328);--color-green-900:oklch(.393 .095 152.535);--color-green-950:oklch(.266 .065 152.934);--color-emerald-50:oklch(.979 .021 166.113);--color-emerald-100:oklch(.95 .052 163.051);--color-emerald-200:oklch(.905 .093 164.15);--color-emerald-300:oklch(.845 .143 164.978);--color-emerald-400:oklch(.765 .177 163.223);--color-emerald-500:oklch(.696 .17 162.48);--color-emerald-600:oklch(.596 .145 163.225);--color-emerald-700:oklch(.508 .118 165.612);--color-emerald-800:oklch(.432 .095 166.913);--color-emerald-900:oklch(.378 .077 168.94);--color-emerald-950:oklch(.262 .051 172.552);--color-teal-50:oklch(.984 .014 180.72);--color-teal-100:oklch(.953 .051 180.801);--color-teal-200:oklch(.91 .096 180.426);--color-teal-300:oklch(.855 .138 181.071);--color-teal-400:oklch(.777 .152 181.912);--color-teal-500:oklch(.704 .14 182.503);--color-teal-600:oklch(.6 .118 184.704);--color-teal-700:oklch(.511 .096 186.391);--color-teal-800:oklch(.437 .078 188.216);--color-teal-900:oklch(.386 .063 188.416);--color-teal-950:oklch(.277 .046 192.524);--color-cyan-50:oklch(.984 .019 200.873);--color-cyan-100:oklch(.956 .045 203.388);--color-cyan-200:oklch(.917 .08 205.041);--color-cyan-300:oklch(.865 .127 207.078);--color-cyan-400:oklch(.789 .154 211.53);--color-cyan-500:oklch(.715 .143 215.221);--color-cyan-600:oklch(.609 .126 221.723);--color-cyan-700:oklch(.52 .105 223.128);--color-cyan-800:oklch(.45 .085 224.283);--color-cyan-900:oklch(.398 .07 227.392);--color-cyan-950:oklch(.302 .056 229.695);--color-sky-50:oklch(.977 .013 236.62);--color-sky-100:oklch(.951 .026 236.824);--color-sky-200:oklch(.901 .058 230.902);--color-sky-300:oklch(.828 .111 230.318);--color-sky-400:oklch(.746 .16 232.661);--color-sky-500:oklch(.685 .169 237.323);--color-sky-600:oklch(.588 .158 241.966);--color-sky-700:oklch(.5 .134 242.749);--color-sky-800:oklch(.443 .11 240.79);--color-sky-900:oklch(.391 .09 240.876);--color-sky-950:oklch(.293 .066 243.157);--color-blue-50:oklch(.97 .014 254.604);--color-blue-100:oklch(.932 .032 255.585);--color-blue-200:oklch(.882 .059 254.128);--color-blue-300:oklch(.809 .105 251.813);--color-blue-400:oklch(.707 .165 254.624);--color-blue-500:oklch(.623 .214 259.815);--color-blue-600:oklch(.546 .245 262.881);--color-blue-700:oklch(.488 .243 264.376);--color-blue-800:oklch(.424 .199 265.638);--color-blue-900:oklch(.379 .146 265.522);--color-blue-950:oklch(.282 .091 267.935);--color-indigo-50:oklch(.962 .018 272.314);--color-indigo-100:oklch(.93 .034 272.788);--color-indigo-200:oklch(.87 .065 274.039);--color-indigo-300:oklch(.785 .115 274.713);--color-indigo-400:oklch(.673 .182 276.935);--color-indigo-500:oklch(.585 .233 277.117);--color-indigo-600:oklch(.511 .262 276.966);--color-indigo-700:oklch(.457 .24 277.023);--color-indigo-800:oklch(.398 .195 277.366);--color-indigo-900:oklch(.359 .144 278.697);--color-indigo-950:oklch(.257 .09 281.288);--color-violet-50:oklch(.969 .016 293.756);--color-violet-100:oklch(.943 .029 294.588);--color-violet-200:oklch(.894 .057 293.283);--color-violet-300:oklch(.811 .111 293.571);--color-violet-400:oklch(.702 .183 293.541);--color-violet-500:oklch(.606 .25 292.717);--color-violet-600:oklch(.541 .281 293.009);--color-violet-700:oklch(.491 .27 292.581);--color-violet-800:oklch(.432 .232 292.759);--color-violet-900:oklch(.38 .189 293.745);--color-violet-950:oklch(.283 .141 291.089);--color-purple-50:oklch(.977 .014 308.299);--color-purple-100:oklch(.946 .033 307.174);--color-purple-200:oklch(.902 .063 306.703);--color-purple-300:oklch(.827 .119 306.383);--color-purple-400:oklch(.714 .203 305.504);--color-purple-500:oklch(.627 .265 303.9);--color-purple-600:oklch(.558 .288 302.321);--color-purple-700:oklch(.496 .265 301.924);--color-purple-800:oklch(.438 .218 303.724);--color-purple-900:oklch(.381 .176 304.987);--color-purple-950:oklch(.291 .149 302.717);--color-fuchsia-50:oklch(.977 .017 320.058);--color-fuchsia-100:oklch(.952 .037 318.852);--color-fuchsia-200:oklch(.903 .076 319.62);--color-fuchsia-300:oklch(.833 .145 321.434);--color-fuchsia-400:oklch(.74 .238 322.16);--color-fuchsia-500:oklch(.667 .295 322.15);--color-fuchsia-600:oklch(.591 .293 322.896);--color-fuchsia-700:oklch(.518 .253 323.949);--color-fuchsia-800:oklch(.452 .211 324.591);--color-fuchsia-900:oklch(.401 .17 325.612);--color-fuchsia-950:oklch(.293 .136 325.661);--color-pink-50:oklch(.971 .014 343.198);--color-pink-100:oklch(.948 .028 342.258);--color-pink-200:oklch(.899 .061 343.231);--color-pink-300:oklch(.823 .12 346.018);--color-pink-400:oklch(.718 .202 349.761);--color-pink-500:oklch(.656 .241 354.308);--color-pink-600:oklch(.592 .249 .584);--color-pink-700:oklch(.525 .223 3.958);--color-pink-800:oklch(.459 .187 3.815);--color-pink-900:oklch(.408 .153 2.432);--color-pink-950:oklch(.284 .109 3.907);--color-rose-50:oklch(.969 .015 12.422);--color-rose-100:oklch(.941 .03 12.58);--color-rose-200:oklch(.892 .058 10.001);--color-rose-300:oklch(.81 .117 11.638);--color-rose-400:oklch(.712 .194 13.428);--color-rose-500:oklch(.645 .246 16.439);--color-rose-600:oklch(.586 .253 17.585);--color-rose-700:oklch(.514 .222 16.935);--color-rose-800:oklch(.455 .188 13.697);--color-rose-900:oklch(.41 .159 10.272);--color-rose-950:oklch(.271 .105 12.094);--color-slate-50:oklch(.984 .003 247.858);--color-slate-100:oklch(.968 .007 247.896);--color-slate-200:oklch(.929 .013 255.508);--color-slate-300:oklch(.869 .022 252.894);--color-slate-400:oklch(.704 .04 256.788);--color-slate-500:oklch(.554 .046 257.417);--color-slate-600:oklch(.446 .043 257.281);--color-slate-700:oklch(.372 .044 257.287);--color-slate-800:oklch(.279 .041 260.031);--color-slate-900:oklch(.208 .042 265.755);--color-slate-950:oklch(.129 .042 264.695);--color-gray-50:oklch(.985 .002 247.839);--color-gray-100:oklch(.967 .003 264.542);--color-gray-200:oklch(.928 .006 264.531);--color-gray-300:oklch(.872 .01 258.338);--color-gray-400:oklch(.707 .022 261.325);--color-gray-500:oklch(.551 .027 264.364);--color-gray-600:oklch(.446 .03 256.802);--color-gray-700:oklch(.373 .034 259.733);--color-gray-800:oklch(.278 .033 256.848);--color-gray-900:oklch(.21 .034 264.665);--color-gray-950:oklch(.13 .028 261.692);--color-zinc-50:oklch(.985 0 0);--color-zinc-100:oklch(.967 .001 286.375);--color-zinc-200:oklch(.92 .004 286.32);--color-zinc-300:oklch(.871 .006 286.286);--color-zinc-400:oklch(.705 .015 286.067);--color-zinc-500:oklch(.552 .016 285.938);--color-zinc-600:oklch(.442 .017 285.786);--color-zinc-700:oklch(.37 .013 285.805);--color-zinc-800:oklch(.274 .006 286.033);--color-zinc-900:oklch(.21 .006 285.885);--color-zinc-950:oklch(.141 .005 285.823);--color-neutral-50:oklch(.985 0 0);--color-neutral-100:oklch(.97 0 0);--color-neutral-200:oklch(.922 0 0);--color-neutral-300:oklch(.87 0 0);--color-neutral-400:oklch(.708 0 0);--color-neutral-500:oklch(.556 0 0);--color-neutral-600:oklch(.439 0 0);--color-neutral-700:oklch(.371 0 0);--color-neutral-800:oklch(.269 0 0);--color-neutral-900:oklch(.205 0 0);--color-neutral-950:oklch(.145 0 0);--color-stone-50:oklch(.985 .001 106.423);--color-stone-100:oklch(.97 .001 106.424);--color-stone-200:oklch(.923 .003 48.717);--color-stone-300:oklch(.869 .005 56.366);--color-stone-400:oklch(.709 .01 56.259);--color-stone-500:oklch(.553 .013 58.071);--color-stone-600:oklch(.444 .011 73.639);--color-stone-700:oklch(.374 .01 67.558);--color-stone-800:oklch(.268 .007 34.298);--color-stone-900:oklch(.216 .006 56.043);--color-stone-950:oklch(.147 .004 49.25);--color-black:#000;--color-white:#fff;--spacing:.25rem;--breakpoint-sm:40rem;--breakpoint-md:48rem;--breakpoint-lg:64rem;--breakpoint-xl:80rem;--breakpoint-2xl:96rem;--container-3xs:16rem;--container-2xs:18rem;--container-xs:20rem;--container-sm:24rem;--container-md:28rem;--container-lg:32rem;--container-xl:36rem;--container-2xl:42rem;--container-3xl:48rem;--container-4xl:56rem;--container-5xl:64rem;--container-6xl:72rem;--container-7xl:80rem;--text-xs:.75rem;--text-xs--line-height:calc(1/.75);--text-sm:.875rem;--text-sm--line-height:calc(1.25/.875);--text-base:1rem;--text-base--line-height: 1.5 ;--text-lg:1.125rem;--text-lg--line-height:calc(1.75/1.125);--text-xl:1.25rem;--text-xl--line-height:calc(1.75/1.25);--text-2xl:1.5rem;--text-2xl--line-height:calc(2/1.5);--text-3xl:1.875rem;--text-3xl--line-height: 1.2 ;--text-4xl:2.25rem;--text-4xl--line-height:calc(2.5/2.25);--text-5xl:3rem;--text-5xl--line-height:1;--text-6xl:3.75rem;--text-6xl--line-height:1;--text-7xl:4.5rem;--text-7xl--line-height:1;--text-8xl:6rem;--text-8xl--line-height:1;--text-9xl:8rem;--text-9xl--line-height:1;--font-weight-thin:100;--font-weight-extralight:200;--font-weight-light:300;--font-weight-normal:400;--font-weight-medium:500;--font-weight-semibold:600;--font-weight-bold:700;--font-weight-extrabold:800;--font-weight-black:900;--tracking-tighter:-.05em;--tracking-tight:-.025em;--tracking-normal:0em;--tracking-wide:.025em;--tracking-wider:.05em;--tracking-widest:.1em;--leading-tight:1.25;--leading-snug:1.375;--leading-normal:1.5;--leading-relaxed:1.625;--leading-loose:2;--radius-xs:.125rem;--radius-sm:.25rem;--radius-md:.375rem;--radius-lg:.5rem;--radius-xl:.75rem;--radius-2xl:1rem;--radius-3xl:1.5rem;--radius-4xl:2rem;--shadow-2xs:0 1px #0000000d;--shadow-xs:0 1px 2px 0 #0000000d;--shadow-sm:0 1px 3px 0 #0000001a,0 1px 2px -1px #0000001a;--shadow-md:0 4px 6px -1px #0000001a,0 2px 4px -2px #0000001a;--shadow-lg:0 10px 15px -3px #0000001a,0 4px 6px -4px #0000001a;--shadow-xl:0 20px 25px -5px #0000001a,0 8px 10px -6px #0000001a;--shadow-2xl:0 25px 50px -12px #00000040;--inset-shadow-2xs:inset 0 1px #0000000d;--inset-shadow-xs:inset 0 1px 1px #0000000d;--inset-shadow-sm:inset 0 2px 4px #0000000d;--drop-shadow-xs:0 1px 1px #0000000d;--drop-shadow-sm:0 1px 2px #00000026;--drop-shadow-md:0 3px 3px #0000001f;--drop-shadow-lg:0 4px 4px #00000026;--drop-shadow-xl:0 9px 7px #0000001a;--drop-shadow-2xl:0 25px 25px #00000026;--ease-in:cubic-bezier(.4,0,1,1);--ease-out:cubic-bezier(0,0,.2,1);--ease-in-out:cubic-bezier(.4,0,.2,1);--animate-spin:spin 1s linear infinite;--animate-ping:ping 1s cubic-bezier(0,0,.2,1)infinite;--animate-pulse:pulse 2s cubic-bezier(.4,0,.6,1)infinite;--animate-bounce:bounce 1s infinite;--blur-xs:4px;--blur-sm:8px;--blur-md:12px;--blur-lg:16px;--blur-xl:24px;--blur-2xl:40px;--blur-3xl:64px;--perspective-dramatic:100px;--perspective-near:300px;--perspective-normal:500px;--perspective-midrange:800px;--perspective-distant:1200px;--aspect-video:16/9;--default-transition-duration:.15s;--default-transition-timing-function:cubic-bezier(.4,0,.2,1);--default-font-family:var(--font-sans);--default-font-feature-settings:var(--font-sans--font-feature-settings);--default-font-variation-settings:var(--font-sans--font-variation-settings);--default-mono-font-family:var(--font-mono);--default-mono-font-feature-settings:var(--font-mono--font-feature-settings);--default-mono-font-variation-settings:var(--font-mono--font-variation-settings)}}@layer base{*,:after,:before,::backdrop{box-sizing:border-box;border:0 solid;margin:0;padding:0}::file-selector-button{box-sizing:border-box;border:0 solid;margin:0;padding:0}html,:host{-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;line-height:1.5;font-family:var(--default-font-family,ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji");font-feature-settings:var(--default-font-feature-settings,normal);font-variation-settings:var(--default-font-variation-settings,normal);-webkit-tap-highlight-color:transparent}body{line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:var(--default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace);font-feature-settings:var(--default-mono-font-feature-settings,normal);font-variation-settings:var(--default-mono-font-variation-settings,normal);font-size:1em}small{font-size:80%}sub,sup{vertical-align:baseline;font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}ol,ul,menu{list-style:none}img,svg,video,canvas,audio,iframe,embed,object{vertical-align:middle;display:block}img,video{max-width:100%;height:auto}button,input,select,optgroup,textarea{font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;color:inherit;opacity:1;background-color:#0000;border-radius:0}::file-selector-button{font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;color:inherit;opacity:1;background-color:#0000;border-radius:0}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::file-selector-button{margin-inline-end:4px}::placeholder{opacity:1;color:color-mix(in oklab,currentColor 50%,transparent)}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit{padding-block:0}::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-month-field{padding-block:0}::-webkit-datetime-edit-day-field{padding-block:0}::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field{padding-block:0}::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-millisecond-field{padding-block:0}::-webkit-datetime-edit-meridiem-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){-webkit-appearance:button;-moz-appearance:button;appearance:button}::file-selector-button{-webkit-appearance:button;-moz-appearance:button;appearance:button}::-webkit-inner-spin-button{height:auto}::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components;@layer utilities{.absolute{position:absolute}.relative{position:relative}.static{position:static}.inset-0{inset:calc(var(--spacing)*0)}.-mt-\[4\.9rem\]{margin-top:-4.9rem}.-mb-px{margin-bottom:-1px}.mb-1{margin-bottom:calc(var(--spacing)*1)}.mb-2{margin-bottom:calc(var(--spacing)*2)}.mb-4{margin-bottom:calc(var(--spacing)*4)}.mb-6{margin-bottom:calc(var(--spacing)*6)}.-ml-8{margin-left:calc(var(--spacing)*-8)}.flex{display:flex}.hidden{display:none}.inline-block{display:inline-block}.inline-flex{display:inline-flex}.table{display:table}.aspect-\[335\/376\]{aspect-ratio:335/376}.h-1{height:calc(var(--spacing)*1)}.h-1\.5{height:calc(var(--spacing)*1.5)}.h-2{height:calc(var(--spacing)*2)}.h-2\.5{height:calc(var(--spacing)*2.5)}.h-3{height:calc(var(--spacing)*3)}.h-3\.5{height:calc(var(--spacing)*3.5)}.h-14{height:calc(var(--spacing)*14)}.h-14\.5{height:calc(var(--spacing)*14.5)}.min-h-screen{min-height:100vh}.w-1{width:calc(var(--spacing)*1)}.w-1\.5{width:calc(var(--spacing)*1.5)}.w-2{width:calc(var(--spacing)*2)}.w-2\.5{width:calc(var(--spacing)*2.5)}.w-3{width:calc(var(--spacing)*3)}.w-3\.5{width:calc(var(--spacing)*3.5)}.w-\[448px\]{width:448px}.w-full{width:100%}.max-w-\[335px\]{max-width:335px}.max-w-none{max-width:none}.flex-1{flex:1}.shrink-0{flex-shrink:0}.translate-y-0{--tw-translate-y:calc(var(--spacing)*0);translate:var(--tw-translate-x)var(--tw-translate-y)}.transform{transform:var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y)}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.items-center{align-items:center}.justify-center{justify-content:center}.justify-end{justify-content:flex-end}.gap-3{gap:calc(var(--spacing)*3)}.gap-4{gap:calc(var(--spacing)*4)}:where(.space-x-1>:not(:last-child)){--tw-space-x-reverse:0;margin-inline-start:calc(calc(var(--spacing)*1)*var(--tw-space-x-reverse));margin-inline-end:calc(calc(var(--spacing)*1)*calc(1 - var(--tw-space-x-reverse)))}.overflow-hidden{overflow:hidden}.rounded-full{border-radius:3.40282e38px}.rounded-sm{border-radius:var(--radius-sm)}.rounded-t-lg{border-top-left-radius:var(--radius-lg);border-top-right-radius:var(--radius-lg)}.rounded-br-lg{border-bottom-right-radius:var(--radius-lg)}.rounded-bl-lg{border-bottom-left-radius:var(--radius-lg)}.border{border-style:var(--tw-border-style);border-width:1px}.border-\[\#19140035\]{border-color:#19140035}.border-\[\#e3e3e0\]{border-color:#e3e3e0}.border-black{border-color:var(--color-black)}.border-transparent{border-color:#0000}.bg-\[\#1b1b18\]{background-color:#1b1b18}.bg-\[\#FDFDFC\]{background-color:#fdfdfc}.bg-\[\#dbdbd7\]{background-color:#dbdbd7}.bg-\[\#fff2f2\]{background-color:#fff2f2}.bg-white{background-color:var(--color-white)}.p-6{padding:calc(var(--spacing)*6)}.px-5{padding-inline:calc(var(--spacing)*5)}.py-1{padding-block:calc(var(--spacing)*1)}.py-1\.5{padding-block:calc(var(--spacing)*1.5)}.py-2{padding-block:calc(var(--spacing)*2)}.pb-12{padding-bottom:calc(var(--spacing)*12)}.text-sm{font-size:var(--text-sm);line-height:var(--tw-leading,var(--text-sm--line-height))}.text-\[13px\]{font-size:13px}.leading-\[20px\]{--tw-leading:20px;line-height:20px}.leading-normal{--tw-leading:var(--leading-normal);line-height:var(--leading-normal)}.font-medium{--tw-font-weight:var(--font-weight-medium);font-weight:var(--font-weight-medium)}.text-\[\#1b1b18\]{color:#1b1b18}.text-\[\#706f6c\]{color:#706f6c}.text-\[\#F53003\],.text-\[\#f53003\]{color:#f53003}.text-white{color:var(--color-white)}.underline{text-decoration-line:underline}.underline-offset-4{text-underline-offset:4px}.opacity-100{opacity:1}.shadow-\[0px_0px_1px_0px_rgba\(0\,0\,0\,0\.03\)\,0px_1px_2px_0px_rgba\(0\,0\,0\,0\.06\)\]{--tw-shadow:0px 0px 1px 0px var(--tw-shadow-color,#00000008),0px 1px 2px 0px var(--tw-shadow-color,#0000000f);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.shadow-\[inset_0px_0px_0px_1px_rgba\(26\,26\,0\,0\.16\)\]{--tw-shadow:inset 0px 0px 0px 1px var(--tw-shadow-color,#1a1a0029);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.\!filter{filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)!important}.filter{filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.transition-all{transition-property:all;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.transition-opacity{transition-property:opacity;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.delay-300{transition-delay:.3s}.duration-750{--tw-duration:.75s;transition-duration:.75s}.not-has-\[nav\]\:hidden:not(:has(:is(nav))){display:none}.before\:absolute:before{content:var(--tw-content);position:absolute}.before\:top-0:before{content:var(--tw-content);top:calc(var(--spacing)*0)}.before\:top-1\/2:before{content:var(--tw-content);top:50%}.before\:bottom-0:before{content:var(--tw-content);bottom:calc(var(--spacing)*0)}.before\:bottom-1\/2:before{content:var(--tw-content);bottom:50%}.before\:left-\[0\.4rem\]:before{content:var(--tw-content);left:.4rem}.before\:border-l:before{content:var(--tw-content);border-left-style:var(--tw-border-style);border-left-width:1px}.before\:border-\[\#e3e3e0\]:before{content:var(--tw-content);border-color:#e3e3e0}@media (hover:hover){.hover\:border-\[\#1915014a\]:hover{border-color:#1915014a}.hover\:border-\[\#19140035\]:hover{border-color:#19140035}.hover\:border-black:hover{border-color:var(--color-black)}.hover\:bg-black:hover{background-color:var(--color-black)}}@media (width>=64rem){.lg\:-mt-\[6\.6rem\]{margin-top:-6.6rem}.lg\:mb-0{margin-bottom:calc(var(--spacing)*0)}.lg\:mb-6{margin-bottom:calc(var(--spacing)*6)}.lg\:-ml-px{margin-left:-1px}.lg\:ml-0{margin-left:calc(var(--spacing)*0)}.lg\:block{display:block}.lg\:aspect-auto{aspect-ratio:auto}.lg\:w-\[438px\]{width:438px}.lg\:max-w-4xl{max-width:var(--container-4xl)}.lg\:grow{flex-grow:1}.lg\:flex-row{flex-direction:row}.lg\:justify-center{justify-content:center}.lg\:rounded-t-none{border-top-left-radius:0;border-top-right-radius:0}.lg\:rounded-tl-lg{border-top-left-radius:var(--radius-lg)}.lg\:rounded-r-lg{border-top-right-radius:var(--radius-lg);border-bottom-right-radius:var(--radius-lg)}.lg\:rounded-br-none{border-bottom-right-radius:0}.lg\:p-8{padding:calc(var(--spacing)*8)}.lg\:p-20{padding:calc(var(--spacing)*20)}}@media (prefers-color-scheme:dark){.dark\:block{display:block}.dark\:hidden{display:none}.dark\:border-\[\#3E3E3A\]{border-color:#3e3e3a}.dark\:border-\[\#eeeeec\]{border-color:#eeeeec}.dark\:bg-\[\#0a0a0a\]{background-color:#0a0a0a}.dark\:bg-\[\#1D0002\]{background-color:#1d0002}.dark\:bg-\[\#3E3E3A\]{background-color:#3e3e3a}.dark\:bg-\[\#161615\]{background-color:#161615}.dark\:bg-\[\#eeeeec\]{background-color:#eeeeec}.dark\:text-\[\#1C1C1A\]{color:#1c1c1a}.dark\:text-\[\#A1A09A\]{color:#a1a09a}.dark\:text-\[\#EDEDEC\]{color:#ededec}.dark\:text-\[\#F61500\]{color:#f61500}.dark\:text-\[\#FF4433\]{color:#f43}.dark\:shadow-\[inset_0px_0px_0px_1px_\#fffaed2d\]{--tw-shadow:inset 0px 0px 0px 1px var(--tw-shadow-color,#fffaed2d);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.dark\:before\:border-\[\#3E3E3A\]:before{content:var(--tw-content);border-color:#3e3e3a}@media (hover:hover){.dark\:hover\:border-\[\#3E3E3A\]:hover{border-color:#3e3e3a}.dark\:hover\:border-\[\#62605b\]:hover{border-color:#62605b}.dark\:hover\:border-white:hover{border-color:var(--color-white)}.dark\:hover\:bg-white:hover{background-color:var(--color-white)}}}@starting-style{.starting\:translate-y-4{--tw-translate-y:calc(var(--spacing)*4);translate:var(--tw-translate-x)var(--tw-translate-y)}}@starting-style{.starting\:translate-y-6{--tw-translate-y:calc(var(--spacing)*6);translate:var(--tw-translate-x)var(--tw-translate-y)}}@starting-style{.starting\:opacity-0{opacity:0}}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes ping{75%,to{opacity:0;transform:scale(2)}}@keyframes pulse{50%{opacity:.5}}@keyframes bounce{0%,to{animation-timing-function:cubic-bezier(.8,0,1,1);transform:translateY(-25%)}50%{animation-timing-function:cubic-bezier(0,0,.2,1);transform:none}}@property --tw-translate-x{syntax:"*";inherits:false;initial-value:0}@property --tw-translate-y{syntax:"*";inherits:false;initial-value:0}@property --tw-translate-z{syntax:"*";inherits:false;initial-value:0}@property --tw-rotate-x{syntax:"*";inherits:false;initial-value:rotateX(0)}@property --tw-rotate-y{syntax:"*";inherits:false;initial-value:rotateY(0)}@property --tw-rotate-z{syntax:"*";inherits:false;initial-value:rotateZ(0)}@property --tw-skew-x{syntax:"*";inherits:false;initial-value:skewX(0)}@property --tw-skew-y{syntax:"*";inherits:false;initial-value:skewY(0)}@property --tw-space-x-reverse{syntax:"*";inherits:false;initial-value:0}@property --tw-border-style{syntax:"*";inherits:false;initial-value:solid}@property --tw-leading{syntax:"*";inherits:false}@property --tw-font-weight{syntax:"*";inherits:false}@property --tw-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-shadow-color{syntax:"*";inherits:false}@property --tw-inset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-inset-shadow-color{syntax:"*";inherits:false}@property --tw-ring-color{syntax:"*";inherits:false}@property --tw-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-inset-ring-color{syntax:"*";inherits:false}@property --tw-inset-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-ring-inset{syntax:"*";inherits:false}@property --tw-ring-offset-width{syntax:"<length>";inherits:false;initial-value:0}@property --tw-ring-offset-color{syntax:"*";inherits:false;initial-value:#fff}@property --tw-ring-offset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-blur{syntax:"*";inherits:false}@property --tw-brightness{syntax:"*";inherits:false}@property --tw-contrast{syntax:"*";inherits:false}@property --tw-grayscale{syntax:"*";inherits:false}@property --tw-hue-rotate{syntax:"*";inherits:false}@property --tw-invert{syntax:"*";inherits:false}@property --tw-opacity{syntax:"*";inherits:false}@property --tw-saturate{syntax:"*";inherits:false}@property --tw-sepia{syntax:"*";inherits:false}@property --tw-drop-shadow{syntax:"*";inherits:false}@property --tw-duration{syntax:"*";inherits:false}@property --tw-content{syntax:"*";inherits:false;initial-value:""}
            </style>
        @endif
    </head>
    <body class="bg-[#FDFDFC] dark:bg-[#0a0a0a] text-[#1b1b18] flex p-6 lg:p-8 items-center lg:justify-center min-h-screen flex-col">
        <header class="w-full lg:max-w-4xl max-w-[335px] text-sm mb-6 not-has-[nav]:hidden">
            @if (Route::has('login'))
                <nav class="flex items-center justify-end gap-4">
                    @auth
                        <a
                            href="{{ url('/dashboard') }}"
                            class="inline-block px-5 py-1.5 dark:text-[#EDEDEC] border-[#19140035] hover:border-[#1915014a] border text-[#1b1b18] dark:border-[#3E3E3A] dark:hover:border-[#62605b] rounded-sm text-sm leading-normal"
                        >
                            Dashboard
                        </a>
                    @else
                        <a
                            href="{{ route('login') }}"
                            class="inline-block px-5 py-1.5 dark:text-[#EDEDEC] text-[#1b1b18] border border-transparent hover:border-[#19140035] dark:hover:border-[#3E3E3A] rounded-sm text-sm leading-normal"
                        >
                            Log in
                        </a>

                        @if (Route::has('register'))
                            <a
                                href="{{ route('register') }}"
                                class="inline-block px-5 py-1.5 dark:text-[#EDEDEC] border-[#19140035] hover:border-[#1915014a] border text-[#1b1b18] dark:border-[#3E3E3A] dark:hover:border-[#62605b] rounded-sm text-sm leading-normal">
                                Register
                            </a>
                        @endif
                    @endauth
                </nav>
            @endif
        </header>
        <div class="flex items-center justify-center w-full transition-opacity opacity-100 duration-750 lg:grow starting:opacity-0">
            <main class="flex max-w-[335px] w-full flex-col-reverse lg:max-w-4xl lg:flex-row">
                <div class="text-[13px] leading-[20px] flex-1 p-6 pb-12 lg:p-20 bg-white dark:bg-[#161615] dark:text-[#EDEDEC] shadow-[inset_0px_0px_0px_1px_rgba(26,26,0,0.16)] dark:shadow-[inset_0px_0px_0px_1px_#fffaed2d] rounded-bl-lg rounded-br-lg lg:rounded-tl-lg lg:rounded-br-none">
                    <h1 class="mb-1 font-medium">Let's get started</h1>
                    <p class="mb-2 text-[#706f6c] dark:text-[#A1A09A]">Laravel has an incredibly rich ecosystem. <br>We suggest starting with the following.</p>
                    <ul class="flex flex-col mb-4 lg:mb-6">
                        <li class="flex items-center gap-4 py-2 relative before:border-l before:border-[#e3e3e0] dark:before:border-[#3E3E3A] before:top-1/2 before:bottom-0 before:left-[0.4rem] before:absolute">
                            <span class="relative py-1 bg-white dark:bg-[#161615]">
                                <span class="flex items-center justify-center rounded-full bg-[#FDFDFC] dark:bg-[#161615] shadow-[0px_0px_1px_0px_rgba(0,0,0,0.03),0px_1px_2px_0px_rgba(0,0,0,0.06)] w-3.5 h-3.5 border dark:border-[#3E3E3A] border-[#e3e3e0]">
                                    <span class="rounded-full bg-[#dbdbd7] dark:bg-[#3E3E3A] w-1.5 h-1.5"></span>
                                </span>
                            </span>
                            <span>
                                Read the
                                <a href="https://laravel.com/docs" target="_blank" class="inline-flex items-center space-x-1 font-medium underline underline-offset-4 text-[#f53003] dark:text-[#FF4433] ml-1">
                                    <span>Documentation</span>
                                    <svg
                                        width="10"
                                        height="11"
                                        viewBox="0 0 10 11"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg"
                                        class="w-2.5 h-2.5"
                                    >
                                        <path
                                            d="M7.70833 6.95834V2.79167H3.54167M2.5 8L7.5 3.00001"
                                            stroke="currentColor"
                                            stroke-linecap="square"
                                        />
                                    </svg>
                                </a>
                            </span>
                        </li>
                        <li class="flex items-center gap-4 py-2 relative before:border-l before:border-[#e3e3e0] dark:before:border-[#3E3E3A] before:bottom-1/2 before:top-0 before:left-[0.4rem] before:absolute">
                            <span class="relative py-1 bg-white dark:bg-[#161615]">
                                <span class="flex items-center justify-center rounded-full bg-[#FDFDFC] dark:bg-[#161615] shadow-[0px_0px_1px_0px_rgba(0,0,0,0.03),0px_1px_2px_0px_rgba(0,0,0,0.06)] w-3.5 h-3.5 border dark:border-[#3E3E3A] border-[#e3e3e0]">
                                    <span class="rounded-full bg-[#dbdbd7] dark:bg-[#3E3E3A] w-1.5 h-1.5"></span>
                                </span>
                            </span>
                            <span>
                                Watch video tutorials at
                                <a href="https://laracasts.com" target="_blank" class="inline-flex items-center space-x-1 font-medium underline underline-offset-4 text-[#f53003] dark:text-[#FF4433] ml-1">
                                    <span>Laracasts</span>
                                    <svg
                                        width="10"
                                        height="11"
                                        viewBox="0 0 10 11"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg"
                                        class="w-2.5 h-2.5"
                                    >
                                        <path
                                            d="M7.70833 6.95834V2.79167H3.54167M2.5 8L7.5 3.00001"
                                            stroke="currentColor"
                                            stroke-linecap="square"
                                        />
                                    </svg>
                                </a>
                            </span>
                        </li>
                    </ul>
                    <ul class="flex gap-3 text-sm leading-normal">
                        <li>
                            <a href="https://cloud.laravel.com" target="_blank" class="inline-block dark:bg-[#eeeeec] dark:border-[#eeeeec] dark:text-[#1C1C1A] dark:hover:bg-white dark:hover:border-white hover:bg-black hover:border-black px-5 py-1.5 bg-[#1b1b18] rounded-sm border border-black text-white text-sm leading-normal">
                                Deploy now
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="bg-[#fff2f2] dark:bg-[#1D0002] relative lg:-ml-px -mb-px lg:mb-0 rounded-t-lg lg:rounded-t-none lg:rounded-r-lg aspect-[335/376] lg:aspect-auto w-full lg:w-[438px] shrink-0 overflow-hidden">
                    {{-- Laravel Logo --}}
                    <svg class="w-full text-[#F53003] dark:text-[#F61500] transition-all translate-y-0 opacity-100 max-w-none duration-750 starting:opacity-0 starting:translate-y-6" viewBox="0 0 438 104" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M17.2036 -3H0V102.197H49.5189V86.7187H17.2036V-3Z" fill="currentColor" />
                        <path d="M110.256 41.6337C108.061 38.1275 104.945 35.3731 100.905 33.3681C96.8667 31.3647 92.8016 30.3618 88.7131 30.3618C83.4247 30.3618 78.5885 31.3389 74.201 33.2923C69.8111 35.2456 66.0474 37.928 62.9059 41.3333C59.7643 44.7401 57.3198 48.6726 55.5754 53.1293C53.8287 57.589 52.9572 62.274 52.9572 67.1813C52.9572 72.1925 53.8287 76.8995 55.5754 81.3069C57.3191 85.7173 59.7636 89.6241 62.9059 93.0293C66.0474 96.4361 69.8119 99.1155 74.201 101.069C78.5885 103.022 83.4247 103.999 88.7131 103.999C92.8016 103.999 96.8667 102.997 100.905 100.994C104.945 98.9911 108.061 96.2359 110.256 92.7282V102.195H126.563V32.1642H110.256V41.6337ZM108.76 75.7472C107.762 78.4531 106.366 80.8078 104.572 82.8112C102.776 84.8161 100.606 86.4183 98.0637 87.6206C95.5202 88.823 92.7004 89.4238 89.6103 89.4238C86.5178 89.4238 83.7252 88.823 81.2324 87.6206C78.7388 86.4183 76.5949 84.8161 74.7998 82.8112C73.004 80.8078 71.6319 78.4531 70.6856 75.7472C69.7356 73.0421 69.2644 70.1868 69.2644 67.1821C69.2644 64.1758 69.7356 61.3205 70.6856 58.6154C71.6319 55.9102 73.004 53.5571 74.7998 51.5522C76.5949 49.5495 78.738 47.9451 81.2324 46.7427C83.7252 45.5404 86.5178 44.9396 89.6103 44.9396C92.7012 44.9396 95.5202 45.5404 98.0637 46.7427C100.606 47.9451 102.776 49.5487 104.572 51.5522C106.367 53.5571 107.762 55.9102 108.76 58.6154C109.756 61.3205 110.256 64.1758 110.256 67.1821C110.256 70.1868 109.756 73.0421 108.76 75.7472Z" fill="currentColor" />
                        <path d="M242.805 41.6337C240.611 38.1275 237.494 35.3731 233.455 33.3681C229.416 31.3647 225.351 30.3618 221.262 30.3618C215.974 30.3618 211.138 31.3389 206.75 33.2923C202.36 35.2456 198.597 37.928 195.455 41.3333C192.314 44.7401 189.869 48.6726 188.125 53.1293C186.378 57.589 185.507 62.274 185.507 67.1813C185.507 72.1925 186.378 76.8995 188.125 81.3069C189.868 85.7173 192.313 89.6241 195.455 93.0293C198.597 96.4361 202.361 99.1155 206.75 101.069C211.138 103.022 215.974 103.999 221.262 103.999C225.351 103.999 229.416 102.997 233.455 100.994C237.494 98.9911 240.611 96.2359 242.805 92.7282V102.195H259.112V32.1642H242.805V41.6337ZM241.31 75.7472C240.312 78.4531 238.916 80.8078 237.122 82.8112C235.326 84.8161 233.156 86.4183 230.614 87.6206C228.07 88.823 225.251 89.4238 222.16 89.4238C219.068 89.4238 216.275 88.823 213.782 87.6206C211.289 86.4183 209.145 84.8161 207.35 82.8112C205.554 80.8078 204.182 78.4531 203.236 75.7472C202.286 73.0421 201.814 70.1868 201.814 67.1821C201.814 64.1758 202.286 61.3205 203.236 58.6154C204.182 55.9102 205.554 53.5571 207.35 51.5522C209.145 49.5495 211.288 47.9451 213.782 46.7427C216.275 45.5404 219.068 44.9396 222.16 44.9396C225.251 44.9396 228.07 45.5404 230.614 46.7427C233.156 47.9451 235.326 49.5487 237.122 51.5522C238.917 53.5571 240.312 55.9102 241.31 58.6154C242.306 61.3205 242.806 64.1758 242.806 67.1821C242.805 70.1868 242.305 73.0421 241.31 75.7472Z" fill="currentColor" />
                        <path d="M438 -3H421.694V102.197H438V-3Z" fill="currentColor" />
                        <path d="M139.43 102.197H155.735V48.2834H183.712V32.1665H139.43V102.197Z" fill="currentColor" />
                        <path d="M324.49 32.1665L303.995 85.794L283.498 32.1665H266.983L293.748 102.197H314.242L341.006 32.1665H324.49Z" fill="currentColor" />
                        <path d="M376.571 30.3656C356.603 30.3656 340.797 46.8497 340.797 67.1828C340.797 89.6597 356.094 104 378.661 104C391.29 104 399.354 99.1488 409.206 88.5848L398.189 80.0226C398.183 80.031 389.874 90.9895 377.468 90.9895C363.048 90.9895 356.977 79.3111 356.977 73.269H411.075C413.917 50.1328 398.775 30.3656 376.571 30.3656ZM357.02 61.0967C357.145 59.7487 359.023 43.3761 376.442 43.3761C393.861 43.3761 395.978 59.7464 396.099 61.0967H357.02Z" fill="currentColor" />
                    </svg>

                    {{-- Light Mode 12 SVG --}}
                    <svg class="w-[448px] max-w-none relative -mt-[4.9rem] -ml-8 lg:ml-0 lg:-mt-[6.6rem] dark:hidden" viewBox="0 0 440 376" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" fill="black" />
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" fill="black" />
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" fill="#F8B803" />
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" fill="#F8B803" />
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                        <g style="mix-blend-mode: hard-light" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" fill="#F0ACB8" />
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" fill="#F0ACB8" />
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                        <g style="mix-blend-mode: plus-darker" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M230.951 281.792L231.282 281.793C238.128 274.907 248.453 265.823 262.256 254.539C275.617 243.256 285.666 234.267 292.402 227.573C299.027 220.688 303.554 213.421 305.983 205.771C308.412 198.12 307.253 190.183 302.504 181.959C297.203 172.778 289.749 165.415 280.142 159.868C270.645 154.13 260.596 151.26 249.995 151.26C239.615 151.26 232.823 154.033 229.621 159.579C226.309 164.934 227.413 172.393 232.935 181.956L168.335 181.954C159.058 165.888 155.082 151.543 156.407 138.92C157.953 126.298 164.247 116.544 175.289 109.659C186.442 102.583 201.294 99.045 219.846 99.0457C239.281 99.0464 258.551 102.585 277.655 109.663C296.649 116.549 313.986 126.303 329.667 138.927C345.349 151.551 357.827 165.895 367.104 181.961C375.718 196.88 379.528 209.981 378.535 221.265C377.762 232.549 374.063 242.399 367.438 250.814C361.033 259.229 351.095 269.557 337.624 281.796L419.782 281.8L448.605 331.719L259.774 331.712L230.951 281.792Z" fill="#F3BEC7" />
                            <path d="M51.8063 152.402L28.9479 152.401L-0.0411453 102.195L85.7608 102.198L218.282 331.711L155.339 331.709L51.8063 152.402Z" fill="#F3BEC7" />
                            <path d="M230.951 281.792L231.282 281.793C238.128 274.907 248.453 265.823 262.256 254.539C275.617 243.256 285.666 234.267 292.402 227.573C299.027 220.688 303.554 213.421 305.983 205.771C308.412 198.12 307.253 190.183 302.504 181.959C297.203 172.778 289.749 165.415 280.142 159.868C270.645 154.13 260.596 151.26 249.995 151.26C239.615 151.26 232.823 154.033 229.621 159.579C226.309 164.934 227.413 172.393 232.935 181.956L168.335 181.954C159.058 165.888 155.082 151.543 156.407 138.92C157.953 126.298 164.247 116.544 175.289 109.659C186.442 102.583 201.294 99.045 219.846 99.0457C239.281 99.0464 258.551 102.585 277.655 109.663C296.649 116.549 313.986 126.303 329.667 138.927C345.349 151.551 357.827 165.895 367.104 181.961C375.718 196.88 379.528 209.981 378.535 221.265C377.762 232.549 374.063 242.399 367.438 250.814C361.033 259.229 351.095 269.557 337.624 281.796L419.782 281.8L448.605 331.719L259.774 331.712L230.951 281.792Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M51.8063 152.402L28.9479 152.401L-0.0411453 102.195L85.7608 102.198L218.282 331.711L155.339 331.709L51.8063 152.402Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.467 355.363L188.798 355.363C195.644 348.478 205.969 339.393 219.772 328.11C233.133 316.826 243.181 307.837 249.917 301.144C253.696 297.217 256.792 293.166 259.205 288.991C261.024 285.845 262.455 282.628 263.499 279.341C265.928 271.691 264.768 263.753 260.02 255.529C254.719 246.349 247.265 238.985 237.657 233.438C228.16 227.7 218.111 224.831 207.51 224.83C197.13 224.83 190.339 227.603 187.137 233.149C183.824 238.504 184.929 245.963 190.45 255.527L125.851 255.524C116.574 239.458 112.598 225.114 113.923 212.491C114.615 206.836 116.261 201.756 118.859 197.253C122.061 191.704 126.709 187.03 132.805 183.229C143.958 176.153 158.81 172.615 177.362 172.616C196.797 172.617 216.067 176.156 235.171 183.233C254.164 190.119 271.502 199.874 287.183 212.497C302.864 225.121 315.343 239.466 324.62 255.532C333.233 270.45 337.044 283.551 336.05 294.835C335.46 303.459 333.16 311.245 329.151 318.194C327.915 320.337 326.515 322.4 324.953 324.384C318.549 332.799 308.611 343.127 295.139 355.367L377.297 355.37L406.121 405.289L217.29 405.282L188.467 355.363Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M9.32197 225.972L-13.5365 225.971L-42.5255 175.765L43.2765 175.768L175.798 405.282L112.854 405.279L9.32197 225.972Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M345.247 111.915C329.566 99.2919 312.229 89.5371 293.235 82.6512L235.167 183.228C254.161 190.114 271.498 199.869 287.179 212.492L345.247 111.915Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M382.686 154.964C373.41 138.898 360.931 124.553 345.25 111.93L287.182 212.506C302.863 225.13 315.342 239.475 324.618 255.541L382.686 154.964Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M293.243 82.6472C274.139 75.57 254.869 72.031 235.434 72.0303L177.366 172.607C196.801 172.608 216.071 176.147 235.175 183.224L293.243 82.6472Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M394.118 194.257C395.112 182.973 391.301 169.872 382.688 154.953L324.619 255.53C333.233 270.448 337.044 283.55 336.05 294.834L394.118 194.257Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M235.432 72.0311C216.88 72.0304 202.027 75.5681 190.875 82.6442L132.806 183.221C143.959 176.145 158.812 172.607 177.363 172.608L235.432 72.0311Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M265.59 124.25C276.191 124.251 286.24 127.12 295.737 132.858L237.669 233.435C228.172 227.697 218.123 224.828 207.522 224.827L265.59 124.25Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M295.719 132.859C305.326 138.406 312.78 145.77 318.081 154.95L260.013 255.527C254.712 246.347 247.258 238.983 237.651 233.436L295.719 132.859Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M387.218 217.608C391.227 210.66 393.527 202.874 394.117 194.25L336.049 294.827C335.459 303.451 333.159 311.237 329.15 318.185L387.218 217.608Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M245.211 132.577C248.413 127.03 255.204 124.257 265.584 124.258L207.516 224.835C197.136 224.834 190.345 227.607 187.143 233.154L245.211 132.577Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M318.094 154.945C322.842 163.17 324.002 171.107 321.573 178.757L263.505 279.334C265.934 271.684 264.774 263.746 260.026 255.522L318.094 154.945Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M176.925 96.6737C180.127 91.1249 184.776 86.4503 190.871 82.6499L132.803 183.227C126.708 187.027 122.059 191.702 118.857 197.25L176.925 96.6737Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M387.226 217.606C385.989 219.749 384.59 221.813 383.028 223.797L324.96 324.373C326.522 322.39 327.921 320.326 329.157 318.183L387.226 217.606Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M317.269 188.408C319.087 185.262 320.519 182.045 321.562 178.758L263.494 279.335C262.451 282.622 261.019 285.839 259.201 288.985L317.269 188.408Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M245.208 132.573C241.895 137.928 243 145.387 248.522 154.95L190.454 255.527C184.932 245.964 183.827 238.505 187.14 233.15L245.208 132.573Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M176.93 96.6719C174.331 101.175 172.686 106.255 171.993 111.91L113.925 212.487C114.618 206.831 116.263 201.752 118.862 197.249L176.93 96.6719Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M317.266 188.413C314.853 192.589 311.757 196.64 307.978 200.566L249.91 301.143C253.689 297.216 256.785 293.166 259.198 288.99L317.266 188.413Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M464.198 304.708L435.375 254.789L377.307 355.366L406.13 405.285L464.198 304.708Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M353.209 254.787C366.68 242.548 376.618 232.22 383.023 223.805L324.955 324.382C318.55 332.797 308.612 343.124 295.141 355.364L353.209 254.787Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M435.37 254.787L353.212 254.784L295.144 355.361L377.302 355.364L435.37 254.787Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M183.921 154.947L248.521 154.95L190.453 255.527L125.853 255.524L183.921 154.947Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M171.992 111.914C170.668 124.537 174.643 138.881 183.92 154.947L125.852 255.524C116.575 239.458 112.599 225.114 113.924 212.491L171.992 111.914Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M307.987 200.562C301.251 207.256 291.203 216.244 277.842 227.528L219.774 328.105C233.135 316.821 243.183 307.832 249.919 301.139L307.987 200.562Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M15.5469 75.1797L44.5359 125.386L-13.5321 225.963L-42.5212 175.756L15.5469 75.1797Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M277.836 227.536C264.033 238.82 253.708 247.904 246.862 254.789L188.794 355.366C195.64 348.481 205.965 339.397 219.768 328.113L277.836 227.536Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M275.358 304.706L464.189 304.713L406.12 405.29L217.29 405.283L275.358 304.706Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M44.5279 125.39L67.3864 125.39L9.31834 225.967L-13.5401 225.966L44.5279 125.39Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M101.341 75.1911L233.863 304.705L175.795 405.282L43.2733 175.768L101.341 75.1911ZM15.5431 75.19L-42.525 175.767L43.277 175.77L101.345 75.1932L15.5431 75.19Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M246.866 254.784L246.534 254.784L188.466 355.361L188.798 355.361L246.866 254.784Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M246.539 254.781L275.362 304.701L217.294 405.277L188.471 355.358L246.539 254.781Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M67.3906 125.391L170.923 304.698L112.855 405.275L9.32257 225.967L67.3906 125.391Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M170.921 304.699L233.865 304.701L175.797 405.278L112.853 405.276L170.921 304.699Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                        </g>
                        <g style="mix-blend-mode: hard-light" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" fill="#F0ACB8" />
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="round" />
                        </g>
                        <g style="mix-blend-mode: hard-light" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" fill="#F0ACB8" />
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                    </svg>

                    {{-- Dark Mode 12 SVG --}}
                    <svg class="w-[448px] max-w-none relative -mt-[4.9rem] -ml-8 lg:ml-0 lg:-mt-[6.6rem] hidden dark:block" viewBox="0 0 440 376" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" fill="black"/>
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" fill="black"/>
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" fill="#391800"/>
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" fill="#391800"/>
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4" style="mix-blend-mode:hard-light">
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" fill="#733000"/>
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" fill="#733000"/>
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.726 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.467 355.363L188.798 355.363C195.644 348.478 205.969 339.393 219.772 328.11C233.133 316.826 243.181 307.837 249.917 301.144C253.696 297.217 256.792 293.166 259.205 288.991C261.024 285.845 262.455 282.628 263.499 279.341C265.928 271.691 264.768 263.753 260.02 255.529C254.719 246.349 247.265 238.985 237.657 233.438C228.16 227.7 218.111 224.831 207.51 224.83C197.13 224.83 190.339 227.603 187.137 233.149C183.824 238.504 184.929 245.963 190.45 255.527L125.851 255.524C116.574 239.458 112.598 225.114 113.923 212.491C114.615 206.836 116.261 201.756 118.859 197.253C122.061 191.704 126.709 187.03 132.805 183.229C143.958 176.153 158.81 172.615 177.362 172.616C196.797 172.617 216.067 176.156 235.171 183.233C254.164 190.119 271.502 199.874 287.183 212.497C302.864 225.121 315.343 239.466 324.62 255.532C333.233 270.45 337.044 283.551 336.05 294.835C335.46 303.459 333.16 311.245 329.151 318.194C327.915 320.337 326.515 322.4 324.953 324.384C318.549 332.799 308.611 343.127 295.139 355.367L377.297 355.37L406.121 405.289L217.29 405.282L188.467 355.363Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M9.32197 225.972L-13.5365 225.971L-42.5255 175.765L43.2765 175.768L175.798 405.282L112.854 405.279L9.32197 225.972Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M345.247 111.915C329.566 99.2919 312.229 89.5371 293.235 82.6512L235.167 183.228C254.161 190.114 271.498 199.869 287.179 212.492L345.247 111.915Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M382.686 154.964C373.41 138.898 360.931 124.553 345.25 111.93L287.182 212.506C302.863 225.13 315.342 239.475 324.618 255.541L382.686 154.964Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M293.243 82.6472C274.139 75.57 254.869 72.031 235.434 72.0303L177.366 172.607C196.801 172.608 216.071 176.147 235.175 183.224L293.243 82.6472Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M394.118 194.257C395.112 182.973 391.301 169.872 382.688 154.953L324.619 255.53C333.233 270.448 337.044 283.55 336.05 294.834L394.118 194.257Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M235.432 72.0311C216.88 72.0304 202.027 75.5681 190.875 82.6442L132.806 183.221C143.959 176.145 158.812 172.607 177.363 172.608L235.432 72.0311Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M265.59 124.25C276.191 124.251 286.24 127.12 295.737 132.858L237.669 233.435C228.172 227.697 218.123 224.828 207.522 224.827L265.59 124.25Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M295.719 132.859C305.326 138.406 312.78 145.77 318.081 154.95L260.013 255.527C254.712 246.347 247.258 238.983 237.651 233.436L295.719 132.859Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M387.218 217.608C391.227 210.66 393.527 202.874 394.117 194.25L336.049 294.827C335.459 303.451 333.159 311.237 329.15 318.185L387.218 217.608Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M245.211 132.577C248.413 127.03 255.204 124.257 265.584 124.258L207.516 224.835C197.136 224.834 190.345 227.607 187.143 233.154L245.211 132.577Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M318.094 154.945C322.842 163.17 324.002 171.107 321.573 178.757L263.505 279.334C265.934 271.684 264.774 263.746 260.026 255.522L318.094 154.945Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M176.925 96.6737C180.127 91.1249 184.776 86.4503 190.871 82.6499L132.803 183.227C126.708 187.027 122.059 191.702 118.857 197.25L176.925 96.6737Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M387.226 217.606C385.989 219.749 384.59 221.813 383.028 223.797L324.96 324.373C326.522 322.39 327.921 320.326 329.157 318.183L387.226 217.606Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M317.269 188.408C319.087 185.262 320.519 182.045 321.562 178.758L263.494 279.335C262.451 282.622 261.019 285.839 259.201 288.985L317.269 188.408Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M245.208 132.573C241.895 137.928 243 145.387 248.522 154.95L190.454 255.527C184.932 245.964 183.827 238.505 187.14 233.15L245.208 132.573Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M176.93 96.6719C174.331 101.175 172.686 106.255 171.993 111.91L113.925 212.487C114.618 206.831 116.263 201.752 118.862 197.249L176.93 96.6719Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M317.266 188.413C314.853 192.589 311.757 196.64 307.978 200.566L249.91 301.143C253.689 297.216 256.785 293.166 259.198 288.99L317.266 188.413Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M464.198 304.708L435.375 254.789L377.307 355.366L406.13 405.285L464.198 304.708Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M353.209 254.787C366.68 242.548 376.618 232.22 383.023 223.805L324.955 324.382C318.55 332.797 308.612 343.124 295.141 355.364L353.209 254.787Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M435.37 254.787L353.212 254.784L295.144 355.361L377.302 355.364L435.37 254.787Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M183.921 154.947L248.521 154.95L190.453 255.527L125.853 255.524L183.921 154.947Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M171.992 111.914C170.668 124.537 174.643 138.881 183.92 154.947L125.852 255.524C116.575 239.458 112.599 225.114 113.924 212.491L171.992 111.914Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M307.987 200.562C301.251 207.256 291.203 216.244 277.842 227.528L219.774 328.105C233.135 316.821 243.183 307.832 249.919 301.139L307.987 200.562Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M15.5469 75.1797L44.5359 125.386L-13.5321 225.963L-42.5212 175.756L15.5469 75.1797Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M277.836 227.536C264.033 238.82 253.708 247.904 246.862 254.789L188.794 355.366C195.64 348.481 205.965 339.397 219.768 328.113L277.836 227.536Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M275.358 304.706L464.189 304.713L406.12 405.29L217.29 405.283L275.358 304.706Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M44.5279 125.39L67.3864 125.39L9.31834 225.967L-13.5401 225.966L44.5279 125.39Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M101.341 75.1911L233.863 304.705L175.795 405.282L43.2733 175.768L101.341 75.1911ZM15.5431 75.19L-42.525 175.767L43.277 175.77L101.345 75.1932L15.5431 75.19Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M246.866 254.784L246.534 254.784L188.466 355.361L188.798 355.361L246.866 254.784Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M246.539 254.781L275.362 304.701L217.294 405.277L188.471 355.358L246.539 254.781Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M67.3906 125.391L170.923 304.698L112.855 405.275L9.32257 225.967L67.3906 125.391Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M170.921 304.699L233.865 304.701L175.797 405.278L112.853 405.276L170.921 304.699Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4" style="mix-blend-mode:hard-light">
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" fill="#4B0600"/>
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="round"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4" style="mix-blend-mode:hard-light">
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" fill="#4B0600"/>
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                    </svg>
                    <div class="absolute inset-0 rounded-t-lg lg:rounded-t-none lg:rounded-r-lg shadow-[inset_0px_0px_0px_1px_rgba(26,26,0,0.16)] dark:shadow-[inset_0px_0px_0px_1px_#fffaed2d]"></div>
                </div>
            </main>
        </div>

        @if (Route::has('login'))
            <div class="h-14.5 hidden lg:block"></div>
        @endif
    </body>
</html>

└── routes/
    ├── api.php
<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider and all of them will
| be assigned to the "api" middleware group. Make something great!
|
*/

Route::middleware('auth:sanctum')->get('/user', function (Request $request) {
    return $request->user();
});
    ├── auth.php
<?php

use App\Http\Controllers\Auth\AuthenticatedSessionController;
use App\Http\Controllers\Auth\ConfirmablePasswordController;
use App\Http\Controllers\Auth\EmailVerificationNotificationController;
use App\Http\Controllers\Auth\EmailVerificationPromptController;
use App\Http\Controllers\Auth\NewPasswordController;
use App\Http\Controllers\Auth\PasswordController;
use App\Http\Controllers\Auth\PasswordResetLinkController;
use App\Http\Controllers\Auth\RegisteredUserController;
use App\Http\Controllers\Auth\VerifyEmailController;
use Illuminate\Support\Facades\Route;

Route::middleware('guest')->group(function () {
    Route::get('register', [RegisteredUserController::class, 'create'])
        ->name('register');

    Route::post('register', [RegisteredUserController::class, 'store']);

    Route::get('login', [AuthenticatedSessionController::class, 'create'])
        ->name('login');

    Route::post('login', [AuthenticatedSessionController::class, 'store']);

    Route::get('forgot-password', [PasswordResetLinkController::class, 'create'])
        ->name('password.request');

    Route::post('forgot-password', [PasswordResetLinkController::class, 'store'])
        ->name('password.email');

    Route::get('reset-password/{token}', [NewPasswordController::class, 'create'])
        ->name('password.reset');

    Route::post('reset-password', [NewPasswordController::class, 'store'])
        ->name('password.store');
});

Route::middleware('auth')->group(function () {
    Route::get('verify-email', EmailVerificationPromptController::class)
        ->name('verification.notice');

    Route::get('verify-email/{id}/{hash}', VerifyEmailController::class)
        ->middleware(['signed', 'throttle:6,1'])
        ->name('verification.verify');

    Route::post('email/verification-notification', [EmailVerificationNotificationController::class, 'store'])
        ->middleware('throttle:6,1')
        ->name('verification.send');

    Route::get('confirm-password', [ConfirmablePasswordController::class, 'show'])
        ->name('password.confirm');

    Route::post('confirm-password', [ConfirmablePasswordController::class, 'store']);

    Route::put('password', [PasswordController::class, 'update'])->name('password.update');

    Route::post('logout', [AuthenticatedSessionController::class, 'destroy'])
        ->name('logout');
});

    ├── console.php
<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote');

    └── web.php
<?php

use App\Http\Controllers\ProfileController;
use App\Http\Controllers\HomeController;
use App\Http\Controllers\CourseController;
use App\Http\Controllers\ModuleController;
use App\Http\Controllers\ForumController;
use App\Http\Controllers\HomeworkController;
use Illuminate\Support\Facades\Route;

// Public routes
Route::get('/', [HomeController::class, 'index'])->name('home');

// Courses routes - urutan penting!
Route::get('/courses', [CourseController::class, 'index'])->name('courses.index');
Route::get('/courses/create', [CourseController::class, 'create'])->name('courses.create')->middleware(['auth', 'role:teacher,expert,moderator,admin']);
Route::post('/courses', [CourseController::class, 'store'])->name('courses.store')->middleware(['auth', 'role:teacher,expert,moderator,admin']);
Route::get('/courses/{slug}', [CourseController::class, 'show'])->name('courses.show');
Route::get('/courses/{slug}/edit', [CourseController::class, 'edit'])->name('courses.edit')->middleware(['auth', 'role:teacher,expert,moderator,admin']);
Route::put('/courses/{slug}', [CourseController::class, 'update'])->name('courses.update')->middleware(['auth', 'role:teacher,expert,moderator,admin']);
Route::delete('/courses/{slug}', [CourseController::class, 'destroy'])->name('courses.destroy')->middleware(['auth', 'role:teacher,expert,moderator,admin']);
Route::get('/courses/{slug}/learn', [CourseController::class, 'learn'])->name('courses.learn')->middleware('auth');

// Forum routes - urutan penting!
Route::get('/forum', [ForumController::class, 'index'])->name('forum.index');
Route::get('/forum/search', [ForumController::class, 'search'])->name('forum.search');
Route::get('/forum/create', [ForumController::class, 'create'])->name('forum.create')->middleware('auth');
Route::post('/forum', [ForumController::class, 'store'])->name('forum.store')->middleware('auth');
Route::get('/forum/{category}', [ForumController::class, 'category'])->name('forum.category');
Route::get('/forum/{category}/{thread}', [ForumController::class, 'show'])->name('forum.thread');
Route::get('/forum/{category}/{thread}/edit', [ForumController::class, 'edit'])->name('forum.edit')->middleware(['auth', 'role:teacher,expert,moderator,admin']);
Route::put('/forum/{category}/{thread}', [ForumController::class, 'update'])->name('forum.update')->middleware(['auth', 'role:teacher,expert,moderator,admin']);
Route::delete('/forum/{category}/{thread}', [ForumController::class, 'destroy'])->name('forum.destroy')->middleware(['auth', 'role:teacher,expert,moderator,admin']);

Route::get('/profile/{id}', [ProfileController::class, 'show'])->name('profile.show');

// Authentication required routes
Route::middleware('auth')->group(function () {
    // Dashboard
    Route::get('/dashboard', [HomeController::class, 'dashboard'])->name('dashboard');

    // Profile management
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');

    // Course enrollment and learning
    Route::post('/courses/{id}/enroll', [CourseController::class, 'enroll'])->name('courses.enroll');
    Route::post('/courses/{course}/modules/{module}/complete', [CourseController::class, 'completeModule'])->name('courses.complete-module');

    // Forum participation
    Route::post('/forum/{category}/{thread}/reply', [ForumController::class, 'reply'])->name('forum.reply');
    Route::post('/forum/reply/{reply}/upvote', [ForumController::class, 'upvote'])->name('forum.reply.upvote');
    Route::post('/forum/reply/{reply}/best-answer', [ForumController::class, 'markBestAnswer'])->name('forum.reply.best-answer');

    // Homework
    Route::resource('homework', HomeworkController::class);
    Route::post('/homework/{homework}/answer', [HomeworkController::class, 'answer'])->name('homework.answer');
    Route::post('/homework/answer/{answer}/upvote', [HomeworkController::class, 'upvoteAnswer'])->name('homework.answer.upvote');
    Route::post('/homework/answer/{answer}/best-answer', [HomeworkController::class, 'markBestAnswer'])->name('homework.answer.best-answer');

    // Module management routes
    Route::get('/courses/{course}/modules/create', [ModuleController::class, 'create'])->name('modules.create')->middleware('role:teacher,expert,moderator,admin');
    Route::post('/courses/{course}/modules', [ModuleController::class, 'store'])->name('modules.store')->middleware('role:teacher,expert,moderator,admin');
    Route::get('/courses/{course}/modules/{module}', [ModuleController::class, 'show'])->name('modules.show');
    Route::get('/courses/{course}/modules/{module}/edit', [ModuleController::class, 'edit'])->name('modules.edit')->middleware('role:teacher,expert,moderator,admin');
    Route::put('/courses/{course}/modules/{module}', [ModuleController::class, 'update'])->name('modules.update')->middleware('role:teacher,expert,moderator,admin');
    Route::delete('/courses/{course}/modules/{module}', [ModuleController::class, 'destroy'])->name('modules.destroy')->middleware('role:teacher,expert,moderator,admin');
    Route::delete('/courses/{course}/modules/{module}/attachment', [ModuleController::class, 'removeAttachment'])->name('modules.remove-attachment')->middleware('role:teacher,expert,moderator,admin');
});

// Moderator/Admin routes
Route::middleware(['auth', 'moderator'])->group(function () {
    Route::get('/admin', function () {
        return view('admin.index');
    })->name('admin.index');
});
// Tambahkan ini sementara di atas routes lain untuk debugging
Route::get('/test-auth', function() {
    if (auth()->check()) {
        return 'User: ' . auth()->user()->name . ' - Role: ' . auth()->user()->role;
    }
    return 'Not authenticated';
});

Route::get('/test-teacher', function() {
    if (auth()->check() && auth()->user()->isTeacher()) {
        return 'User can create courses';
    }
    return 'User cannot create courses';
})->middleware('auth');
require __DIR__.'/auth.php';